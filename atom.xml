<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>韩亚军</title>
  <icon>https://www.gravatar.com/avatar/88913b4bf98e936516111112c9264a09</icon>
  <subtitle>个人博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://hanyajun.com/"/>
  <updated>2020-01-02T17:14:47.249Z</updated>
  <id>https://hanyajun.com/</id>
  
  <author>
    <name>韩亚军</name>
    <email>hanyajun5876@163.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>go技术文章精选(2019)</title>
    <link href="https://hanyajun.com/golang/go_article_2019/"/>
    <id>https://hanyajun.com/golang/go_article_2019/</id>
    <published>2020-01-02T17:00:00.000Z</published>
    <updated>2020-01-02T17:14:47.249Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="gocn_news_set_2019">gocn_news_set_2019</h1><h2 id="gocn_news_2019-12-31">gocn_news_2019-12-31</h2><ul><li><ol><li>Go 系列教程：<a href="https://dev.to/digitalocean/how-to-code-in-go-32p0" target="_blank" rel="noopener">https://dev.to/digitalocean/how-to-code-in-go-32p0</a></li></ol></li><li><ol start="2"><li>Go modules：最小版本选择 <a href="https://tonybai.com/2019/12/21/go-modules-minimal-version-selection/" target="_blank" rel="noopener">https://tonybai.com/2019/12/21/go-modules-minimal-version-selection/</a></li></ol></li><li><ol start="3"><li>部署服务到 Heroku：<a href="https://dev.to/cishiv/deploying-to-heroku-docker-go-and-react-38hh" target="_blank" rel="noopener">https://dev.to/cishiv/deploying-to-heroku-docker-go-and-react-38hh</a></li></ol></li><li><ol start="4"><li>为什么 MongoDB 使用 B 树: <a href="https://draveness.me/whys-the-design-mongodb-b-tree" target="_blank" rel="noopener">https://draveness.me/whys-the-design-mongodb-b-tree</a></li></ol></li><li><ol start="5"><li>Vugu 框架简介   <a href="https://blog.gopheracademy.com/advent-2019/writing-go-user-interfaces-with-vugu/%E3%80%90%E6%B4%BB%E5%8A%A8%E3%80%91%E6%B7%B1%E5%9C%B3meetup" target="_blank" rel="noopener">https://blog.gopheracademy.com/advent-2019/writing-go-user-interfaces-with-vugu/【活动】深圳meetup</a> <a href="https://www.bagevent.com/event/6218960-" target="_blank" rel="noopener">https://www.bagevent.com/event/6218960-</a></li></ol></li></ul><h2 id="go语言中文网每日资讯_2019-12-31">go语言中文网(每日资讯)_2019-12-31</h2><h3 id="一-golang来啦">一、Golang来啦</h3><p>1.<a href="https://mp.weixin.qq.com/s/FuqUhWXQtHfFa7Mce_AGVA" target="_blank" rel="noopener">Go 面试每天一篇（第 120 天）</a></p><h3 id="二-go语言中文网">二、Go语言中文网</h3><p>1.<a href="https://mp.weixin.qq.com/s/Ry1-ke62GXWNoN-4dUjKeQ" target="_blank" rel="noopener">Go 不通过标准 C 库进行系统调用的一些原因</a></p><p>2.<a href="https://mp.weixin.qq.com/s/LOFoR9QUgnBss_zLNhzphw" target="_blank" rel="noopener">再谈如何处理 Go 语言中的错误</a></p><p>3.<a href="https://mp.weixin.qq.com/s/uMqR--NZ46n9gkH7lNBTXQ" target="_blank" rel="noopener">一起攻克面试难关：Go 面试每天一篇（第 101 天）</a></p><p>4.<a href="https://mp.weixin.qq.com/s/Pd4No6XVd2UNMoTfG9gUyg" target="_blank" rel="noopener">创业公司更适合用 Go 语言，那大公司呢？</a></p><p>5.<a href="https://mp.weixin.qq.com/s/ZfHa7gpmmYdkvgkDOBF0ig" target="_blank" rel="noopener">Go 刷 LeetCode 系列：滑动窗口（1）</a></p><h3 id="三-go夜读">三、Go夜读</h3><p>1.<a href="https://mp.weixin.qq.com/s/nWIBgCKc1J5a2dCrLJIPJA" target="_blank" rel="noopener">第 74 期 Go time.Timer 源码分析 (Go 1.14)</a></p><h3 id="四-火丁笔记">四、火丁笔记</h3><p>1.<a href="https://mp.weixin.qq.com/s/bMIs-wWpImBDRSPcbbhpwg" target="_blank" rel="noopener">Go需要依赖注入吗？如何像 Java 一样方便的实现依赖注入？</a></p><p>2.<a href="https://mp.weixin.qq.com/s/b5FbXQRUBjkocNqvgjnoUQ" target="_blank" rel="noopener">Go语言爱好者周刊：第 23 期</a></p><h2 id="go语言中文网每日资讯_2019-12-30">go语言中文网(每日资讯)_2019-12-30</h2><h3 id="一-golang来啦">一、Golang来啦</h3><p>1.<a href="https://mp.weixin.qq.com/s/6YXBoPiOTSQzwf9B6b3TLA" target="_blank" rel="noopener">Go 面试每天一篇（第 119 天）</a></p><h3 id="二-go语言中文网">二、Go语言中文网</h3><p>1.<a href="https://mp.weixin.qq.com/s/xXTsroriaub61Sjx8LuHKA" target="_blank" rel="noopener">谁拔了我的网线？Go 网络异常对程序行为的影响</a></p><p>2.<a href="https://mp.weixin.qq.com/s/F4eBRyggKoKFzgbl5dOuZA" target="_blank" rel="noopener">一起攻克面试难关：Go 面试每天一篇（第 100 天）</a></p><p>3.<a href="https://mp.weixin.qq.com/s/uJ3KZ3gw2pCIdHQhNxKRjg" target="_blank" rel="noopener">Go 编程：写一个程序友好的命令行工具包</a></p><p>4.<a href="https://mp.weixin.qq.com/s/cxAdWg0jqnNovE47YGWjUA" target="_blank" rel="noopener">如何正确的开始用Go编程</a></p><h2 id="go语言中文网每日资讯_2019-12-29">go语言中文网(每日资讯)_2019-12-29</h2><p>一、Golang来啦</p><p>1.<a href="https://mp.weixin.qq.com/s/AyhtjQz8W8yRTNNJ-7bPuA" target="_blank" rel="noopener">Go 面试每天一篇（第 118天）</a></p><p>二、Go语言中文网</p><p>1.<a href="https://mp.weixin.qq.com/s/9iDpm07ilGa3Kot3A8RpTQ" target="_blank" rel="noopener">Go语言爱好者周刊：第 23 期</a></p><p>2.<a href="https://mp.weixin.qq.com/s/wqvXAQook-C95vzjxmPH-w" target="_blank" rel="noopener">Go 项目开发中 10 个最常见的错误</a></p><p>3.<a href="https://mp.weixin.qq.com/s/iv_SriGRGwxeEHGWbhZmeg" target="_blank" rel="noopener">一起攻克面试难关：Go 面试每天一篇（第 99 天）</a></p><p>4.<a href="https://mp.weixin.qq.com/s/EvUEwybO2OgEz0Pz9c07qQ" target="_blank" rel="noopener">Go 编程: 快速生成自签名证书与双向认证(mTLS)</a></p><p>5.<a href="https://mp.weixin.qq.com/s/TfGjQf_FGW-7604iClHI1Q" target="_blank" rel="noopener">Go 语言面向对象教程 — 类属性和方法的可见性</a></p><p>三、容器时代</p><p>1.<a href="https://mp.weixin.qq.com/s/F1vzRFepX6ZbrdtHDH9uZw" target="_blank" rel="noopener">使用 kind 部署单机版 kubernetes 集群</a></p><p>四、prometheus专题</p><p>1.<a href="https://www.yuque.com/wegoer/set/topic-prometheus" target="_blank" rel="noopener">prometheus专题</a></p><h2 id="gocn_news_2019-12-29">gocn_news_2019-12-29</h2><ul><li><ol><li>Go依赖注入工具 wire 与 dig 对比 <a href="https://medium.com/@hippik80/go-%D1%81omparing-dependency-injection-approaches-23cb9772a016" target="_blank" rel="noopener">https://medium.com/@hippik80/go-сomparing-dependency-injection-approaches-23cb9772a016</a></li></ol></li><li><ol start="2"><li>为 ARM Socs 打造的裸金属框架 tamago <a href="https://www.youtube.com/watch?v=4QircrJjEtQ" target="_blank" rel="noopener">https://www.youtube.com/watch?v=4QircrJjEtQ</a></li></ol></li><li><ol start="3"><li>为 Prometheus 准备的 sql.DBStates 收集库 sqlstats <a href="https://github.com/dlmiddlecote/sqlstats" target="_blank" rel="noopener">https://github.com/dlmiddlecote/sqlstats</a></li></ol></li><li><ol start="4"><li>断路器模式介绍 <a href="https://medium.com/@mssr/the-circuit-breaker-pattern-85e28c8e01b7" target="_blank" rel="noopener">https://medium.com/@mssr/the-circuit-breaker-pattern-85e28c8e01b7</a></li></ol></li><li><ol start="5"><li>Goroutine 与抢占 <a href="https://medium.com/a-journey-with-go/go-goroutine-and-preemption-d6bc2aa2f4b7%E3%80%90%E6%B4%BB%E5%8A%A8%E3%80%91%E6%B7%B1%E5%9C%B3meetup" target="_blank" rel="noopener">https://medium.com/a-journey-with-go/go-goroutine-and-preemption-d6bc2aa2f4b7【活动】深圳meetup</a> <a href="https://www.bagevent.com/event/6218960" target="_blank" rel="noopener">https://www.bagevent.com/event/6218960</a></li></ol></li></ul><h2 id="go语言中文网每日资讯_2019-12-28">go语言中文网(每日资讯)_2019-12-28</h2><p>一、Golang来啦</p><p>1.<a href="https://mp.weixin.qq.com/s/kXrCCAmbL_jT1XDWTE3yOQ" target="_blank" rel="noopener">Go 面试每天一篇（第 117天）</a></p><p>二、Go语言中文网</p><p>1.<a href="https://mp.weixin.qq.com/s/g412oBwHXO_B5Axncn34Aw" target="_blank" rel="noopener">大神是如何学习 Go 语言之写出优雅的 Go 代码</a></p><p>2.<a href="https://mp.weixin.qq.com/s/kMlB5RbEUucNp_IiRhryBw" target="_blank" rel="noopener">利用 CPU cache 特性优化 Go 程序</a></p><p>3.<a href="https://mp.weixin.qq.com/s/NEibXSUYZxrg2y5Iblf44A" target="_blank" rel="noopener">一起攻克面试难关：Go 面试每天一篇（第 98 天）</a></p><p>4.<a href="https://mp.weixin.qq.com/s/K4XXf9AmorO4IyDGXmhn9A" target="_blank" rel="noopener">阿里云高级技术专家探讨 Go 的错误处理</a></p><p>三、新亮笔记</p><p>1.<a href="https://mp.weixin.qq.com/s/Uxle4PATTL3xT4grJR0Xcw" target="_blank" rel="noopener">Go - 如何解析 JSON 数据？</a></p><p>四、Go夜读</p><p>1.[趣头条在长链接方面的实践-qrpcPPT分享](</p><h2 id="gocn_news_2019-12-28">gocn_news_2019-12-28</h2><ul><li><ol><li>如何正确的开始用 Go 编程 <a href="https://segmentfault.com/a/1190000021426712" target="_blank" rel="noopener">https://segmentfault.com/a/1190000021426712</a></li></ol></li><li><ol start="2"><li>Golang内存分配 <a href="https://www.cnblogs.com/33debug/p/12068699.html" target="_blank" rel="noopener">https://www.cnblogs.com/33debug/p/12068699.html</a></li></ol></li><li><ol start="3"><li>GOMAXPROCS 与容器的相处之道 <a href="http://gaocegege.com/Blog/maxprocs-cpu" target="_blank" rel="noopener">http://gaocegege.com/Blog/maxprocs-cpu</a></li></ol></li><li><ol start="4"><li>使用多阶段构建的精益Golang Docker镜像 <a href="https://medium.com/tourradar/lean-golang-docker-images-using-multi-stage-builds-1015a6b4d1d1" target="_blank" rel="noopener">https://medium.com/tourradar/lean-golang-docker-images-using-multi-stage-builds-1015a6b4d1d1</a></li></ol></li><li><ol start="5"><li>您需要了解的有关Kubernetes服务质量（QoS） <a href="https://segmentfault.com/a/1190000021428126*" target="_blank" rel="noopener">https://segmentfault.com/a/1190000021428126*</a> 【活动】深圳meetup <a href="https://www.bagevent.com/event/6218960" target="_blank" rel="noopener">https://www.bagevent.com/event/6218960</a></li></ol></li></ul><h2 id="go语言中文网每日资讯_2019-12-27">go语言中文网(每日资讯)_2019-12-27</h2><h3 id="一-golang来啦">一、Golang来啦</h3><p>1.<a href="https://mp.weixin.qq.com/s/gBuiDHWB2Nz9tKxzEdZPbw" target="_blank" rel="noopener">Go 面试每天一篇（第 116 天）</a></p><h3 id="二-go语言中文网">二、Go语言中文网</h3><p>1.<a href="https://mp.weixin.qq.com/s/Ino1fBNEu2ANuwksZtCXbg" target="_blank" rel="noopener">使用 CGO 和 GoReleaser 进行跨平台编译</a></p><p>2.<a href="https://mp.weixin.qq.com/s/62F6bd4UXiqWC8f8i7GBGQ" target="_blank" rel="noopener">大神是如何学习 Go 语言之浅入浅出接口的原理</a></p><p>3.<a href="https://mp.weixin.qq.com/s/fZN_0GuOhfZQt5_JMD-C5w" target="_blank" rel="noopener">一起攻克面试难关：Go 面试每天一篇（第 97 天）</a></p><p>4.<a href="https://mp.weixin.qq.com/s/GljmVl3kElXWX-7_ePC6kA" target="_blank" rel="noopener">既然有了 Docker，为什么还要 Kubernetes？</a></p><h3 id="三-容器时代">三、容器时代</h3><p>1.<a href="https://mp.weixin.qq.com/s/uyLO9oKaLkIbg1nsM5Me0Q" target="_blank" rel="noopener">基于IPVS的集群内负载均衡的深入理解</a></p><h3 id="四-51cto技术栈">四、51CTO技术栈</h3><p>1.<a href="https://mp.weixin.qq.com/s/Ul5f4xcHvTShOF9smHHUjQ" target="_blank" rel="noopener">为什么我们放弃Zabbix采用Prometheus？</a></p><h2 id="gocn_news_2019-12-27">gocn_news_2019-12-27</h2><ul><li><ol><li>Go 开发关键技术指南 | Go 面向失败编程 <a href="https://mp.weixin.qq.com/s/1zWdSV8FmwkduX4Hfbztgw" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/1zWdSV8FmwkduX4Hfbztgw</a></li></ol></li><li><ol start="2"><li>Go 正则表达式入门指南 <a href="https://medium.com/@arindamroy/guide-to-using-regular-expressions-in-golang-18a821ba1c16" target="_blank" rel="noopener">https://medium.com/@arindamroy/guide-to-using-regular-expressions-in-golang-18a821ba1c16</a></li></ol></li><li><ol start="3"><li>Golang 错误处理最佳实践 <a href="https://medium.com/@dche423/golang-error-handling-best-practice-cn-42982bd72672" target="_blank" rel="noopener">https://medium.com/@dche423/golang-error-handling-best-practice-cn-42982bd72672</a></li></ol></li><li><ol start="4"><li>go-term-markdown: Go Markdown终端渲染库  <a href="https://github.com/MichaelMure/go-term-markdown" target="_blank" rel="noopener">https://github.com/MichaelMure/go-term-markdown</a></li></ol></li><li><ol start="5"><li>无需CGO的Go SQLite连接库 <a href="https://godoc.org/modernc.org/sqlite" target="_blank" rel="noopener">https://godoc.org/modernc.org/sqlite</a>    * 【活动】深圳meetup <a href="https://www.bagevent.com/event/6218960" target="_blank" rel="noopener">https://www.bagevent.com/event/6218960</a></li></ol></li></ul><h2 id="go语言中文网每日资讯_2019-12-26">go语言中文网(每日资讯)_2019-12-26</h2><h3 id="一-golang来啦">一、Golang来啦</h3><p>1.<a href="https://mp.weixin.qq.com/s/O3vUC-TlkH2fl17nyncbUQ" target="_blank" rel="noopener">Go 面试每天一篇（第 115 天）</a></p><h3 id="二-go语言中文网">二、Go语言中文网</h3><p>1.<a href="https://mp.weixin.qq.com/s/2VI8xO7v3JKq2D071bgqfw" target="_blank" rel="noopener">我是如何在大型代码库上使用 pprof 探索 Go 中的内存泄漏</a></p><p>2.<a href="https://mp.weixin.qq.com/s/P8xh9FQNKQevGWuejVr83w" target="_blank" rel="noopener">100 行左右有效 Go 代码实现 tcp server &amp; graceful shutdown</a></p><p>3.<a href="https://mp.weixin.qq.com/s/XW7TTr941fUDf9D2HyKwgw" target="_blank" rel="noopener">一起攻克面试难关：Go 面试每天一篇（第 96 天）</a></p><p>4.<a href="https://mp.weixin.qq.com/s/-6gOVw3Ws4kIuIQa22dr6g" target="_blank" rel="noopener">Go 语言面向对象教程 — 通过组合实现类的继承</a></p><p>5.<a href="https://mp.weixin.qq.com/s/Y5m7R7_S5z_O4N79H5_J_A" target="_blank" rel="noopener">Go 刷 LeetCode 系列：二叉树链表相互转换</a></p><h3 id="三-21天大棚">三、21天大棚</h3><p>1.<a href="https://mp.weixin.qq.com/s/wZWyuj6SrA_AjmQBHW3Yvw" target="_blank" rel="noopener">图解Go里面的WaitGroup了解编程语言核心实现源码</a></p><h3 id="四-go夜读">四、Go夜读</h3><p>1.<a href="https://mp.weixin.qq.com/s/1A8Y_1ZinCqda9A6YD0j3A" target="_blank" rel="noopener">第 73 期趣头条在长连接方面的实践 - qrpc</a></p><h3 id="五-阿里巴巴云原生">五、阿里巴巴云原生</h3><p>1.<a href="https://mp.weixin.qq.com/s/aMKhU9rG_Al-sA5DAFji_g" target="_blank" rel="noopener">Go 开发关键技术指南 | Go 面向失败编程 (内含超全知识大图）</a></p><h2 id="gocn_news_2019-12-26">gocn_news_2019-12-26</h2><ul><li><ol><li>Java JIT vs Java AOT vs Go适用于短期的小型进程 <a href="http://macias.info/entry/201912201300_graal_aot.md" target="_blank" rel="noopener">http://macias.info/entry/201912201300_graal_aot.md</a></li></ol></li><li><ol start="2"><li>LBADD：一个实验性的分布式SQL数据库 <a href="https://github.com/tomarrell/lbadd" target="_blank" rel="noopener">https://github.com/tomarrell/lbadd</a></li></ol></li><li><ol start="3"><li>将现有的Rest API迁移到Graphql <a href="https://blog.spaceuptech.com/posts/migrating-existing-rest-apis-to-graphql/" target="_blank" rel="noopener">https://blog.spaceuptech.com/posts/migrating-existing-rest-apis-to-graphql/</a></li></ol></li><li><ol start="4"><li>使用Go开发百万WebSockets <a href="https://gbws.io/articles/million-websocket-and-go/" target="_blank" rel="noopener">https://gbws.io/articles/million-websocket-and-go/</a></li></ol></li><li><ol start="5"><li>Eris处理跟踪和记录Go中的错误 <a href="https://github.com/rotisserie/eris" target="_blank" rel="noopener">https://github.com/rotisserie/eris</a></li></ol></li></ul><h2 id="go语言中文网每日资讯_2019-12-25">go语言中文网(每日资讯)_2019-12-25</h2><h3 id="一-golang来啦">一、Golang来啦</h3><p>1.<a href="https://mp.weixin.qq.com/s/qe540In6Xav29_iYp9po1A" target="_blank" rel="noopener">Go 面试每天一篇（第 114 天）</a></p><h3 id="二-go语言中文网">二、Go语言中文网</h3><p>1.<a href="https://mp.weixin.qq.com/s/zpVVzCknQ3nmdf2qIWeCvw" target="_blank" rel="noopener">大神是如何学习 Go 语言之 make 和 new</a></p><p>2.<a href="https://mp.weixin.qq.com/s/iKhQsRYOtE8W7o1CQEMq8g" target="_blank" rel="noopener">Go编程： 那些隐晦的操作符</a></p><p>3.<a href="https://mp.weixin.qq.com/s/Eh-9P-yOoQ1Gbe_XC-olfg" target="_blank" rel="noopener">一起攻克面试难关：Go 面试每天一篇（第 95 天）</a></p><p>4.<a href="https://mp.weixin.qq.com/s/HqdX9vm8LhwOb4hLoX13iQ" target="_blank" rel="noopener">Go 语言面向对象教程 — 为基本类型添加成员方法</a></p><p>5.<a href="https://mp.weixin.qq.com/s/PkuspIWKQpL7awtpCg-rOA" target="_blank" rel="noopener">别告诉我这是真的？goroutine 可能使程序变慢</a></p><h3 id="三-我的小碗汤">三、我的小碗汤</h3><p>1.<a href="https://mp.weixin.qq.com/s/gdLhSqAd2JESnb3XeGKpIA" target="_blank" rel="noopener">一次 HTTP 请求到底经历了什么？</a></p><h3 id="四-学院君的后花园">四、学院君的后花园</h3><p>1.<a href="https://mp.weixin.qq.com/s/zuDr2S4XwzoHgkz3xqNisA" target="_blank" rel="noopener">Go 语言 Web 编程系列（五）—— 基于 gorilla/mux 包实现路由匹配：进阶使用篇</a></p><h3 id="五-容器时代">五、容器时代</h3><p>1.<a href="https://mp.weixin.qq.com/s/YDyYQ50BhUXlO4PXnovzWQ" target="_blank" rel="noopener">从零开始入门 K8s | Kubernetes 调度和资源管理</a></p><h2 id="gocn_news_2019-12-25">gocn_news_2019-12-25</h2><ul><li><ol><li>[译] Go反射的三个原则 <a href="https://sevenyu.top/2019/12/21/laws-of-reflection.html" target="_blank" rel="noopener">https://sevenyu.top/2019/12/21/laws-of-reflection.html</a></li></ol></li><li><ol start="2"><li>你应该掌握的 Go 高级并发模式：计时器 <a href="https://developer.51cto.com/art/201912/608341.htm" target="_blank" rel="noopener">https://developer.51cto.com/art/201912/608341.htm</a></li></ol></li><li><ol start="3"><li>别告诉我这是真的？goroutine 可能使程序变慢 <a href="https://mp.weixin.qq.com/s/PkuspIWKQpL7awtpCg-rOA" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/PkuspIWKQpL7awtpCg-rOA</a></li></ol></li><li><ol start="4"><li>Go 内存分配器可视化指南 <a href="https://mp.weixin.qq.com/s/RYtc5oZ4CmQZouLIcsloDw" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/RYtc5oZ4CmQZouLIcsloDw</a></li></ol></li><li><ol start="5"><li>Coca: 系统重构和系统分析工具箱 <a href="https://github.com/phodal/coca*" target="_blank" rel="noopener">https://github.com/phodal/coca*</a> 【活动】深圳meetup <a href="https://www.bagevent.com/event/6218960-" target="_blank" rel="noopener">https://www.bagevent.com/event/6218960-</a></li></ol></li></ul><h2 id="go语言中文网每日资讯_2019-12-24">go语言中文网(每日资讯)_2019-12-24</h2><p>1.<a href="https://mp.weixin.qq.com/s/ER1OMleSpIOjOJKeJ_l5aQ" target="_blank" rel="noopener">Go 面试每天一篇（第 113 天）</a></p><h3 id="二-go语言中文网">二、Go语言中文网</h3><p>1.<a href="https://mp.weixin.qq.com/s/qC5iZ2gq_0EvSmnKCwB9og" target="_blank" rel="noopener">使用多年的 go pprof 检查内存泄漏的方法居然是错的?!</a></p><p>2.<a href="https://mp.weixin.qq.com/s/Xy6w1FAWFCDmId5JL8xFFw" target="_blank" rel="noopener">一起攻克面试难关：Go 面试每天一篇（第 94 天）</a></p><p>3.<a href="https://mp.weixin.qq.com/s/iRdKLWt0FTHoQyOQSwtHYg" target="_blank" rel="noopener">大神是如何学习 Go 语言之 panic 和 recover 的原理</a></p><p>4.<a href="https://mp.weixin.qq.com/s/s6aY4meCMXH5M7YQ-k9P8g" target="_blank" rel="noopener">微服务实战之 Go gRPC 调试工具</a></p><h3 id="三-我的小碗汤">三、我的小碗汤</h3><p>1.<a href="https://mp.weixin.qq.com/s/qN4hdG-nWFGDNT22KbtyxQ" target="_blank" rel="noopener">最全教程 | Kubernetes + Jenkins + Helm + Springboot 实践</a></p><h3 id="四-21天大棚">四、21天大棚</h3><p>1.<a href="https://mp.weixin.qq.com/s/OzwV23dVBNk-rDyoN61baw" target="_blank" rel="noopener">图解Go里面的互斥锁mutex了解编程语言核心实现源码</a></p><p>2.<a href="https://mp.weixin.qq.com/s/cvszEMmxfkOiYewEjEa9tA" target="_blank" rel="noopener">图解golang里面的读写锁实现与核心原理分析了解编程语言背后设计</a></p><h2 id="gocn_news_2019-12-24">gocn_news_2019-12-24</h2><ul><li><ol><li>基于 Go 的协同系统深度实践 <a href="https://mp.weixin.qq.com/s/Mvqr7ieIRTl58pQpmApoPA" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/Mvqr7ieIRTl58pQpmApoPA</a></li></ol></li><li><ol start="2"><li>迁移 REST APIs 到 GraphQL <a href="https://blog.spaceuptech.com/posts/migrating-existing-rest-apis-to-graphql/" target="_blank" rel="noopener">https://blog.spaceuptech.com/posts/migrating-existing-rest-apis-to-graphql/</a></li></ol></li><li><ol start="3"><li>Go 读写锁与源码实现 <a href="http://www.sreguide.com/2019/12/20/go/sync_reader_writer/" target="_blank" rel="noopener">http://www.sreguide.com/2019/12/20/go/sync_reader_writer/</a></li></ol></li><li><ol start="4"><li>图解 Go 互斥锁 mutex 核心实现源码 <a href="http://www.sreguide.com/2019/12/23/go/sync_mutex/" target="_blank" rel="noopener">http://www.sreguide.com/2019/12/23/go/sync_mutex/</a></li></ol></li><li><ol start="5"><li>GORM 之 ErrRecordNotFound 采坑记录 <a href="https://juejin.im/post/5dff33c7518825126131ce30*" target="_blank" rel="noopener">https://juejin.im/post/5dff33c7518825126131ce30*</a> 【活动】深圳meetup <a href="https://www.bagevent.com/event/6218960-" target="_blank" rel="noopener">https://www.bagevent.com/event/6218960-</a></li></ol></li></ul><h2 id="go语言中文网每日资讯_2019-12-23">go语言中文网(每日资讯)_2019-12-23</h2><h3 id="一-golang来啦">一、Golang来啦</h3><p>1.<a href="https://mp.weixin.qq.com/s/Hz_vcsSPJOHhP01D1HzCqw" target="_blank" rel="noopener">Go 面试每天一篇（第 112 天）</a></p><h3 id="二-go语言中文网">二、Go语言中文网</h3><p>1.<a href="https://mp.weixin.qq.com/s/11wxINd_RA40YD0bL2Zbqg" target="_blank" rel="noopener">Go：我应该用指针替代结构体的副本吗？</a></p><p>2.<a href="https://mp.weixin.qq.com/s/cvtO25Pf2bqeOutcgHSkQg" target="_blank" rel="noopener">一起攻克面试难关：Go 面试每天一篇（第 93 天）</a></p><p>3.<a href="https://mp.weixin.qq.com/s/9-eLJqYZrOpNLoiTGpBrKA" target="_blank" rel="noopener">大神是如何学习 Go 语言之浅谈 select 的实现原理</a></p><p>4.<a href="https://mp.weixin.qq.com/s/cvZgCdHGDwoH46XYmFxJ2Q" target="_blank" rel="noopener">Go 刷 LeetCode 系列：找出第 k 小</a></p><h3 id="三-我的小碗汤">三、我的小碗汤</h3><p>1.<a href="https://mp.weixin.qq.com/s/51KZoHW-ijCqCES9lDnxnQ" target="_blank" rel="noopener">如何利用curl命令访问Kubernetes API server</a></p><h3 id="四-go夜读">四、Go夜读</h3><ol><li><a href="https://mp.weixin.qq.com/s/6PkRxRXqCmkmKaOQqX4fzg" target="_blank" rel="noopener">第 72 期 Go-Micro 编写微服务实战（二） by 舒先</a></li></ol><h3 id="五-moelove">五、MoeLove</h3><p>1.<a href="https://mp.weixin.qq.com/s/tjUla_VlpgedPj31NAL6ww" target="_blank" rel="noopener">K8S 生态周报| TUF 正式从 CNCF 毕业</a></p><h3 id="六-我的网课">六、我的网课</h3><p>1.<a href="https://mp.weixin.qq.com/s/ytf7GcrOkjFKh43r8w2F3A" target="_blank" rel="noopener">在用户态观测 Linux 内核函数的调用情况（调用次数、入参回值、时长等）</a></p><h2 id="gocn_news_2019-12-23">gocn_news_2019-12-23</h2><ul><li><ol><li>如何调试K8s中的DNS问题 <a href="https://cilium.io/blog/2019/12/18/how-to-debug-dns-issues-in-k8s/" target="_blank" rel="noopener">https://cilium.io/blog/2019/12/18/how-to-debug-dns-issues-in-k8s/</a></li></ol></li><li><ol start="2"><li>在Go中实现简洁架构 <a href="https://medium.com/manato/clean-architecture-with-go-bce409427d31" target="_blank" rel="noopener">https://medium.com/manato/clean-architecture-with-go-bce409427d31</a></li></ol></li><li><ol start="3"><li>buf：一种新的Protobuf处理库 <a href="https://github.com/bufbuild/buf" target="_blank" rel="noopener">https://github.com/bufbuild/buf</a></li></ol></li><li><ol start="4"><li>在Go中高效处理JSON <a href="https://medium.com/tourradar/working-efficiently-with-json-in-go-cb80dcca0466" target="_blank" rel="noopener">https://medium.com/tourradar/working-efficiently-with-json-in-go-cb80dcca0466</a></li></ol></li><li><ol start="5"><li>Panic和崩溃例子集合 <a href="https://github.com/go101/go101/wiki/Panic-and-crash-cases*" target="_blank" rel="noopener">https://github.com/go101/go101/wiki/Panic-and-crash-cases*</a></li></ol></li></ul><h2 id="go语言中文网每日资讯_2019-12-22">go语言中文网(每日资讯)_2019-12-22</h2><h3 id="一-golang来啦">一、Golang来啦</h3><p>1.<a href="https://mp.weixin.qq.com/s/z1qX6UET0zA_NRlU5DmlKg" target="_blank" rel="noopener">Go 面试每天一篇（第 111 天)</a></p><h3 id="二-go语言中文网">二、Go语言中文网</h3><p>1.<a href="https://mp.weixin.qq.com/s/bUCqTWjfOgwxVlKYVN4E0A" target="_blank" rel="noopener">Go语言爱好者周刊：第 22 期</a></p><p>2.<a href="https://mp.weixin.qq.com/s/ElzD2dXWeldYkJmVVY6Djw" target="_blank" rel="noopener">大神是如何学习 Go 语言之 Channel 实现原理精要</a></p><p>3.<a href="https://mp.weixin.qq.com/s/toae0V30NbZSaqknNOCtlg" target="_blank" rel="noopener">一起攻克面试难关：Go 面试每天一篇（第 92 天）</a></p><p>4.<a href="https://mp.weixin.qq.com/s/-QBWw5_IVY8MgAt24qtoqw" target="_blank" rel="noopener">Go 语言面向对象教程 —— 类的定义、初始化和成员方法</a></p><p>5.<a href="https://mp.weixin.qq.com/s/U7ZOUc6vXPdVeg9h-cUuRA" target="_blank" rel="noopener">Go 刷 LeetCode 系列：前序＋中序／中序＋后序构造二叉树</a></p><h3 id="三-我的网课">三、我的网课</h3><p>1.<a href="https://mp.weixin.qq.com/s/if1Q0GvWe_wouNONvcKvWg" target="_blank" rel="noopener">怎样掌握 Linux 的 cgroup？资源限制机制 cgroup 学习指引与概念辨析</a></p><h3 id="四-猿方">四、猿方</h3><p>1.<a href="https://mp.weixin.qq.com/s/Sjy_cutfaUhurQxd_9BVVw" target="_blank" rel="noopener">网关 Apache APISIX 在 360 基础运维平台项目中的实践</a></p><h2 id="gocn_news_2019-12-22">gocn_news_2019-12-22</h2><ul><li><ol><li>可汗学院尝试用Go构建后端服务 <a href="https://engineering.khanacademy.org/posts/goliath.htm" target="_blank" rel="noopener">https://engineering.khanacademy.org/posts/goliath.htm</a></li></ol></li><li><ol start="2"><li>Go实战布谷过滤器 <a href="https://medium.com/@meeusdylan/implementing-a-cuckoo-filter-in-go-147a5f1f7a9" target="_blank" rel="noopener">https://medium.com/@meeusdylan/implementing-a-cuckoo-filter-in-go-147a5f1f7a9</a></li></ol></li><li><ol start="3"><li>Go 触发Panic与崩溃的情况 <a href="https://github.com/go101/go101/wiki/Panic-and-crash-cases" target="_blank" rel="noopener">https://github.com/go101/go101/wiki/Panic-and-crash-cases</a></li></ol></li><li><ol start="4"><li>Go modules：最小版本选择  <a href="https://tonybai.com/2019/12/21/go-modules-minimal-version-selection" target="_blank" rel="noopener">https://tonybai.com/2019/12/21/go-modules-minimal-version-selection</a></li></ol></li><li><ol start="5"><li>harmony:基于WebRTC的开源语音文字聊天室 <a href="https://man.sr.ht/~tslocum/harmony/HOSTING.md" target="_blank" rel="noopener">https://man.sr.ht/~tslocum/harmony/HOSTING.md</a></li></ol></li></ul><ul><li>【活动】深圳meetup <a href="https://www.bagevent.com/event/6218960" target="_blank" rel="noopener">https://www.bagevent.com/event/6218960</a></li></ul><h2 id="go语言中文网每日资讯_2019-12-21">go语言中文网(每日资讯)_2019-12-21</h2><h3 id="一-golang来啦">一、Golang来啦</h3><p>1.<a href="https://mp.weixin.qq.com/s/8MulJUFuITCZd5rh32frkA" target="_blank" rel="noopener">Go 面试每天一篇（第 110 天）</a></p><h3 id="二-go语言中文网">二、Go语言中文网</h3><p>1.<a href="https://mp.weixin.qq.com/s/RYtc5oZ4CmQZouLIcsloDw" target="_blank" rel="noopener">深入 Go 内存分配超级棒的文章：Go 内存分配器可视化指南</a></p><p>2.<a href="https://mp.weixin.qq.com/s/IA-lmgKY1GBn_MMCx60cqg" target="_blank" rel="noopener">一起攻克面试难关：Go 面试每天一篇（第 91 天）</a></p><p>3.<a href="https://mp.weixin.qq.com/s/FFVm0f_QQu1tJASzs0Oofw" target="_blank" rel="noopener">Go 开发关键技术指南 | 为什么你要选择 Go？(内含超全知识大图）</a></p><p>4.<a href="https://mp.weixin.qq.com/s/k5wbCoUJJGhDpmSy4gbNkQ" target="_blank" rel="noopener">能避开很多坑的mysql面试题，你知道吗？</a></p><h3 id="三-程序it圈">三、程序IT圈</h3><p>1.<a href="https://mp.weixin.qq.com/s/EaDr7QUUVwj5ozdcYOMYXA" target="_blank" rel="noopener">史上最全Redis总结，干货满满！</a></p><h2 id="gocn_news_2019-12-21">gocn_news_2019-12-21</h2><ul><li><ol><li>Go Serverless Functions <a href="https://blog.alexellis.io/faas-containerd-serverless-without-kubernetes/" target="_blank" rel="noopener">https://blog.alexellis.io/faas-containerd-serverless-without-kubernetes/</a></li></ol></li><li><ol start="2"><li>Golang实现并发聊天室 <a href="https://studygolang.com/articles/25502" target="_blank" rel="noopener">https://studygolang.com/articles/25502</a></li></ol></li><li><ol start="3"><li>私有代码仓库持续集成中使用go modules <a href="https://dev.to/7d1/using-go-modules-from-private-repositories-in-azure-devops-pipelines-44dk" target="_blank" rel="noopener">https://dev.to/7d1/using-go-modules-from-private-repositories-in-azure-devops-pipelines-44dk</a></li></ol></li><li><ol start="4"><li>Go语言程序设计读书笔记(二）函数 <a href="https://segmentfault.com/a/1190000021349530" target="_blank" rel="noopener">https://segmentfault.com/a/1190000021349530</a></li></ol></li><li><ol start="5"><li>Thanos简介和实践 <a href="https://mp.weixin.qq.com/s/m3IvMvoPMkN0DzqlUlmqaQ" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/m3IvMvoPMkN0DzqlUlmqaQ</a></li></ol></li></ul><p>【活动】深圳 Meetup <a href="https://www.bagevent.com/event/6218960" target="_blank" rel="noopener">https://www.bagevent.com/event/6218960</a></p><h2 id="gocn_news_2019-12-20">gocn_news_2019-12-20</h2><ul><li><ol><li>图解golang里面的读写锁实现与核心原理分析了解编程语言背后设计 <a href="https://segmentfault.com/a/1190000021349180" target="_blank" rel="noopener">https://segmentfault.com/a/1190000021349180</a></li></ol></li><li><ol start="2"><li>go类型检查之typecheck <a href="https://juejin.im/post/5dfb16b9f265da339260c012" target="_blank" rel="noopener">https://juejin.im/post/5dfb16b9f265da339260c012</a></li></ol></li><li><ol start="3"><li>Go Web 编程之请求 <a href="https://juejin.im/post/5dfa2cf6518825122671c79c" target="_blank" rel="noopener">https://juejin.im/post/5dfa2cf6518825122671c79c</a></li></ol></li><li><ol start="4"><li>使用Gin+WebSocket在HTML中无插件播放RTSP <a href="https://juejin.im/post/5dfaeb026fb9a01661390623" target="_blank" rel="noopener">https://juejin.im/post/5dfaeb026fb9a01661390623</a></li></ol></li><li><ol start="5"><li>深入理解Golang之channel <a href="https://juejin.im/post/5decff136fb9a016544bce67" target="_blank" rel="noopener">https://juejin.im/post/5decff136fb9a016544bce67</a>  【活动】深圳 Meetup <a href="https://www.bagevent.com/event/6218960-" target="_blank" rel="noopener">https://www.bagevent.com/event/6218960-</a></li></ol></li></ul><h2 id="go语言中文网每日资讯_2019-12-20">go语言中文网(每日资讯)_2019-12-20</h2><h3 id="一-golang来啦">一、Golang来啦</h3><p>1.<a href="https://mp.weixin.qq.com/s/7YvxNQUkiZvUGmZ2CnJ8Fw" target="_blank" rel="noopener">Go 面试每天一篇（第 109 天）</a></p><h3 id="二-go语言中文网">二、Go语言中文网</h3><p>1.<a href="https://mp.weixin.qq.com/s/IA14BSTt4FaIIVpg8v5rkg" target="_blank" rel="noopener">Go内存泄漏？不是那么简单!</a></p><p>2.<a href="https://mp.weixin.qq.com/s/xOrfd4e_6UR2C3tX-KoYhw" target="_blank" rel="noopener">Go 语言使用 TCP_NODELAY 控制发包流量</a></p><p>3.<a href="https://mp.weixin.qq.com/s/U6N4upsRrDyHobWyFyPW2Q" target="_blank" rel="noopener">一起攻克面试难关：Go 面试每天一篇（第 90 天）</a></p><p>4.<a href="https://mp.weixin.qq.com/s/10SoYws35Lry7OedCTFt3g" target="_blank" rel="noopener">关于 etcd 的一些谣言</a></p><p>5.<a href="https://mp.weixin.qq.com/s/1D5VctkQc0B_lWEPCKhdOQ" target="_blank" rel="noopener">Go 刷 LeetCode 系列：螺旋矩阵</a></p><h3 id="三-学院君的后花园">三、学院君的后花园</h3><p>1.<a href="https://mp.weixin.qq.com/s/VDBE559NSCBeAu3uISRY_Q" target="_blank" rel="noopener">Go 语言 Web 编程系列（四）—— 基于 gorilla/mux 包实现路由定义：基本使用篇</a></p><h3 id="四-我的小碗汤">四、我的小碗汤</h3><p>1.<a href="https://mp.weixin.qq.com/s/3D5SmGxqZTqREgFtruS2yQ" target="_blank" rel="noopener">如何探测虚拟环境是物理机、虚拟机还是容器？</a></p><h2 id="go语言中文网每日资讯_2019-12-19">go语言中文网(每日资讯)_2019-12-19</h2><h3 id="一-golang来啦">一、Golang来啦</h3><p>1.<a href="https://mp.weixin.qq.com/s/aEWGK_kiBy9RaFtLWsuE8g" target="_blank" rel="noopener">Go 面试每天一篇（第 108 天）</a></p><h3 id="二-go语言中文网">二、Go语言中文网</h3><p>1.<a href="https://mp.weixin.qq.com/s/aoZn1JoND252swkwIdOy-Q" target="_blank" rel="noopener">你应该知道的 Go 调度器知识：Go 核心原理 — 协程调度时机</a></p><p>2.<a href="https://mp.weixin.qq.com/s/gOrimvf0MbD-aEvF_L3ekQ" target="_blank" rel="noopener">一起攻克面试难关：Go 面试每天一篇（第 89 天）</a></p><p>3.<a href="https://mp.weixin.qq.com/s/yNUSo_lx_yR0tffqOgXMkQ" target="_blank" rel="noopener">架构系列：高并发架构的CDN知识介绍</a></p><p>4.<a href="https://mp.weixin.qq.com/s/B6qS1UxQoHvqQJG3peug8w" target="_blank" rel="noopener">Go 语言设计：for 和 range 是如何实现的</a></p><h3 id="三-学院君的后花园">三、学院君的后花园</h3><p>1.<a href="https://mp.weixin.qq.com/s/BsB8MAi4N5MsJFrEWNiYWQ" target="_blank" rel="noopener">Go 语言 Web 编程系列（三）—— 基于官方标准库自定义路由处理器</a></p><h3 id="四-容器时代">四、容器时代</h3><p>1.<a href="https://mp.weixin.qq.com/s/WrJ8aLeesT4mKVNmRR-NPg" target="_blank" rel="noopener">大规模场景下 kubernetes 集群的性能优化</a></p><h3 id="五-我的小碗汤">五、我的小碗汤</h3><p>1.<a href="https://mp.weixin.qq.com/s/xCFW_I6SuyDys_wa9zOY3Q" target="_blank" rel="noopener">你在搞云计算，居然还不懂OpenShift？</a></p><h2 id="gocn_news_2019-12-19">gocn_news_2019-12-19</h2><ul><li><ol><li>Go 开发关键技术指南 | 为什么你要选择 Go？(内含超全知识大图） <a href="https://mp.weixin.qq.com/s/tXL_vXqIvHqafuwyGMofVw" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/tXL_vXqIvHqafuwyGMofVw</a></li></ol></li><li><ol start="2"><li>go语言浅析二叉树  <a href="https://segmentfault.com/a/1190000021326471" target="_blank" rel="noopener">https://segmentfault.com/a/1190000021326471</a></li></ol></li><li><ol start="3"><li>Golang 在电商即时通讯服务建设中的实践  <a href="https://juejin.im/post/5df6f6476fb9a0164d460503" target="_blank" rel="noopener">https://juejin.im/post/5df6f6476fb9a0164d460503</a></li></ol></li><li><ol start="4"><li>goroutine究竟占用多少内存？<a href="https://juejin.im/post/5d9ff459f265da5b8a5160f5" target="_blank" rel="noopener">https://juejin.im/post/5d9ff459f265da5b8a5160f5</a></li></ol></li><li><ol start="5"><li>kubeedge源码分析系列之edgecore（六） edgemsh  <a href="https://juejin.im/post/5df22525f265da33f0302185" target="_blank" rel="noopener">https://juejin.im/post/5df22525f265da33f0302185</a>  【活动】深圳 Meetup <a href="https://www.bagevent.com/event/6218960" target="_blank" rel="noopener">https://www.bagevent.com/event/6218960</a></li></ol></li></ul><h2 id="go语言中文网每日资讯_2019-12-18">go语言中文网(每日资讯)_2019-12-18</h2><h3 id="一-golang来啦">一、Golang来啦</h3><p>1.<a href="https://mp.weixin.qq.com/s/oHiJtyo9M4o9gRpad1Cwnw" target="_blank" rel="noopener">Go 面试每天一篇（第 107 天）</a></p><h3 id="二-go语言中文网">二、Go语言中文网</h3><p>1.<a href="https://mp.weixin.qq.com/s/UYCXp7TrIm4d2cUwi7Un-Q" target="_blank" rel="noopener">Go 质量保证：集成测试（1） - 用 Docker 执行测试</a></p><p>2.<a href="https://mp.weixin.qq.com/s/xs6WePLXtIu43bYynsxMWA" target="_blank" rel="noopener">Go 在马蜂窝即时通讯服务建设中的实践</a></p><p>3.<a href="https://mp.weixin.qq.com/s/ItfBvTnVI_PCUmC6oUnHug" target="_blank" rel="noopener">一起攻克面试难关：Go 面试每天一篇（第 88 天）</a></p><p>4.<a href="https://mp.weixin.qq.com/s/_PsdncG6HxQ6SR095fZHyA" target="_blank" rel="noopener">编辑器 VS Code 如何快速查看 Go 接口？</a></p><p>5.<a href="https://mp.weixin.qq.com/s/Lr030YxSf2ZjVr_RYgeeWg" target="_blank" rel="noopener">Go 刷 LeetCode 回溯法（1）：全排列</a></p><h2 id="gocn_news_2019-12-18">gocn_news_2019-12-18</h2><ul><li><ol><li>Go1.14beta1发布 <a href="https://groups.google.com/forum/#!msg/golang-announce/ocSS1fQHBCk/oIsy2EJXBgAJ" target="_blank" rel="noopener">https://groups.google.com/forum/#!msg/golang-announce/ocSS1fQHBCk/oIsy2EJXBgAJ</a></li></ol></li><li><ol start="2"><li>基于Go语言开发 Serverless 云原生应用 <a href="https://mp.weixin.qq.com/s/MmjaP94p-O8LhNCyOqDS8A" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/MmjaP94p-O8LhNCyOqDS8A</a></li></ol></li><li><ol start="3"><li>Go远程执行程序 <a href="https://dev.to/dandyvica/a-remote-program-execution-in-go-pec" target="_blank" rel="noopener">https://dev.to/dandyvica/a-remote-program-execution-in-go-pec</a></li></ol></li><li><ol start="4"><li>Go中尾递归 <a href="https://medium.com/@meeusdylan/tail-recursion-in-go-fb5cf69a0f26" target="_blank" rel="noopener">https://medium.com/@meeusdylan/tail-recursion-in-go-fb5cf69a0f26</a></li></ol></li><li><ol start="5"><li>使用redis和grpc构建微服务 <a href="https://medium.com/@felipe.infantino.moreno/microservice-in-golang-using-redis-and-grpc-865587aa260c%E3%80%90%E6%B4%BB%E5%8A%A8%E3%80%91%E6%B7%B1%E5%9C%B3" target="_blank" rel="noopener">https://medium.com/@felipe.infantino.moreno/microservice-in-golang-using-redis-and-grpc-865587aa260c【活动】深圳</a> Meetup <a href="https://www.bagevent.com/event/6218960" target="_blank" rel="noopener">https://www.bagevent.com/event/6218960</a></li></ol></li></ul><h2 id="go语言中文网每日资讯_2019-12-17">go语言中文网(每日资讯)_2019-12-17</h2><h3 id="一-golang来啦">一、Golang来啦</h3><p>1.<a href="https://mp.weixin.qq.com/s/e-BsveGxkWbL0d3HgvQuLQ" target="_blank" rel="noopener">Go 面试每天一篇（第 106 天）</a></p><h3 id="二-go语言中文网">二、Go语言中文网</h3><p>1.<a href="https://mp.weixin.qq.com/s/NyIXjAgadCbi6wq2HJkkmQ" target="_blank" rel="noopener">12 月 15 日 Go 语言中文网深圳 Meetup 总结暨有偿自愿者招募</a></p><p>2.<a href="https://mp.weixin.qq.com/s/3eKrDfe85-cw4_nmHBG2OA" target="_blank" rel="noopener">由一道 Go 运算题引出：深入浅出 原码、反码与补码</a></p><p>3.<a href="https://mp.weixin.qq.com/s/hC4o-yrvJdnV8-swQl-G2g" target="_blank" rel="noopener">一起攻克面试难关：Go 面试每天一篇（第 87 天）</a></p><p>4.<a href="https://mp.weixin.qq.com/s/vNP8Z93G3KDckrUXZ5wJQw" target="_blank" rel="noopener">字符串那么常见，你知道 Go 内部是怎么样表示的吗？</a></p><h3 id="三-容器时代">三、容器时代</h3><p>1.<a href="https://mp.weixin.qq.com/s/iEBKyIxkFTcQ2HIpr27zEA" target="_blank" rel="noopener">Kubernetes 疑难杂症排查分享: 诡异的 No route to host</a></p><h3 id="四-我的小碗汤">四、我的小碗汤</h3><p>1.<a href="https://mp.weixin.qq.com/s/9dYfxnz3ssbxrDFxVrbY_g" target="_blank" rel="noopener">整天谈容器，你知道两大容器管理平台Kubernetes与OpenShift有什么区别？</a></p><h3 id="五-go夜读">五、Go夜读</h3><p>1.<a href="https://mp.weixin.qq.com/s/KBCeaHmw-5I8eHQjaCyIXQ" target="_blank" rel="noopener">第 72 期 Go-Micro 编写微服务实战 by 舒先</a></p><h3 id="六-go语言充电站">六、Go语言充电站</h3><p>1.<a href="http://lessisbetter.site/2019/12/17/fabric-blocks-from-orderer-to-peer/" target="_blank" rel="noopener">Fabric 1.4源码解读 8：Orderer和Peer的交互</a></p><h2 id="gocn_news_2019-12-17">gocn_news_2019-12-17</h2><ul><li><ol><li>Go 服务开发平滑升级之优雅重启: <a href="https://mp.weixin.qq.com/s/T6Z0jmQxX10mRm5eQTvexg" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/T6Z0jmQxX10mRm5eQTvexg</a></li></ol></li><li><ol start="2"><li>Go Gin 实战系列: <a href="https://www.flysnow.org/2019/12/15/golang-gin-query-parameters-source-code-analysis.html" target="_blank" rel="noopener">https://www.flysnow.org/2019/12/15/golang-gin-query-parameters-source-code-analysis.html</a></li></ol></li><li><ol start="3"><li>Go 高级并发模式：<a href="https://blogtitle.github.io/go-advanced-concurrency-patterns-part-3-channels/" target="_blank" rel="noopener">https://blogtitle.github.io/go-advanced-concurrency-patterns-part-3-channels/</a></li></ol></li><li><ol start="4"><li>使用 Grafana 监控你的 Go channel： <a href="https://dev.to/ahmedash95/understand-golang-channels-and-how-to-monitor-with-grafana-part-2-2-3o42" target="_blank" rel="noopener">https://dev.to/ahmedash95/understand-golang-channels-and-how-to-monitor-with-grafana-part-2-2-3o42</a></li></ol></li><li><ol start="5"><li>为什么 MySQL 使用 B+ 树: <a href="https://draven.co/whys-the-design-mysql-b-plus-tree" target="_blank" rel="noopener">https://draven.co/whys-the-design-mysql-b-plus-tree</a> 【活动】深圳 Meetup <a href="https://www.bagevent.com/event/6218960-" target="_blank" rel="noopener">https://www.bagevent.com/event/6218960-</a></li></ol></li></ul><h2 id="go语言中文网每日资讯_2019-12-16">go语言中文网(每日资讯)_2019-12-16</h2><h3 id="一-golang来啦">一、Golang来啦</h3><p>1.<a href="https://mp.weixin.qq.com/s/QZqXtgA3n7IZJGTZDn0msA" target="_blank" rel="noopener">Go 面试每天一篇（第 105 天）</a></p><h3 id="二-go语言中文网">二、Go语言中文网</h3><p>1.<a href="https://mp.weixin.qq.com/s/4HCh55eFu-JF9TBbhdsuZg" target="_blank" rel="noopener">用 70 行 Go 代码击败 C 语言</a></p><p>2.<a href="https://mp.weixin.qq.com/s/Bt4KFkt1JinfkJe6Rx91iw" target="_blank" rel="noopener">理解 Golang 哈希表 Map 的原理</a></p><p>3.<a href="https://mp.weixin.qq.com/s/nn1VQ7ZubpA2--KBBYv-YA" target="_blank" rel="noopener">一起攻克面试难关：Go 面试每天一篇（第 86 天）</a></p><p>4.<a href="https://mp.weixin.qq.com/s/ganVVI2kGMuXIsw6tpSo1A" target="_blank" rel="noopener">聊聊 Go 语言中的字符表示与字符串遍历</a></p><h3 id="三-容器时代">三、容器时代</h3><p>1.<a href="https://mp.weixin.qq.com/s/KC1k8ukB_qW7NIHNQSrmmw" target="_blank" rel="noopener">Kubernetes基础组件</a></p><h3 id="四-我的小碗汤">四、我的小碗汤</h3><p>1.<a href="https://mp.weixin.qq.com/s/uwj8mKgjyYBeKJ00KnEp1A" target="_blank" rel="noopener">这是我看过最详细的k8s中部署Jenkins教程</a></p><p>2.<a href="https://mp.weixin.qq.com/s/uK8r7_EUUyklKRO8G22YaA" target="_blank" rel="noopener">100个容器周边项目，点亮你的容器集群技能树</a></p><h3 id="五-go夜读">五、Go夜读</h3><p>1.<a href="https://mp.weixin.qq.com/s/e__21QUSWsu2tBlo4sXF-g" target="_blank" rel="noopener">第 71 期 go-ini 配置库评析 by 无闻视频回顾</a></p><h2 id="go语言中文网每日资讯_2019-12-15">go语言中文网(每日资讯)_2019-12-15</h2><p>一、Golang来啦</p><p>1.<a href="https://mp.weixin.qq.com/s/c7e8bw85CCXnp9aaETHMCA" target="_blank" rel="noopener">Go 面试每天一篇（第 104 天）</a></p><p>二、Go语言中文网</p><p>1.<a href="https://mp.weixin.qq.com/s/Tg_amsOsFPu4qmOgnu7wAg" target="_blank" rel="noopener">Go语言爱好者周刊：第 21 期</a></p><p>2.<a href="https://mp.weixin.qq.com/s/Wd2PKMKrRcF7brjX4N_L9w" target="_blank" rel="noopener">什么是内存对齐？Go 是否有必要内存对齐？</a></p><p>3.<a href="https://mp.weixin.qq.com/s/958_SeaTee0OSxGF-PbtqA" target="_blank" rel="noopener">一起攻克面试难关：Go 面试每天一篇（第 85 天）</a></p><p>4.<a href="https://mp.weixin.qq.com/s/qJVfEWngSDg3It3UytPuxA" target="_blank" rel="noopener">Go 语言：别再问我什么是反射</a></p><p>5.<a href="https://mp.weixin.qq.com/s/2MjqA7p0CdxINTeB0V-H-A" target="_blank" rel="noopener">Go 刷 LeetCode 系列：动态规划（7）通配符</a></p><p>三、容器时代</p><p>1.<a href="https://mp.weixin.qq.com/s/wOvf7ePsI7v__gfLnOLaqg" target="_blank" rel="noopener">从零开始入门 K8s | 手把手带你理解 etcd</a></p><p>四、我的小碗汤</p><p>1.<a href="https://mp.weixin.qq.com/s/MfTjrlX0ylPdocJI_nrg0w" target="_blank" rel="noopener">5分钟教你在kubernetes集群上安装Helm，并部署应用</a></p><p>2.<a href="https://mp.weixin.qq.com/s/sPLE67icL81n0EQ0eiDsIg" target="_blank" rel="noopener">分享几个超级实用的插件和工具，轻松提高工作效率</a></p><h2 id="gocn_news_2019-12-15">gocn_news_2019-12-15</h2><ul><li><ol><li>Go 并发 3 个常见的陷阱和得到的教训 <a href="https://medium.com/modenetworks/exercising-concurrency-in-go-3-common-pitfalls-and-lessons-learned-2cca9e629620" target="_blank" rel="noopener">https://medium.com/modenetworks/exercising-concurrency-in-go-3-common-pitfalls-and-lessons-learned-2cca9e629620</a></li></ol></li><li><ol start="2"><li>defer 常见陷阱 <a href="https://medium.com/i0exception/some-common-traps-while-using-defer-205ebbdc0a3b" target="_blank" rel="noopener">https://medium.com/i0exception/some-common-traps-while-using-defer-205ebbdc0a3b</a></li></ol></li><li><ol start="3"><li>实现一个 Go 微服务 <a href="https://scene-si.org/2019/12/13/implementing-our-service/" target="_blank" rel="noopener">https://scene-si.org/2019/12/13/implementing-our-service/</a></li></ol></li><li><ol start="4"><li>跨平台地区检查库 go-locale <a href="https://github.com/Xuanwo/go-locale" target="_blank" rel="noopener">https://github.com/Xuanwo/go-locale</a></li></ol></li><li><ol start="5"><li>Go 硬件检查/发现库 ghw <a href="https://github.com/jaypipes/ghw" target="_blank" rel="noopener">https://github.com/jaypipes/ghw</a> 【活动】深圳meetup <a href="https://www.bagevent.com/event/6218960-" target="_blank" rel="noopener">https://www.bagevent.com/event/6218960-</a></li></ol></li></ul><h2 id="go语言中文网每日资讯_2019-12-14">go语言中文网(每日资讯)_2019-12-14</h2><p>一、Golang来啦</p><p>1.<a href="https://mp.weixin.qq.com/s/MBbw3rpCnGLSO92eyqbDaA" target="_blank" rel="noopener">Go 面试每天一篇（第 103 天）</a></p><p>二、Go语言中文网</p><p>1.<a href="https://mp.weixin.qq.com/s/xJN9EU5PrCYS42B64tTBDg" target="_blank" rel="noopener">Go1.13 标准库的 http 包爆出重大 bug，你的项目中招了吗？</a></p><p>2.<a href="https://mp.weixin.qq.com/s/FuXLwe7l2qUB76w2K3OYDw" target="_blank" rel="noopener">Go 长连接服务线上一次大量 CLOSE_WAIT 复盘</a></p><p>3.<a href="https://mp.weixin.qq.com/s/TSJuELp5UnjcU0H6RwviNA" target="_blank" rel="noopener">一起攻克面试难关：Go 面试每天一篇（第 84 天）</a></p><p>4.<a href="https://mp.weixin.qq.com/s/b2ydnlaXbSLwLy94iPE1qw" target="_blank" rel="noopener">一分钟系列： Go 编程之实现管道 pipe 功能</a></p><p>三、容器时代</p><p>1.<a href="https://mp.weixin.qq.com/s/jXtVFH5jC9RCf_VdIULpqw" target="_blank" rel="noopener">etcd 性能测试与调优</a></p><p>四、我的小碗汤</p><p>1.<a href="https://mp.weixin.qq.com/s/602WeU_WiaNSmISiOgRcvg" target="_blank" rel="noopener">手把手教你在CentOS上搭建Kubernetes集群</a></p><h2 id="gocn_news_2019-12-14">gocn_news_2019-12-14</h2><ul><li><ol><li>Array和Slice <a href="https://golangbot.com/arrays-and-slices" target="_blank" rel="noopener">https://golangbot.com/arrays-and-slices</a></li></ol></li><li><ol start="2"><li>golang mail 实现ssl发送邮件 <a href="https://blog.51cto.com/860143/2458285" target="_blank" rel="noopener">https://blog.51cto.com/860143/2458285</a></li></ol></li><li><ol start="3"><li>Golang和生产就绪型解决方案：第2部分 <a href="https://medium.com/@hippik80/golang-production-ready-solution-part-2-4a3d02ca645e" target="_blank" rel="noopener">https://medium.com/@hippik80/golang-production-ready-solution-part-2-4a3d02ca645e</a></li></ol></li><li>4.【go语言系统调用】通用IO模型 <a href="https://segmentfault.com/a/1190000021285015" target="_blank" rel="noopener">https://segmentfault.com/a/1190000021285015</a></li><li><ol start="5"><li>kubernetes 网络分析之四 开源网络组件 <a href="https://juejin.im/post/5df353b46fb9a0161d742cb3*" target="_blank" rel="noopener">https://juejin.im/post/5df353b46fb9a0161d742cb3*</a> 【活动】深圳meetup <a href="https://www.bagevent.com/event/6218960" target="_blank" rel="noopener">https://www.bagevent.com/event/6218960</a></li></ol></li></ul><h2 id="go语言中文网每日资讯_2019-12-13">go语言中文网(每日资讯)_2019-12-13</h2><h3 id="一-golang来啦">一、Golang来啦</h3><p>1.<a href="https://mp.weixin.qq.com/s/rCtw72c7RgN-F8AGh5E7Vw" target="_blank" rel="noopener">Go 面试每天一篇（第 102 天）</a></p><h3 id="二-go语言中文网">二、Go语言中文网</h3><p>1.<a href="https://mp.weixin.qq.com/s/2J5Yiw5DlShRtxOMz7gH6A" target="_blank" rel="noopener">一起攻克面试难关：Go 面试每天一篇（第 83 天）</a></p><p>2.<a href="https://mp.weixin.qq.com/s/Sk8SmDFdaOSxg_bQlQBHLg" target="_blank" rel="noopener">你应该掌握的 Go 高级并发模式：计时器</a></p><p>3.<a href="https://mp.weixin.qq.com/s/a_g6wy4DzkAmc-i1Wen3XA" target="_blank" rel="noopener">Go 实战：Twitter 的分布式 ID 生成算法 snowflake 的 Go 语言实现</a></p><p>4.<a href="https://mp.weixin.qq.com/s/FZ-dw_nYRKacu_iLQDLeVQ" target="_blank" rel="noopener">如何在 Linux &amp; MacOS 上优雅的发布 Go 程序</a></p><p>5.<a href="https://mp.weixin.qq.com/s/wHRcOXkpkDcVJ58MeK7PSA" target="_blank" rel="noopener">Go 刷 Leetcode 系列：恢复二叉搜索树</a></p><h3 id="三-我的小碗汤">三、我的小碗汤</h3><p>1.<a href="https://mp.weixin.qq.com/s/uwj8mKgjyYBeKJ00KnEp1A" target="_blank" rel="noopener">5分钟搞定在k8s上部署jenkins，并提供域名访问</a></p><p>2.<a href="https://mp.weixin.qq.com/s/uOlR35t7BCzE0Msz9qWrig" target="_blank" rel="noopener">手把手带你理解 etcd 核心设计思想</a></p><h3 id="四-容器时代">四、容器时代</h3><p>1.<a href="https://mp.weixin.qq.com/s/ENNnXqbeVuviK1kBnl6XIg" target="_blank" rel="noopener">Kubernetes 中的 eBPF</a></p><h3 id="五-学而思网校技术团队">五、学而思网校技术团队</h3><p>1.<a href="https://mp.weixin.qq.com/s/xh8UcESXc-eVkWEWOV-ONA" target="_blank" rel="noopener">【Golang源码系列】三：Channel实现原理分析</a></p><h2 id="gocn_news_2019-12-13">gocn_news_2019-12-13</h2><ul><li><ol><li>通过TCP_NODELAY控制数据包流 <a href="https://blog.gopheracademy.com/advent-2019/control-packetflow-tcp-nodelay/" target="_blank" rel="noopener">https://blog.gopheracademy.com/advent-2019/control-packetflow-tcp-nodelay/</a></li></ol></li><li><ol start="2"><li>构建docker镜像时也需要考虑安全性 <a href="https://scene-si.org/2019/12/12/docker-images-and-security/" target="_blank" rel="noopener">https://scene-si.org/2019/12/12/docker-images-and-security/</a></li></ol></li><li><ol start="3"><li>golang服务开发平滑升级之优雅重启 <a href="https://mp.weixin.qq.com/s?__biz=MzU4ODgyMDI0Mg==&amp;mid=2247487071&amp;idx=1&amp;sn=c0098f0ea50f6b1fc5c94ea9e68e8bfb" target="_blank" rel="noopener">https://mp.weixin.qq.com/s?__biz=MzU4ODgyMDI0Mg==&amp;mid=2247487071&amp;idx=1&amp;sn=c0098f0ea50f6b1fc5c94ea9e68e8bfb</a></li></ol></li><li><ol start="4"><li>gemini:Scylla和Cassandra集群测试工具 <a href="https://www.scylladb.com/2019/12/11/project-gemini-an-open-source-automated-random-testing-suite-for-scylla-and-cassandra-clusters/" target="_blank" rel="noopener">https://www.scylladb.com/2019/12/11/project-gemini-an-open-source-automated-random-testing-suite-for-scylla-and-cassandra-clusters/</a></li></ol></li><li><ol start="5"><li>garble:Go程序混淆工具 <a href="https://github.com/mvdan/garble" target="_blank" rel="noopener">https://github.com/mvdan/garble</a>    * 【活动】上海meetup <a href="https://www.bagevent.com/event/6197112*" target="_blank" rel="noopener">https://www.bagevent.com/event/6197112*</a> 【活动】深圳meetup <a href="https://www.bagevent.com/event/6218960" target="_blank" rel="noopener">https://www.bagevent.com/event/6218960</a></li></ol></li></ul><h2 id="go语言中文网每日资讯_2019-12-12">go语言中文网(每日资讯)_2019-12-12</h2><p>一、Golang来啦</p><p>1.<a href="https://mp.weixin.qq.com/s/jOfaNHumzMuai_5xFnabCg" target="_blank" rel="noopener">Go 面试每天一篇（第 101 天）</a></p><p>二、Go语言中文网</p><p>1.<a href="https://mp.weixin.qq.com/s/KcjXEH7C4GhREg7c0Z_fuA" target="_blank" rel="noopener">明白了，原来 Go Web 框架中的中间件都是这样实现的</a></p><p>2.<a href="https://mp.weixin.qq.com/s/stSSkaXUBZX-pTMfPpHfGQ" target="_blank" rel="noopener">Gin 框架系列：路由中间件 - 签名验证</a></p><p>3.<a href="https://mp.weixin.qq.com/s/BVmT7e40JM0l1cLEDz6amw" target="_blank" rel="noopener">一起攻克面试难关：Go 面试每天一篇（第 82 天）</a></p><p>4.<a href="https://mp.weixin.qq.com/s/jCcwTXr3OUYf7LxUM_BRJA" target="_blank" rel="noopener">Go 程序员为什么要用 Redis</a></p><p>三、我的网课</p><p>1.<a href="https://mp.weixin.qq.com/s/lnF6s9z1YjmbqgrXnjZnkA" target="_blank" rel="noopener">旌旗招展，向网格而行！</a></p><h2 id="gocn_news_2019-12-12">gocn_news_2019-12-12</h2><ul><li><ol><li>在Go中利用多线程更快地读取大文件 <a href="https://hackernoon.com/leveraging-multithreading-to-read-large-files-faster-in-go-lmn32t7" target="_blank" rel="noopener">https://hackernoon.com/leveraging-multithreading-to-read-large-files-faster-in-go-lmn32t7</a></li></ol></li><li><ol start="2"><li>Go实现不发出信号的情况下连接两个WebRTC服务 <a href="https://github.com/pion/offline-browser-communication" target="_blank" rel="noopener">https://github.com/pion/offline-browser-communication</a></li></ol></li><li><ol start="3"><li>Go 生成数据库架构文档 <a href="https://scene-si.org/2019/12/10/generating-database-schema-documentation/" target="_blank" rel="noopener">https://scene-si.org/2019/12/10/generating-database-schema-documentation/</a></li></ol></li><li><ol start="4"><li>Go的最小日志记录库 <a href="https://github.com/cdr/slog" target="_blank" rel="noopener">https://github.com/cdr/slog</a></li></ol></li><li><ol start="5"><li>GOMAXPROCS和实时更新 <a href="https://medium.com/a-journey-with-go/go-gomaxprocs-live-updates-407ad08624e1*" target="_blank" rel="noopener">https://medium.com/a-journey-with-go/go-gomaxprocs-live-updates-407ad08624e1*</a> 【活动】上海meetup <a href="https://www.bagevent.com/event/6197112*" target="_blank" rel="noopener">https://www.bagevent.com/event/6197112*</a> 【活动】深圳meetup <a href="https://www.bagevent.com/event/6218960" target="_blank" rel="noopener">https://www.bagevent.com/event/6218960</a></li></ol></li></ul><h2 id="go语言中文网每日资讯_2019-12-11">go语言中文网(每日资讯)_2019-12-11</h2><h3 id="一-golang来啦">一、Golang来啦</h3><p>1.<a href="https://mp.weixin.qq.com/s/CcH8huZszsG5Dd_K6GLAVQ" target="_blank" rel="noopener">Go 面试每天一篇（第 100 天）</a></p><h3 id="二-go语言中文网">二、Go语言中文网</h3><p>1.<a href="https://mp.weixin.qq.com/s/z5xZ6y32K6VLRd_2EF-2CQ" target="_blank" rel="noopener">Go 不建议使用的 unsafe 包有什么用处？</a></p><p>2.<a href="https://mp.weixin.qq.com/s/i0Xx10PxRT9q8ms8NrR_nw" target="_blank" rel="noopener">像 Awesome-Go 一样提升企业 Go 项目代码质量</a></p><p>3.<a href="https://mp.weixin.qq.com/s/Qvcb-v0dJ7bLNj0D2oj_gw" target="_blank" rel="noopener">一起攻克面试难关：Go 面试每天一篇（第 81 天）</a></p><p>4.<a href="https://mp.weixin.qq.com/s/CEnspOqKSIYB6xE4BPUT_w" target="_blank" rel="noopener">Gin 框架系列：路由中间件 - Jaeger 链路追踪（实战篇）</a></p><p>5.<a href="https://mp.weixin.qq.com/s/VqltwKHsg3TZ8NE2KNo9iA" target="_blank" rel="noopener">也许你不知道的 Go 中 defer 的一个隐藏功能</a></p><h3 id="三-容器时代">三、容器时代</h3><p>1.<a href="https://mp.weixin.qq.com/s/p93eQ_Wy1p-I4_jraH_5Xg" target="_blank" rel="noopener">为Kubernetes引入卷快照Alpha</a></p><h3 id="四-学院君的后花园">四、学院君的后花园</h3><p>1.<a href="https://mp.weixin.qq.com/s/ChxuZqzr9l-o15ABPqq99g" target="_blank" rel="noopener">Go 语言 Web 编程系列（二）—— HTTP 请求处理的底层运行机制</a></p><h2 id="gocn_news_2019-12-11">gocn_news_2019-12-11</h2><ul><li><ol><li>Go语言国际电子表格文档格式标准实践 <a href="https://mp.weixin.qq.com/s/oJfDxpWkJCO5nV3phGLn_w" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/oJfDxpWkJCO5nV3phGLn_w</a></li></ol></li><li><ol start="2"><li>使用Go解析180亿条JSON行 <a href="https://itnext.io/parsing-18-billion-lines-json-with-go-738be6ee5ed2" target="_blank" rel="noopener">https://itnext.io/parsing-18-billion-lines-json-with-go-738be6ee5ed2</a></li></ol></li><li><ol start="3"><li>Go 标准库 encoding/json 真的慢吗？ <a href="https://mp.weixin.qq.com/s/U3QcbqOaRAABd-ESkzpI1Q" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/U3QcbqOaRAABd-ESkzpI1Q</a></li></ol></li><li><ol start="4"><li>译|并发不是并行 <a href="https://cyningsun.github.io/12-09-2019/concurrency-is-not-parallelism.html" target="_blank" rel="noopener">https://cyningsun.github.io/12-09-2019/concurrency-is-not-parallelism.html</a></li></ol></li><li><ol start="5"><li>800字彻底理解Go指针 <a href="https://developer.51cto.com/art/201912/607512.htm%E3%80%90%E6%B4%BB%E5%8A%A8%E3%80%91%E4%B8%8A%E6%B5%B7meetup" target="_blank" rel="noopener">https://developer.51cto.com/art/201912/607512.htm【活动】上海meetup</a> <a href="https://www.bagevent.com/event/6197112%E3%80%90%E6%B4%BB%E5%8A%A8%E3%80%91%E6%B7%B1%E5%9C%B3meetup" target="_blank" rel="noopener">https://www.bagevent.com/event/6197112【活动】深圳meetup</a> <a href="https://www.bagevent.com/event/6218960-" target="_blank" rel="noopener">https://www.bagevent.com/event/6218960-</a></li></ol></li></ul><h2 id="go语言中文网每日资讯_2019-12-10">go语言中文网(每日资讯)_2019-12-10</h2><h3 id="一-golang来啦">一、Golang来啦</h3><p>1.<a href="https://mp.weixin.qq.com/s/_ALuT15Lvygir2X0JXLC8w" target="_blank" rel="noopener">Go 面试每天一篇（第 99 天）</a></p><h3 id="二-go语言中文网">二、Go语言中文网</h3><p>1.<a href="https://mp.weixin.qq.com/s/RrwyzhUZDUymGNcgUo2vnA" target="_blank" rel="noopener">妙到颠毫：你应该学会的 bigcache 优化技巧</a></p><p>2.<a href="https://mp.weixin.qq.com/s/kXI3xJ1ZCMTG75dDVupHsw" target="_blank" rel="noopener">一起攻克面试难关：Go 面试每天一篇（第 80 天）</a></p><p>3.<a href="https://mp.weixin.qq.com/s/xU7OtM5nSDXJmM_efrtr3A" target="_blank" rel="noopener">值得收藏深度解密系列：Go语言之 pprof</a></p><h3 id="三-我要煎鱼说">三、我要煎鱼说</h3><p>1.<a href="https://mp.weixin.qq.com/s/uO310Fou1HNOonfl4flgCg" target="_blank" rel="noopener">Go Gin 系列一：Go 介绍与环境安装</a></p><h2 id="gocn_news_2019-12-10">gocn_news_2019-12-10</h2><ul><li><ol><li>Go 项目结构最佳实践 <a href="https://tutorialedge.net/golang/go-project-structure-best-practices/" target="_blank" rel="noopener">https://tutorialedge.net/golang/go-project-structure-best-practices/</a></li></ol></li><li><ol start="2"><li>Go 性能测试惊奇 <a href="https://blog.gopheracademy.com/advent-2019/benchmark-magic/" target="_blank" rel="noopener">https://blog.gopheracademy.com/advent-2019/benchmark-magic/</a></li></ol></li><li><ol start="3"><li>Go 生成数据库结构体 <a href="https://scene-si.org/2019/12/09/database-first-struct-generation/" target="_blank" rel="noopener">https://scene-si.org/2019/12/09/database-first-struct-generation/</a></li></ol></li><li><ol start="4"><li>Go 打造 Flutter 多版本管理工具：fvm <a href="https://blog.befovy.com/2019/12/fvm-using-go/" target="_blank" rel="noopener">https://blog.befovy.com/2019/12/fvm-using-go/</a></li></ol></li><li><ol start="5"><li>go中defer的一个隐藏功能 <a href="https://segmentfault.com/a/1190000021239576%E3%80%90%E6%B4%BB%E5%8A%A8%E3%80%91%E4%B8%8A%E6%B5%B7meetup" target="_blank" rel="noopener">https://segmentfault.com/a/1190000021239576【活动】上海meetup</a> <a href="https://www.bagevent.com/event/6197112%E3%80%90%E6%B4%BB%E5%8A%A8%E3%80%91%E6%B7%B1%E5%9C%B3meetup" target="_blank" rel="noopener">https://www.bagevent.com/event/6197112【活动】深圳meetup</a> <a href="https://www.bagevent.com/event/6218960-" target="_blank" rel="noopener">https://www.bagevent.com/event/6218960-</a></li></ol></li></ul><h2 id="go语言中文网每日资讯_2019-12-09">go语言中文网(每日资讯)_2019-12-09</h2><p>一、Golang来啦</p><p>1.<a href="https://mp.weixin.qq.com/s/1Uq5SJySXtrP9xagvta5eQ" target="_blank" rel="noopener">Go面试每天一篇（第98天）</a></p><p>二、Go语言中文网</p><p>1.<a href="https://mp.weixin.qq.com/s/aeIf0YqS0W-sbf5LbfBmKw" target="_blank" rel="noopener">培训大师 William 图解 Go 中的 GC 系列：第三部 - GCPacing</a></p><p>2.<a href="https://mp.weixin.qq.com/s/WLISnJ1J7_iKlwCed0uxYQ" target="_blank" rel="noopener">小米大佬讲解 Go 之运行与Plan9汇编</a></p><p>3.<a href="https://mp.weixin.qq.com/s/a3uCvQyWgvs0zkh_4Db0rw" target="_blank" rel="noopener">一起攻克面试难关：Go 面试每天一篇（第 79 天）</a></p><p>4.<a href="https://mp.weixin.qq.com/s/YOGgW_2cd3s2QYHZBXkCnQ" target="_blank" rel="noopener">Go 1.12 起关于内存释放的一个改进</a></p><p>5.<a href="https://mp.weixin.qq.com/s/ywXkblknnuvzU8SCdAit2Q" target="_blank" rel="noopener">Go 刷 LeetCode 系列：动态规划（6）正则表达式</a></p><p>三、MoeLove</p><p>1.<a href="https://mp.weixin.qq.com/s/SfIxTBKFikuVKOWHl6k7JA" target="_blank" rel="noopener">K8S 生态周报| containerd v1.3.2 发布</a></p><p>四、容器时代</p><p>1.<a href="https://mp.weixin.qq.com/s/IZp2gUSKk1IMCFkX6bn1tw" target="_blank" rel="noopener">Deployment 和 StatefulSet 的K8s持久卷</a></p><p>五、学院君</p><p>1.<a href="https://xueyuanjun.com/books/microservices" target="_blank" rel="noopener">微服务实战</a></p><h2 id="gocn_news_2019-12-09">gocn_news_2019-12-09</h2><ul><li>1.使用Go，QUIC和Micro建立全球服务网络 <a href="https://blog.gopheracademy.com/advent-2019/building-a-microservices-network/" target="_blank" rel="noopener">https://blog.gopheracademy.com/advent-2019/building-a-microservices-network/</a></li><li>2.Go运行时调度程序处理系统调用的巧妙方法 <a href="https://utcc.utoronto.ca/~cks/space/blog/programming/GoSchedulerAndSyscalls" target="_blank" rel="noopener">https://utcc.utoronto.ca/~cks/space/blog/programming/GoSchedulerAndSyscalls</a></li><li>3.Go动态作用域变量 <a href="https://dave.cheney.net/2019/12/08/dynamically-scoped-variables-in-go" target="_blank" rel="noopener">https://dave.cheney.net/2019/12/08/dynamically-scoped-variables-in-go</a></li><li>4.Cap’n Proto: Protobuf作者新开发的多语言通用数据交换格式 <a href="https://capnproto.org" target="_blank" rel="noopener">https://capnproto.org</a></li><li>5.NATS内置持久化方案JetStream进入TP阶段 <a href="https://github.com/nats-io/nats-server/blob/jetstream/jetstream/README.md" target="_blank" rel="noopener">https://github.com/nats-io/nats-server/blob/jetstream/jetstream/README.md</a></li></ul><h2 id="go语言中文网每日资讯_2019-12-08">go语言中文网(每日资讯)_2019-12-08</h2><p>一、Golang来啦</p><p>1.<a href="https://mp.weixin.qq.com/s/D5BWQ9IkYIEIY5c_yI4FeQ" target="_blank" rel="noopener">Go 面试每天一篇（第 97 天）</a></p><p>二、Go语言中文网</p><p>1.<a href="https://mp.weixin.qq.com/s/xJN9EU5PrCYS42B64tTBDg" target="_blank" rel="noopener">Go语言爱好者周刊：第 20 期</a></p><p>2.<a href="https://mp.weixin.qq.com/s/M-gDOGY6oFfBRD8B3fU14w" target="_blank" rel="noopener">小米大佬讲解 Go 之编译器原理</a></p><p>3.<a href="https://mp.weixin.qq.com/s/iQotO1lJAYke6YOccJyfow" target="_blank" rel="noopener">一起攻克面试难关：Go 面试每天一篇（第 78 天）</a></p><p>4.<a href="https://mp.weixin.qq.com/s/vJ64Ut2PHA3sILrxoTDf5g" target="_blank" rel="noopener">线上问题排查实战：Golang RabbitMQ 故障排查一例</a></p><p>5.<a href="https://mp.weixin.qq.com/s/cFRRW9P8hTcyGy4dMxxZqQ" target="_blank" rel="noopener">Go 刷 LeetCode 系列：二叉树的最大路径和</a></p><p>三、容器时代</p><p>1.<a href="https://mp.weixin.qq.com/s/6hZ_3wZfpiPCsmy6b6dGOA" target="_blank" rel="noopener">Kubernetes 中的事件处理机制</a></p><p>2.<a href="https://mp.weixin.qq.com/s/igF3VQg2c-4ckZgi-K2WwQ" target="_blank" rel="noopener">从零开始入门 K8s | 深入剖析 Linux 容器</a></p><p>四、周末推荐</p><p>1.<a href="https://www.w3cschool.cn/architectroad/" target="_blank" rel="noopener">架构师之路</a></p><h2 id="gocn_news_2019-12-08">gocn_news_2019-12-08</h2><ul><li><ol><li>GoAdvent2019:使用标准库中的flag包 <a href="https://blog.gopheracademy.com/advent-2019/flags/" target="_blank" rel="noopener">https://blog.gopheracademy.com/advent-2019/flags/</a></li></ol></li><li><ol start="2"><li><a href="http://xn--GoSocket-md0m62ihq4ajj6f.IO" target="_blank" rel="noopener">在Go中使用Socket.IO</a> <a href="https://www.jianshu.com/p/566a0e2456a9" target="_blank" rel="noopener">https://www.jianshu.com/p/566a0e2456a9</a></li></ol></li><li><ol start="3"><li>Bazel构建Golang项目 <a href="https://www.qtmuniao.com/2019/12/07/bazel-build-golang" target="_blank" rel="noopener">https://www.qtmuniao.com/2019/12/07/bazel-build-golang</a></li></ol></li><li><ol start="4"><li>Golang在runtime中的一些骚东西 <a href="https://purewhite.io/2019/11/28/runtime-hacking-translate/" target="_blank" rel="noopener">https://purewhite.io/2019/11/28/runtime-hacking-translate/</a></li></ol></li><li><ol start="5"><li>Go项目的GitlabCI缓存 <a href="https://imil.net/blog/2019/12/07/Gitlab-CI-caching-for-Go-projects/-" target="_blank" rel="noopener">https://imil.net/blog/2019/12/07/Gitlab-CI-caching-for-Go-projects/-</a></li></ol></li></ul><h2 id="go语言中文网每日资讯_2019-12-07">go语言中文网(每日资讯)_2019-12-07</h2><h3 id="一-golang来啦">一、Golang来啦</h3><p>1.<a href="https://mp.weixin.qq.com/s/ziFd726hdTgYetfms-Q97A" target="_blank" rel="noopener">Go 面试每天一篇（第 96 天）</a></p><h3 id="二-go语言中文网">二、Go语言中文网</h3><p>1.<a href="https://mp.weixin.qq.com/s/Lsm-BMdKCKNQjRndNCLwLw" target="_blank" rel="noopener">Go 标准库源码学习（一）详解短小精悍的 Once</a></p><p>2.<a href="https://mp.weixin.qq.com/s/NUzWW9RZKyc5V4RMi0n7DA" target="_blank" rel="noopener">进阶必学：指令集架构、机器码与 Go 语言</a></p><p>3.<a href="https://mp.weixin.qq.com/s/i0e5_Lsa8euNCkJh42klFg" target="_blank" rel="noopener">一起攻克面试难关：Go 面试每天一篇（第 77 天）</a></p><p>4.<a href="https://mp.weixin.qq.com/s/Bq73b9a1fUNvsuiE7fbZ9w" target="_blank" rel="noopener">面试必考：MySQL InnoDB 引擎锁的总结</a></p><p>5.<a href="https://mp.weixin.qq.com/s/2cyLKll2xlTLUUqsHqHKLw" target="_blank" rel="noopener">Go 刷 LeetCode 系列：二叉树的遍历</a></p><h3 id="三-容器时代">三、容器时代</h3><p>1.<a href="https://mp.weixin.qq.com/s/5C9MQP3zPqz3i8H8NdYUBA" target="_blank" rel="noopener">Kubernetes 网络如何进行工作（第三部分</a></p><h3 id="四-我的小碗汤">四、我的小碗汤</h3><p>1.<a href="https://mp.weixin.qq.com/s/s-KlAf_SOb9X8E2abLcMog" target="_blank" rel="noopener">备战CKA每日一题——第13天</a></p><h3 id="五-go夜读">五、Go夜读</h3><p>1.<a href="https://mp.weixin.qq.com/s/92E_xmRCCSW6_laO7o48sQ" target="_blank" rel="noopener">第 70 期 Go 中不常注意的各种细节集锦视频（点开即可观看）</a></p><h2 id="gocn_news_2019-12-07">gocn_news_2019-12-07</h2><ul><li><ol><li>[译]Go语言的协程，系统线程以及CPU管理 <a href="https://pengrl.com/p/29953/" target="_blank" rel="noopener">https://pengrl.com/p/29953/</a></li></ol></li><li><ol start="2"><li>为什么golang没有volatile <a href="https://mp.weixin.qq.com/s/4ZNHxpY3UvDescLO3swQMg" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/4ZNHxpY3UvDescLO3swQMg</a></li></ol></li><li><ol start="3"><li>Gotty源码分析 <a href="https://qiankunli.github.io/2019/11/01/gotty_source.html" target="_blank" rel="noopener">https://qiankunli.github.io/2019/11/01/gotty_source.html</a></li></ol></li><li><ol start="4"><li>Go程序中嵌入静态资源方案选择 <a href="https://tech.townsourced.com/post/embedding-static-files-in-go/" target="_blank" rel="noopener">https://tech.townsourced.com/post/embedding-static-files-in-go/</a></li></ol></li><li><ol start="5"><li>一文详解微服务架构 <a href="https://mp.weixin.qq.com/s/4sqarEWkqz4bi_Hj4ujR8Q" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/4sqarEWkqz4bi_Hj4ujR8Q</a></li></ol></li></ul><p>【活动】上海meetup <a href="https://www.bagevent.com/event/6197112" target="_blank" rel="noopener">https://www.bagevent.com/event/6197112</a><br>【活动】深圳meetup <a href="https://www.bagevent.com/event/6218960" target="_blank" rel="noopener">https://www.bagevent.com/event/6218960</a></p><h2 id="gocn_news_2019-12-06">gocn_news_2019-12-06</h2><ul><li><ol><li>安全使用unsafe.Pointer <a href="https://blog.gopheracademy.com/advent-2019/safe-use-of-unsafe-pointer/" target="_blank" rel="noopener">https://blog.gopheracademy.com/advent-2019/safe-use-of-unsafe-pointer/</a></li></ol></li><li><ol start="2"><li>go 性能监控神器 <a href="https://www.jianshu.com/p/9b18289b1fda" target="_blank" rel="noopener">https://www.jianshu.com/p/9b18289b1fda</a></li></ol></li><li><ol start="3"><li>[译]Go：垃圾回收器是如何监控你的应用的？ <a href="https://juejin.im/post/5de778d4e51d4557fe59343e" target="_blank" rel="noopener">https://juejin.im/post/5de778d4e51d4557fe59343e</a></li></ol></li><li><ol start="4"><li>用图说话：Go语言的协程，系统线程以及CPU管理 <a href="https://mp.weixin.qq.com/s/neLVacrxrvhb2gbEP_g5dA" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/neLVacrxrvhb2gbEP_g5dA</a></li></ol></li><li><ol start="5"><li>把阿里巴巴的核心系统搬到云上，架构上的挑战与演进是什么？<a href="https://mp.weixin.qq.com/s/Y2NnoSO0v0zcFnONeosdrA*" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/Y2NnoSO0v0zcFnONeosdrA*</a> 【活动】上海meetup <a href="https://www.bagevent.com/event/6197112" target="_blank" rel="noopener">https://www.bagevent.com/event/6197112</a></li></ol></li></ul><h2 id="go语言中文网每日资讯_2019-12-06">go语言中文网(每日资讯)_2019-12-06</h2><p>一、Golang来啦</p><ol><li><a href="https://mp.weixin.qq.com/s/F0QTzwa25e38vxPAuq0xVA" target="_blank" rel="noopener">Go面试每天一篇（第95天）</a></li></ol><p>二、Go语言中文网</p><ol><li><a href="https://mp.weixin.qq.com/s/U3QcbqOaRAABd-ESkzpI1Q" target="_blank" rel="noopener">50 条争论的文章发生了啥：Go 标准库 encoding/json 真的慢吗？</a></li><li><a href="https://mp.weixin.qq.com/s/EXMP9lV-YQeAvLShd7Ee4w" target="_blank" rel="noopener">线上真实场景：实战 Goroutine 泄露排查</a></li><li><a href="https://mp.weixin.qq.com/s/MunnkrMgNbxe_wLWJfGgEw" target="_blank" rel="noopener">一起攻克面试难关：Go 面试每天一篇（第 76 天）</a></li><li><a href="https://mp.weixin.qq.com/s/neLVacrxrvhb2gbEP_g5dA" target="_blank" rel="noopener">用图说话：Go语言的协程，系统线程以及CPU管理</a></li><li><a href="https://mp.weixin.qq.com/s/R-YWQLBbP-6yxj9l3X_0hA" target="_blank" rel="noopener">Gin 框架系列：路由中间件 - Jaeger 链路追踪</a></li></ol><p>三、Go1.13.5 和 Go1.12.14 发布了，主要修复一些 bug，下载：<a href="https://studygolang.com/dl" target="_blank" rel="noopener">https://studygolang.com/dl</a></p><h2 id="go语言中文网每日资讯_2019-12-05">go语言中文网(每日资讯)_2019-12-05</h2><h3 id="一-golang来啦">一、Golang来啦</h3><p>1.<a href="https://mp.weixin.qq.com/s/PPDxVDQh8q6Y_TBpR1pfAQ" target="_blank" rel="noopener">Go 面试每天一篇（第 94 天）</a></p><h3 id="二-go语言中文网">二、Go语言中文网</h3><p>1.<a href="https://mp.weixin.qq.com/s/0r8R1elPd32ayFpURt2Arw" target="_blank" rel="noopener">培训大师 William 图解 Go 中的 GC 系列：第二部分 - GC 追踪</a></p><p>2.<a href="https://mp.weixin.qq.com/s/bG36pbEbmTyp18diyd0wAQ" target="_blank" rel="noopener">一起攻克面试难关：Go 面试每天一篇（第 75 天）</a></p><p>3.<a href="https://mp.weixin.qq.com/s/7WBuhO8nC4eOcG7IEw6BFg" target="_blank" rel="noopener">判断你是不是高手：详解 Golang 中间代码生成</a></p><p>4.<a href="https://mp.weixin.qq.com/s/tzXbnqdfXq8JKdc8Wm8SNw" target="_blank" rel="noopener">Go 刷 LeetCode 系列：动态规划（5）lis 最长递增子序列</a></p><h2 id="gocn_news_2019-12-05">gocn_news_2019-12-05</h2><ul><li><ol><li>Go Module探索第二部分: 工程、依赖与gopls <a href="https://www.ardanlabs.com/blog/2019/12/modules-02-projects-dependencies-gopls.html" target="_blank" rel="noopener">https://www.ardanlabs.com/blog/2019/12/modules-02-projects-dependencies-gopls.html</a></li></ol></li><li><ol start="2"><li>[译] Go语言的协程，系统线程以及CPU管理  <a href="http://www.pengrl.com/p/29953/" target="_blank" rel="noopener">http://www.pengrl.com/p/29953/</a></li></ol></li><li><ol start="3"><li>Go中的版本控制原则 <a href="https://research.swtch.com/vgo-principles" target="_blank" rel="noopener">https://research.swtch.com/vgo-principles</a></li></ol></li><li><ol start="4"><li>万字长文带你深入浅出 Golang Runtime   <a href="http://1t.click/bvjg" target="_blank" rel="noopener">http://1t.click/bvjg</a></li></ol></li><li><ol start="5"><li>kubeedge源码分析系列之edgecore（四） <a href="https://juejin.im/post/5de0d5136fb9a071ac1a0b27*" target="_blank" rel="noopener">https://juejin.im/post/5de0d5136fb9a071ac1a0b27*</a> 【活动】上海meetup <a href="https://www.bagevent.com/event/6197112" target="_blank" rel="noopener">https://www.bagevent.com/event/6197112</a></li></ol></li></ul><h2 id="gocn_news_2019-12-04">gocn_news_2019-12-04</h2><ul><li><ol><li>Go切片内存应用技巧 <a href="https://juejin.im/post/5de63b35f265da33df77d206" target="_blank" rel="noopener">https://juejin.im/post/5de63b35f265da33df77d206</a></li></ol></li><li><ol start="2"><li>Go不需要泛型 <a href="https://medium.com/@meeusdylan/go-doesnt-need-generics-6cb9cf0da9c" target="_blank" rel="noopener">https://medium.com/@meeusdylan/go-doesnt-need-generics-6cb9cf0da9c</a></li></ol></li><li><ol start="3"><li>Go kit入门 <a href="https://medium.com/@mark.sagikazar/getting-started-with-go-kit-f2ccf71d491f" target="_blank" rel="noopener">https://medium.com/@mark.sagikazar/getting-started-with-go-kit-f2ccf71d491f</a></li></ol></li><li><ol start="4"><li>[译]Go: 理解Sync.Pool的设计思想 <a href="https://juejin.im/post/5de4d8a05188256e8d33c7d1" target="_blank" rel="noopener">https://juejin.im/post/5de4d8a05188256e8d33c7d1</a></li></ol></li><li><ol start="5"><li>Serverless Kubernetes 场景和架构剖析 <a href="https://mp.weixin.qq.com/s/WPEX4ETdbue5BrzYODupcw" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/WPEX4ETdbue5BrzYODupcw</a> * 【活动】上海meetup <a href="https://www.bagevent.com/event/6197112" target="_blank" rel="noopener">https://www.bagevent.com/event/6197112</a></li></ol></li></ul><h2 id="go语言中文网每日资讯_2019-12-04">go语言中文网(每日资讯)_2019-12-04</h2><h3 id="一-golang来啦">一、Golang来啦</h3><p>1.<a href="https://mp.weixin.qq.com/s/eOwmtVttlppzmCuE8yviqg" target="_blank" rel="noopener">Go 面试每天一篇（第 93 天）</a></p><h3 id="二-go语言中文网">二、Go语言中文网</h3><p>1.<a href="https://mp.weixin.qq.com/s/mYp3QbdWR4HEZimFUw9bAA" target="_blank" rel="noopener">培训大师 William 图解 Go 中的 GC 系列：第一部分 - 基础</a></p><p>2.<a href="https://mp.weixin.qq.com/s/3_uM88gsY7LoNe4JtEAfww" target="_blank" rel="noopener">现代程序员必须掌握的：Dockerfile 与 Compose 环境搭建学习笔记（二）</a></p><p>3.<a href="https://mp.weixin.qq.com/s/d4MC7i2HtrDbkhfIr3dkqQ" target="_blank" rel="noopener">这个点你有想过吗？Go 语言如何进行类型检查</a></p><p>4.<a href="https://mp.weixin.qq.com/s/g0c00X674Bayc89AZu1bvA" target="_blank" rel="noopener">一起攻克面试难关：Go 面试每天一篇（第 74 天）</a></p><p>5.<a href="https://mp.weixin.qq.com/s/kYPczjOnOUgGpg1KJ9NXGw" target="_blank" rel="noopener">谈谈 Golang 中的 Data Race（续）</a></p><h3 id="三-容器时代">三、容器时代</h3><p>1.<a href="https://mp.weixin.qq.com/s/GXTLpyrrITM0QGSy10iQsA" target="_blank" rel="noopener">Kubernetes 网络如何进行工作（第二部分）</a></p><h3 id="四-我的小碗汤">四、我的小碗汤</h3><p>1.<a href="https://mp.weixin.qq.com/s/feEIBy-Jb4h9zR-ZY6Cd9g" target="_blank" rel="noopener">备战CKA每日一题——第12天 | 史上最全常用kubectl命令解析与示例，附CKA真题演练</a></p><h2 id="go语言中文网每日资讯_2019-12-03">go语言中文网(每日资讯)_2019-12-03</h2><h3 id="一-golang来啦">一、Golang来啦</h3><p>1.<a href="https://mp.weixin.qq.com/s/JkyeShcK1Umbq5meSsmmiQ" target="_blank" rel="noopener">Go面试每天一篇（第92天）</a></p><p>2.<a href="https://mp.weixin.qq.com/s/PJ6yhpwTfdIzlDWPjPy8Tw" target="_blank" rel="noopener">Go项目开发中10个最常见的错误</a></p><h3 id="二-go语言中文网">二、Go语言中文网</h3><p>1.<a href="https://mp.weixin.qq.com/s/cRab8ttjqgrZUN0Zoqc-XA" target="_blank" rel="noopener">发布订阅模式：使用 Go 实现简单的事件总线</a></p><p>2.一<a href="https://mp.weixin.qq.com/s/9G3KQwXqQf56b8IQ7Tyysw" target="_blank" rel="noopener">起攻克面试难关：Go 面试每天一篇（第 73 天）</a></p><p>3.<a href="https://mp.weixin.qq.com/s/y8_TJYP2O2McrRXrMtd7TA" target="_blank" rel="noopener">谈谈 Golang 中的 Data Race</a></p><p>4.<a href="https://mp.weixin.qq.com/s/iSO5fBcGQ_7BWplbhz5oEg" target="_blank" rel="noopener">Go 刷 LeetCode 系列：动态规划（4）分割等和子集（0,1背包问题）</a></p><h3 id="三-我的小碗汤">三、我的小碗汤</h3><p>1.<a href="https://mp.weixin.qq.com/s/WEjSttOmRTknoxz25oVmZw" target="_blank" rel="noopener">备战CKA每日一题——第11天 | 权限控制怎么做？</a></p><h2 id="gocn_news_2019-12-03">gocn_news_2019-12-03</h2><ul><li><ol><li>Go 编写友好的命令行应用程序: <a href="https://blog.gopheracademy.com/advent-2019/cmdline/" target="_blank" rel="noopener">https://blog.gopheracademy.com/advent-2019/cmdline/</a></li></ol></li><li><ol start="2"><li>Go 项目终极设置：<a href="https://dev.to/martinheinz/ultimate-setup-for-your-next-golang-project-5dae" target="_blank" rel="noopener">https://dev.to/martinheinz/ultimate-setup-for-your-next-golang-project-5dae</a></li></ol></li><li><ol start="3"><li>Protobuf 介绍：<a href="https://scene-si.org/2019/12/02/introduction-to-protobuf-services/" target="_blank" rel="noopener">https://scene-si.org/2019/12/02/introduction-to-protobuf-services/</a></li></ol></li><li><ol start="4"><li>为什么基础服务不应该高可用 <a href="https://draveness.me/whys-the-design-unstable-infrastructure" target="_blank" rel="noopener">https://draveness.me/whys-the-design-unstable-infrastructure</a></li></ol></li><li><ol start="5"><li>配置 MySQL 主主复制: <a href="https://colobu.com/2019/12/02/How-to-Setup-MySQL-Master-Master-Replication/*" target="_blank" rel="noopener">https://colobu.com/2019/12/02/How-to-Setup-MySQL-Master-Master-Replication/*</a> 【活动】上海meetup <a href="https://www.bagevent.com/event/6197112*" target="_blank" rel="noopener">https://www.bagevent.com/event/6197112*</a></li></ol></li></ul><h2 id="go语言中文网每日资讯_2019-12-02">go语言中文网(每日资讯)_2019-12-02</h2><h3 id="一-golang来啦">一、Golang来啦</h3><p>1.<a href="https://mp.weixin.qq.com/s/zW7U-4zpAh2e8y1i_5hJtw" target="_blank" rel="noopener">Go面试每天一篇（第88天）</a></p><h3 id="二-go语言中文网">二、Go语言中文网</h3><p>1.<a href="https://mp.weixin.qq.com/s/hwuDB5Awx4ifuD9V7XW9pg" target="_blank" rel="noopener">Go 创建对象时，如何优雅的传递初始化参数</a></p><p>2.<a href="https://mp.weixin.qq.com/s/qfo2g0-pDbRqU4qXpDO7lw" target="_blank" rel="noopener">Go 命令行解析 flag 包之通过子命令实现看 go 命令源码</a></p><p>3.<a href="https://mp.weixin.qq.com/s/tRiIAGzGaK2oq0TRK2XNmQ" target="_blank" rel="noopener">一起攻克面试难关：Go 面试每天一篇（第 72 天）</a></p><p>4.<a href="https://mp.weixin.qq.com/s/76ctJ-mXFnrGYGP_ooWT0g" target="_blank" rel="noopener">现代程序员必须掌握的：Dockerfile 与 Compose 环境搭建学习笔记（一）</a></p><p>5.<a href="https://mp.weixin.qq.com/s/bsSsDB_LQozKbCjFwGT1-A" target="_blank" rel="noopener">golang刷leetcode动态规划（3）动态规划总结分类</a></p><h3 id="三-互联网技术窝">三、互联网技术窝</h3><p>1.<a href="https://mp.weixin.qq.com/s/-NFlyGcaFY4bsCFI7oIvIg" target="_blank" rel="noopener">图解redis五种数据结构底层实现(动图哦)</a></p><h3 id="四-我的小碗汤">四、我的小碗汤</h3><p>1.<a href="https://mp.weixin.qq.com/s/M1q30FI61JD7GmKxwo-Jqg" target="_blank" rel="noopener">备战CKA每日一题——第10天 | 面试常问：允许A访问B，不允许C访问B，怎么做？</a></p><h2 id="gocn_news_2019-12-02">gocn_news_2019-12-02</h2><ul><li><ol><li>Go 语言中避免类型推断 <a href="https://medium.com/@ClayShentrup/avoiding-type-assertions-in-go-6feaa8762c27" target="_blank" rel="noopener">https://medium.com/@ClayShentrup/avoiding-type-assertions-in-go-6feaa8762c27</a></li></ol></li><li><ol start="2"><li>Go 命令行解析 flag 包之通过子命令实现看 go 命令源码 <a href="https://juejin.im/post/5de3699ef265da05ce3b7350" target="_blank" rel="noopener">https://juejin.im/post/5de3699ef265da05ce3b7350</a></li></ol></li><li><ol start="3"><li>写一个 Golang cli 程序吧 <a href="https://tonnyl.io/Write-A-Go-App/" target="_blank" rel="noopener">https://tonnyl.io/Write-A-Go-App/</a></li></ol></li><li><ol start="4"><li>浅谈 Go 语言中的读写锁和互斥锁 <a href="https://mp.weixin.qq.com/s/ZdSkrn-wF5sdydFLqvRJzw" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/ZdSkrn-wF5sdydFLqvRJzw</a></li></ol></li><li><ol start="5"><li>Kubernetes 的网络，服务，安全性的监测工具 <a href="https://github.com/cilium/hubble" target="_blank" rel="noopener">https://github.com/cilium/hubble</a> * 【活动】上海meetup <a href="https://www.bagevent.com/event/6197112" target="_blank" rel="noopener">https://www.bagevent.com/event/6197112</a></li></ol></li></ul><h2 id="go语言中文网每日资讯_2019-12-01">go语言中文网(每日资讯)_2019-12-01</h2><h3 id="一-golang来啦">一、Golang来啦</h3><p>1.<a href="https://mp.weixin.qq.com/s/A63p297hlYfD2kDgxdsY4w" target="_blank" rel="noopener">Go 面试每天一篇（第 90 天)</a></p><h3 id="二-go语言中文网">二、Go语言中文网</h3><p>1.<a href="https://mp.weixin.qq.com/s/8PH1rc1PspV0zJvVaVwW3Q" target="_blank" rel="noopener">Go语言爱好者周刊：第 19 期</a></p><p>2.<a href="https://mp.weixin.qq.com/s/cK0guzTig9LY49uCrTCkig" target="_blank" rel="noopener">一直谈你眼中的 Go 语言，换个角度看问题：解析器眼中的 Go 语言是怎样的？</a></p><p>3.<a href="https://mp.weixin.qq.com/s/UJ016uHuUvjPMTZP-dAhwQ" target="_blank" rel="noopener">一起攻克面试难关：Go 面试每天一篇（第 71 天）</a></p><p>4.<a href="https://mp.weixin.qq.com/s/dxmh4lHxOfYHeOUteea2WA" target="_blank" rel="noopener">Gin 框架系列 — 路由中间件 - 捕获异常</a></p><p>5.<a href="https://mp.weixin.qq.com/s/fWjpRf5X72uAVA3yAOeCrQ" target="_blank" rel="noopener">Go 刷 LeetCode 系列：动态规划（2）最长公共子串（子序列）</a></p><h3 id="三-容器时代">三、容器时代</h3><p>1.<a href="https://mp.weixin.qq.com/s/-AJgyZLlInUQxF0mlcQ74w" target="_blank" rel="noopener">从零开始入门 | Kubernetes 中的服务发现与负载均衡</a></p><h3 id="四-我的网课">四、我的网课</h3><p>1.<a href="https://mp.weixin.qq.com/s/aEez7cKR8PvW0JvlE7odNw" target="_blank" rel="noopener">istio 的目标是取代中心式网关？</a></p><p>2.<a href="https://www.lijiaocn.com/%E6%96%B9%E6%B3%95/2019/11/29/alipay-svc-mesh-note.html" target="_blank" rel="noopener">蚂蚁金服大规模 ServiceMesh 落地思路和实践经验的 5 篇分享总结</a></p><h3 id="五-码途漫漫">五、码途漫漫</h3><p>1.<a href="https://mp.weixin.qq.com/s/JTjueDUts_zCP-FShT4Ovw" target="_blank" rel="noopener">Go 命令行解析 flag 包之通过子命令实现看 go 命令源码</a></p><h3 id="六-北京gopher-meetup文档分享">六、北京Gopher Meetup文档分享</h3><p>1.<a href="https://www.yuque.com/attachments/yuque/0/2019/pdf/203993/1575200032948-923e593b-a1bf-48c2-b47c-b9c3d52f5d79.pdf" target="_blank" rel="noopener">📎探探长链接项目的Go语言实践.pdf</a></p><p>2.<a href="https://www.yuque.com/attachments/yuque/0/2019/pdf/203993/1575199228667-dab835a6-db9f-41d3-81c7-d4d042318144.pdf" target="_blank" rel="noopener">📎探探微服务架构演进之路 .pdf</a></p><p>3.<a href="https://www.yuque.com/attachments/yuque/0/2019/pdf/203993/1575199328805-e1385a7e-e2b4-4c1f-a83c-7b9134d08df1.pdf" target="_blank" rel="noopener">📎美团构建部署平台解析与Go 的实践 .pdf</a></p><p>4.<a href="https://www.yuque.com/attachments/yuque/0/2019/pdf/203993/1575200396244-239cede0-680e-4339-9ce8-347038138cf5.pdf" target="_blank" rel="noopener">📎深度剖析Mosn.pdf</a></p><p>5.<a href="https://www.yuque.com/attachments/yuque/0/2019/pdf/203993/1575200626795-71bfd46a-aed7-483c-83ed-aaa884ea5583.pdf" target="_blank" rel="noopener">📎Go语言电子表格文档格式标准实践.pdf</a></p><h2 id="gocn_news_2019-12-01">gocn_news_2019-12-01</h2><ul><li><ol><li>Go开发者2019调查 <a href="https://google.qualtrics.com/jfe/form/SV_b1xqnBCMpZAhJZ3" target="_blank" rel="noopener">https://google.qualtrics.com/jfe/form/SV_b1xqnBCMpZAhJZ3</a></li></ol></li><li><ol start="2"><li>使用 OpenFaaS 和 Go 开启 Serverless 之旅 <a href="https://towardsdatascience.com/going-serverless-with-openfaas-and-golang-building-optimized-templates-730991084443" target="_blank" rel="noopener">https://towardsdatascience.com/going-serverless-with-openfaas-and-golang-building-optimized-templates-730991084443</a></li></ol></li><li><ol start="3"><li>元数据集群管理器 orbiter <a href="https://github.com/caos/orbiter" target="_blank" rel="noopener">https://github.com/caos/orbiter</a></li></ol></li><li><ol start="4"><li>error 检查优化工具 errwrap <a href="https://github.com/fatih/errwrap" target="_blank" rel="noopener">https://github.com/fatih/errwrap</a></li></ol></li><li><ol start="5"><li>Go 语言简单性的价值 <a href="https://benjamincongdon.me/blog/2019/11/11/The-Value-in-Gos-Simplicity/*" target="_blank" rel="noopener">https://benjamincongdon.me/blog/2019/11/11/The-Value-in-Gos-Simplicity/*</a> 【活动】上海meetup <a href="https://www.bagevent.com/event/6197112" target="_blank" rel="noopener">https://www.bagevent.com/event/6197112</a></li></ol></li></ul><h2 id="go语言中文网每日资讯_2019-11-30">go语言中文网(每日资讯)_2019-11-30</h2><h3 id="一-golang来啦">一、Golang来啦</h3><p>1.<a href="https://mp.weixin.qq.com/s/ZybzKhxm1R9yAe7wkdUA5w" target="_blank" rel="noopener">Go 面试每天一篇（第 89 天)</a></p><h3 id="二-go语言中文网">二、Go语言中文网</h3><p>1.<a href="https://mp.weixin.qq.com/s/iGS4ue-_JSRv7XrfIRaqpg" target="_blank" rel="noopener">Go 如何处理 HTTP 请求？掌握这两点即可</a></p><p>2.<a href="https://mp.weixin.qq.com/s/4VC1AXaYxdCPexp7OEAOiw" target="_blank" rel="noopener">用了这么久的 Go，你知道 Go 语言是怎么编译的吗？</a></p><p>3.<a href="https://mp.weixin.qq.com/s/vwKnTTRfWVwBSkR7pfnZ6g" target="_blank" rel="noopener">一起攻克面试难关：Go 面试每天一篇（第 70 天）</a></p><p>4.<a href="https://mp.weixin.qq.com/s/zHGyz0vWprlozJn1thgS7g" target="_blank" rel="noopener">Go 刷 LeetCode 系列：动态规划（1）最长回文子串</a></p><p>5.<a href="https://mp.weixin.qq.com/s/AZvPIo4PVxv1Wjrk4tt4PQ" target="_blank" rel="noopener">值得收藏调度器系列：意犹未尽 — GPM 的状态流转（十）</a></p><h3 id="三-容器时代">三、容器时代</h3><p>1.<a href="https://mp.weixin.qq.com/s/p2xKo-4Uco-H0A5vUCbQ_w" target="_blank" rel="noopener">阿里巴巴大规模神龙裸金属 Kubernetes 集群运维实践</a></p><p>2.<a href="https://www.yuque.com/attachments/yuque/0/2019/pdf/203993/1575117596573-2c738127-dc9f-491f-9986-0ea68fda57b9.pdf" target="_blank" rel="noopener">📎不一样的 双11 技术，阿里巴巴经济体云原生实践.pdf</a></p><h3 id="四-我的小碗汤">四、我的小碗汤</h3><p>[1.备战CKA每日一题——第9天](</p><h2 id="gocn_news_2019-11-30">gocn_news_2019-11-30</h2><ul><li><ol><li>Go 号称几行代码开启一个 HTTP Server，底层都做了什么？ <a href="https://mp.weixin.qq.com/s/n7mSUB6pxoYmr5u575Nqqg" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/n7mSUB6pxoYmr5u575Nqqg</a></li></ol></li><li><ol start="2"><li>《Go in Action》第6章Concurrency <a href="https://www.jianshu.com/p/a0daafc4eb57" target="_blank" rel="noopener">https://www.jianshu.com/p/a0daafc4eb57</a></li></ol></li><li><ol start="3"><li>浅谈go语言中的读写锁和互斥锁 <a href="https://segmentfault.com/a/1190000021153363" target="_blank" rel="noopener">https://segmentfault.com/a/1190000021153363</a></li></ol></li><li><ol start="4"><li>Go中的中断处理 <a href="https://embeddedgo.github.io/2019/11/29/interrupt_handling_in_go.html" target="_blank" rel="noopener">https://embeddedgo.github.io/2019/11/29/interrupt_handling_in_go.html</a></li></ol></li><li><ol start="5"><li>基于SQLite的轻量级分布式关系数据库 <a href="https://github.com/rqlite/rqlite*" target="_blank" rel="noopener">https://github.com/rqlite/rqlite*</a> 【活动】上海meetup <a href="https://www.bagevent.com/event/6197112" target="_blank" rel="noopener">https://www.bagevent.com/event/6197112</a></li></ol></li></ul><h2 id="go语言中文网每日资讯_2019-11-29">go语言中文网(每日资讯)_2019-11-29</h2><h3 id="一-golang来啦">一、Golang来啦</h3><p>1.<a href="https://mp.weixin.qq.com/s/ZiqP2pyHzN4RUuE-cANUDg" target="_blank" rel="noopener">Go 面试每天一篇（第 88 天）</a></p><h3 id="二-go语言中文网">二、Go语言中文网</h3><p>1.<a href="https://mp.weixin.qq.com/s/uAjcH7raKnlkJ29iX1q8cw" target="_blank" rel="noopener">sync.Pool 一定会提升性能吗？建议你先学习一下它的设计</a></p><p>2.<a href="https://mp.weixin.qq.com/s/OuMCtPGEDD425wCnheA_ew" target="_blank" rel="noopener">Gin 框架系列 — 路由中间件：日志记录</a></p><p>3.<a href="https://mp.weixin.qq.com/s/cdVVYoH3UZHWZl9s1JMdgg" target="_blank" rel="noopener">一起攻克面试难关：Go 面试每天一篇（第 70 天）</a></p><p>4.<a href="https://mp.weixin.qq.com/s/yxtytnJri2Lfw_ejY8Pk7A" target="_blank" rel="noopener">图文并茂讲解分布式事务的实现原理</a></p><h2 id="gocn_news_2019-11-29">gocn_news_2019-11-29</h2><ul><li><ol><li>停止信任你的依赖包 <a href="https://itnext.io/golang-stop-trusting-your-dependencies-a4c916533b04" target="_blank" rel="noopener">https://itnext.io/golang-stop-trusting-your-dependencies-a4c916533b04</a></li></ol></li><li><ol start="2"><li>你应该知道的Go漏洞之Top5 <a href="https://resources.whitesourcesoftware.com/blog-whitesource/top-5-go-vulnerabilities" target="_blank" rel="noopener">https://resources.whitesourcesoftware.com/blog-whitesource/top-5-go-vulnerabilities</a></li></ol></li><li><ol start="3"><li>Go的组合与继承 <a href="http://jim-mcbeath.blogspot.com/2019/11/go-composition-vs-inheritance.html" target="_blank" rel="noopener">http://jim-mcbeath.blogspot.com/2019/11/go-composition-vs-inheritance.html</a></li></ol></li><li><ol start="4"><li>蚂蚁金服 Service Mesh 大规模落地系列 - RPC 篇 <a href="https://mp.weixin.qq.com/s/E_CjNP90kFf2xrcGOE6Efg" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/E_CjNP90kFf2xrcGOE6Efg</a></li></ol></li><li><ol start="5"><li>reflow:字符串自动换行库 <a href="https://github.com/muesli/reflow" target="_blank" rel="noopener">https://github.com/muesli/reflow</a></li></ol></li></ul><h2 id="go语言中文网每日资讯_2019-11-28">go语言中文网(每日资讯)_2019-11-28</h2><h3 id="一-golang来啦">一、Golang来啦</h3><p>1.<a href="https://mp.weixin.qq.com/s/zW7U-4zpAh2e8y1i_5hJtw" target="_blank" rel="noopener">Go面试每天一篇（第87天）</a></p><h3 id="二-go语言中文网">二、Go语言中文网</h3><p>1.<a href="https://mp.weixin.qq.com/s/n7mSUB6pxoYmr5u575Nqqg" target="_blank" rel="noopener">Go 号称几行代码开启一个 HTTP Server，底层都做了什么？</a></p><p>2.<a href="https://mp.weixin.qq.com/s/VOCNRBUh3d7KoJY8nfvf1Q" target="_blank" rel="noopener">Gin 框架系列 — 规划目录和参数验证</a></p><p>3.<a href="https://mp.weixin.qq.com/s/vVWDVbA3_o1z9LdViwuxoA" target="_blank" rel="noopener">一起攻克面试难关：Go 面试每天一篇（第 69 天）</a></p><p>4.<a href="https://mp.weixin.qq.com/s/bjydMPHWAXqsYEsFT_M9Kg" target="_blank" rel="noopener">Go 语言中 GOROOT 一定需要设置吗？</a></p><p>5.<a href="https://mp.weixin.qq.com/s/tj-7cUlHV1M9ayrVnAG8UQ" target="_blank" rel="noopener">手绘图解惑：Go 中函数传参存在引用传递吗？</a></p><h3 id="三-新亮笔记">三、新亮笔记</h3><p>1.<a href="https://mp.weixin.qq.com/s/-0KL_ooMLZUMtcEU25cueQ" target="_blank" rel="noopener">Go - 使用 defer 函数 要注意的几个点</a></p><h2 id="gocn_news_2019-11-28">gocn_news_2019-11-28</h2><ul><li><ol><li>基于gtop和vtop的基于终端的图形活动监视器 <a href="https://github.com/cjbassi/gotop" target="_blank" rel="noopener">https://github.com/cjbassi/gotop</a></li></ol></li><li><ol start="2"><li>在Go中编写Qt应用程序,部署更加容易 <a href="https://github.com/therecipe/qt" target="_blank" rel="noopener">https://github.com/therecipe/qt</a></li></ol></li><li><ol start="3"><li>详细解析Go的sync包 <a href="https://medium.com/better-programming/a-closer-look-at-go-sync-package-9f4e4a28c35a" target="_blank" rel="noopener">https://medium.com/better-programming/a-closer-look-at-go-sync-package-9f4e4a28c35a</a></li></ol></li><li><ol start="4"><li>在Go中重新实现Unix watch命令 <a href="https://github.com/antonmedv/watch" target="_blank" rel="noopener">https://github.com/antonmedv/watch</a></li></ol></li><li><ol start="5"><li>Golang实现的分布式限流滑动窗口算法 <a href="https://github.com/RussellLuo/slidingwindow*%E3%80%90%E6%B4%BB%E5%8A%A8%E3%80%91%E5%8C%97%E4%BA%ACmeetup" target="_blank" rel="noopener">https://github.com/RussellLuo/slidingwindow*【活动】北京meetup</a> <a href="https://www.bagevent.com/event/6150831*%E3%80%90%E6%B4%BB%E5%8A%A8%E3%80%91%E4%B8%8A%E6%B5%B7meetup" target="_blank" rel="noopener">https://www.bagevent.com/event/6150831*【活动】上海meetup</a> <a href="https://www.bagevent.com/event/6197112" target="_blank" rel="noopener">https://www.bagevent.com/event/6197112</a></li></ol></li></ul><h2 id="go语言中文网每日资讯_2019-11-27">go语言中文网(每日资讯)_2019-11-27</h2><h3 id="一-golang来啦">一、Golang来啦</h3><p>1.<a href="https://mp.weixin.qq.com/s/28eSaqgrWei0lP-JfEFJ-A" target="_blank" rel="noopener">Go面试每天一篇（第86天）</a></p><h3 id="二-go语言中文网">二、Go语言中文网</h3><p>1.<a href="https://mp.weixin.qq.com/s/z3q1A-Apky53Z8OHzNBvEw" target="_blank" rel="noopener">带你领略Go源码的魅力 — Go内存原理详解</a></p><p>2.<a href="https://mp.weixin.qq.com/s/L8b82xN6qB9yfvgyX3tYQA" target="_blank" rel="noopener">实战：使用 Go 打造另一款简单实用的 ORM</a></p><p>3.<a href="https://mp.weixin.qq.com/s/lmNu8dIIXOBjk1po4G0poA" target="_blank" rel="noopener">一起攻克面试难关：Go 面试每天一篇（第 68 天）</a></p><p>4.<a href="https://mp.weixin.qq.com/s/E7iOmQZDxBUI7YuY13QiSA" target="_blank" rel="noopener">每天都在调用函数，Go 中函数调用的原理你知道吗？</a></p><p>5.<a href="https://mp.weixin.qq.com/s/IoqzqfSK1x2AE1xuVeO4Bw" target="_blank" rel="noopener">值得收藏调度器系列：忠于职守 — sysmon 线程到底做了什么？（九）</a></p><h3 id="三-容器时代">三、容器时代</h3><p>1.<a href="https://mp.weixin.qq.com/s/B5W25DIn0o8V5XhDwbengg" target="_blank" rel="noopener">k8s v1.17 新特性预告: 拓扑感知服务路由</a></p><h3 id="四-我的小碗汤">四、我的小碗汤</h3><p>1.<a href="https://mp.weixin.qq.com/s/W7zlVC9OiNMtgOyFL3QyKQ" target="_blank" rel="noopener">备战CKA每日一题——第8天</a></p><h3 id="五-go夜读">五、Go夜读</h3><p>1.<a href="https://mp.weixin.qq.com/s/RPHaH_qPTGGUQYzWEu32qA" target="_blank" rel="noopener">第 69 期 Go 夜读预告-基于 Go 语言打造的教育行业技术中台</a></p><p>2.<a href="https://mp.weixin.qq.com/s/TqQb_yEwPLZ0ukgLjxPbZg" target="_blank" rel="noopener">深入浅出 Golang Runtime</a></p><h2 id="gocn_news_2019-11-27">gocn_news_2019-11-27</h2><ul><li><ol><li>走进Golang之运行与Plan9汇编 <a href="https://mp.weixin.qq.com/s/5x7OV47dfOwwVvQCPkvFKg" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/5x7OV47dfOwwVvQCPkvFKg</a></li></ol></li><li><ol start="2"><li>带你领略Go源码的魅力----Go内存原理详解 <a href="https://juejin.im/post/5ddcf31751882572d8212481" target="_blank" rel="noopener">https://juejin.im/post/5ddcf31751882572d8212481</a></li></ol></li><li><ol start="3"><li>[译]Go：内存管理与内存分配 <a href="https://juejin.im/post/5ddcdc5df265da05c33fcad2" target="_blank" rel="noopener">https://juejin.im/post/5ddcdc5df265da05c33fcad2</a></li></ol></li><li><ol start="4"><li>Go创建对象时，如何优雅的传递初始化参数 <a href="https://pengrl.com/p/60015/" target="_blank" rel="noopener">https://pengrl.com/p/60015/</a></li></ol></li><li><ol start="5"><li>k8s v1.17 新特性预告: 拓扑感知服务路由 <a href="https://mp.weixin.qq.com/s/B5W25DIn0o8V5XhDwbengg%E3%80%90%E6%B4%BB%E5%8A%A8%E3%80%91%E5%8C%97%E4%BA%ACmeetup" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/B5W25DIn0o8V5XhDwbengg【活动】北京meetup</a> <a href="https://www.bagevent.com/event/6150831%E3%80%90%E6%B4%BB%E5%8A%A8%E3%80%91%E4%B8%8A%E6%B5%B7meetup" target="_blank" rel="noopener">https://www.bagevent.com/event/6150831【活动】上海meetup</a> <a href="https://www.bagevent.com/event/6197112" target="_blank" rel="noopener">https://www.bagevent.com/event/6197112</a></li></ol></li></ul><h2 id="go语言中文网每日资讯_2019-11-26">go语言中文网(每日资讯)_2019-11-26</h2><h3 id="一-golang来啦">一、Golang来啦</h3><p>1.<a href="https://mp.weixin.qq.com/s/WB29HPkZ9k8XfZSSjTy7Ig" target="_blank" rel="noopener">Go面试每天一篇（第85天）</a></p><h3 id="二-go语言中文网">二、Go语言中文网</h3><p>1.<a href="https://mp.weixin.qq.com/s/Q-gXt33lAG49MjpaZujvfQ" target="_blank" rel="noopener">Go 特意模糊堆和栈之后，你对 Goroutine 栈了解多少？</a></p><p>2.<a href="https://mp.weixin.qq.com/s/eGmhwezu30cnURYHwDpJzQ" target="_blank" rel="noopener">一起攻克面试难关：Go 面试每天一篇（第 67 天）</a></p><p>3.<a href="https://mp.weixin.qq.com/s/Ap7W6KqoJEvBJi4Z21h1Fw" target="_blank" rel="noopener">编程书说的“Go程序员应该让聚合类型的零值也具有意义”是在讲什么</a></p><p>4.<a href="https://mp.weixin.qq.com/s/lhqiKa20dF-bjAJoThlotg" target="_blank" rel="noopener">浅入浅出 MySQL 和 InnoDB：你做到“浅”了吗？</a></p><h3 id="三-容器时代">三、容器时代</h3><p>1.<a href="https://mp.weixin.qq.com/s/I1bk4VgjnoXdgKyIVS1hig" target="_blank" rel="noopener">简化Kubernetes的应用程序（上）</a></p><h3 id="四-我的小碗汤">四、我的小碗汤</h3><p>1.<a href="https://mp.weixin.qq.com/s/y0L0emG28x6VW45MxvXSpQ" target="_blank" rel="noopener">备战CKA每日一题——第7天</a></p><h3 id="五-无闻是个码痴">五、无闻是个码痴</h3><p>1.<a href="https://mp.weixin.qq.com/s/wwFBzGlVYLQ9sqxcLA6uAw" target="_blank" rel="noopener">Go 语言 Web 应用开发 第 04 课：高级模板用法</a></p><h3 id="六-码途漫漫">六、码途漫漫</h3><p>1.<a href="https://mp.weixin.qq.com/s/8APTpaXRgTSGBkzYqEL5-w" target="_blank" rel="noopener">你真的不需要再设置 GOROOT</a></p><p>2.<a href="https://mp.weixin.qq.com/s/CYaH0KcCcw5x1IDQiCkbLQ" target="_blank" rel="noopener">Go 特意模糊堆和栈之后，你对 Goroutine 栈了解多少？</a></p><h2 id="gocn_news_2019-11-26">gocn_news_2019-11-26</h2><ul><li><ol><li>深入浅出 Go runtime <a href="https://mp.weixin.qq.com/s/ivO-USpxiyrL-9BzgE8Vcg" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/ivO-USpxiyrL-9BzgE8Vcg</a></li></ol></li><li><ol start="2"><li>给 K8s API “做减法”：阿里巴巴云原生应用管理的挑战和实践 <a href="https://yq.aliyun.com/articles/727914" target="_blank" rel="noopener">https://yq.aliyun.com/articles/727914</a></li></ol></li><li><ol start="3"><li>使用 Go AST 重构代码 <a href="https://xdg.me/blog/rewriting-go-with-ast-transformation/" target="_blank" rel="noopener">https://xdg.me/blog/rewriting-go-with-ast-transformation/</a></li></ol></li><li><ol start="4"><li>Go 命令行解析 flag 包之快速上手 <a href="https://juejin.im/post/5dd8f61cf265da7dde7687cb" target="_blank" rel="noopener">https://juejin.im/post/5dd8f61cf265da7dde7687cb</a></li></ol></li><li><ol start="5"><li>Go 命令行解析 flag 包之扩展新类型 <a href="https://juejin.im/post/5ddb74d951882573461819f5%E3%80%90%E6%B4%BB%E5%8A%A8%E3%80%91%E5%8C%97%E4%BA%ACmeetup" target="_blank" rel="noopener">https://juejin.im/post/5ddb74d951882573461819f5【活动】北京meetup</a> <a href="https://www.bagevent.com/event/6150831%E3%80%90%E6%B4%BB%E5%8A%A8%E3%80%91%E4%B8%8A%E6%B5%B7meetup" target="_blank" rel="noopener">https://www.bagevent.com/event/6150831【活动】上海meetup</a> <a href="https://www.bagevent.com/event/6197112" target="_blank" rel="noopener">https://www.bagevent.com/event/6197112</a></li></ol></li></ul><h2 id="go语言中文网每日资讯_2019-11-25">go语言中文网(每日资讯)_2019-11-25</h2><h3 id="一-go语言中文网">一、Go语言中文网</h3><p>1.<a href="https://mp.weixin.qq.com/s/GR1RQMQeCYG8zQRqvHKrkA" target="_blank" rel="noopener">一起攻克面试难关：Go 面试每天一篇（第 65 天）</a></p><p>2.<a href="https://mp.weixin.qq.com/s/hpvyIE4lBmUyngCOJXC5Qw" target="_blank" rel="noopener">一起攻克面试难关：Go 面试每天一篇（第 66 天）</a></p><p>3.<a href="https://mp.weixin.qq.com/s/Cjtp1DK_8MP83WuTOoVERw" target="_blank" rel="noopener">go 学习笔记之咬文嚼字带你弄清楚 defer 延迟函数</a></p><p>4.<a href="https://mp.weixin.qq.com/s/8NGwJ4YUmFBQwjg3NOOQlQ" target="_blank" rel="noopener">Go 简单性的价值：来自对 Go 倍加青睐的谷歌软件工程师的自述</a></p><p>5.<a href="https://mp.weixin.qq.com/s/ivO-USpxiyrL-9BzgE8Vcg" target="_blank" rel="noopener">深度长文：深入Go Runtime，你能做到浅出吗?</a></p><p>6.<a href="https://mp.weixin.qq.com/s/8NWUvijD1ctCJH9SWPUq-Q" target="_blank" rel="noopener">Go语言爱好者周刊：第 18 期</a></p><p>7.<a href="https://mp.weixin.qq.com/s/PyAMgR2W2-oh3DNc8pG8sQ" target="_blank" rel="noopener">MySQL 的索引设计你了解吗？</a></p><h3 id="二-golang来啦">二、Golang来啦</h3><p>1.<a href="https://mp.weixin.qq.com/s/mtNehmfJEuuZii9rfg1SJA" target="_blank" rel="noopener">Go 面试每天一篇（第 83 天）</a></p><p>2.<a href="https://mp.weixin.qq.com/s/McvQpdaXTKV5xMJbiKKPZA" target="_blank" rel="noopener">Go 面试每天一篇（第 84 天）</a></p><h3 id="三-码途漫漫">三、码途漫漫</h3><p>1.<a href="https://mp.weixin.qq.com/s/99auJJpHfE-PLpEqxMVQ5Q" target="_blank" rel="noopener">Go 命令行解析 flag 包之扩展新类型</a></p><p>2.<a href="https://mp.weixin.qq.com/s/u-HDuBaUNkxn3yeRVPHZpw" target="_blank" rel="noopener">容器技术的本质之 NameSpace</a></p><h3 id="四-我的小碗汤">四、我的小碗汤</h3><p>1.<a href="https://mp.weixin.qq.com/s/_3LvxG8Qv9ub5MrjloKz4Q" target="_blank" rel="noopener">备战CKA每日一题——第6天</a></p><h3 id="五-我的网课">五、我的网课</h3><p>1.<a href="https://mp.weixin.qq.com/s/eTMcTsAewBFUuqrwAjkoXw" target="_blank" rel="noopener">新技术研究讨论汇总20191123</a></p><h3 id="六-go夜读">六、Go夜读</h3><p>1.<a href="https://mp.weixin.qq.com/s/4Q_SqkYdJ1EVD-13urE5bg" target="_blank" rel="noopener">《Go 夜读》第 68 期网络知识十全大补丸视频 &amp;&amp; QA</a></p><h3 id="七-学院君的后花园">七、 学院君的后花园</h3><p>1.<a href="https://mp.weixin.qq.com/s/Hg-vDa0fWkLTAuQVGGpPxg" target="_blank" rel="noopener">Go 语言网络编程系列（十）—— JSON 处理篇：未知结构数据解码及流式读写处理</a></p><h2 id="gocn_news_2019-11-25">gocn_news_2019-11-25</h2><ul><li><ol><li>golang 避坑指南(1)interface 之坑多多 <a href="https://mp.weixin.qq.com/s/bWsg-ZDBTp3Fp_3Lik83oA" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/bWsg-ZDBTp3Fp_3Lik83oA</a></li></ol></li><li><ol start="2"><li>利用Go开发布隆过滤器 <a href="https://medium.com/@meeusdylan/creating-a-bloom-filter-with-go-7d4e8d944cfa" target="_blank" rel="noopener">https://medium.com/@meeusdylan/creating-a-bloom-filter-with-go-7d4e8d944cfa</a></li></ol></li><li><ol start="3"><li>arachne：Go实现的丢包检测系统 <a href="https://github.com/uber/arachne" target="_blank" rel="noopener">https://github.com/uber/arachne</a></li></ol></li><li><ol start="4"><li>Goroutine、系统线程和CPU管理 <a href="https://medium.com/a-journey-with-go/go-goroutine-os-thread-and-cpu-management-2f5a5eaf518a" target="_blank" rel="noopener">https://medium.com/a-journey-with-go/go-goroutine-os-thread-and-cpu-management-2f5a5eaf518a</a></li></ol></li><li><ol start="5"><li>NATS：过去，现在和未来 <a href="https://www.youtube.com/watch?v=lHQXEqyH57U%E3%80%90%E6%B4%BB%E5%8A%A8%E3%80%91%E5%8C%97%E4%BA%ACmeetup" target="_blank" rel="noopener">https://www.youtube.com/watch?v=lHQXEqyH57U【活动】北京meetup</a> <a href="https://www.bagevent.com/event/6150831%E3%80%90%E6%B4%BB%E5%8A%A8%E3%80%91%E4%B8%8A%E6%B5%B7meetup" target="_blank" rel="noopener">https://www.bagevent.com/event/6150831【活动】上海meetup</a> <a href="https://www.bagevent.com/event/6197112" target="_blank" rel="noopener">https://www.bagevent.com/event/6197112</a></li></ol></li></ul><h2 id="go语言中文网每日资讯_2019-11-24">go语言中文网(每日资讯)_2019-11-24</h2><h3 id="一-gin官方">一、Gin官方</h3><p>1.<a href="https://github.com/gin-gonic/gin" target="_blank" rel="noopener">gin-github </a></p><p>2.<a href="https://github.com/gin-gonic" target="_blank" rel="noopener">gin-o</a><a href="https://github.com/gin-gonic" target="_blank" rel="noopener">rganization</a></p><p>3.<a href="https://github.com/gin-contrib" target="_blank" rel="noopener">gin中间件organization</a></p><h3 id="二-gin系列教程">二、Gin系列教程</h3><p>1.<a href="https://eddycjy.gitbook.io/golang/di-3-ke-gin" target="_blank" rel="noopener">跟煎鱼学Go之Gin系列</a></p><p>2.[Haoxiang’s Tech Blog <a href="https://marcoma.xyz/tags/gin/" target="_blank" rel="noopener">Gin教程]</a></p><p>3.<a href="https://github.com/xinliangnote/Go" target="_blank" rel="noopener">xinliangnote之Gin系列</a></p><h3 id="三-gin源码分析">三、Gin源码分析</h3><p>1.<a href="https://www.cnblogs.com/yjf512/" target="_blank" rel="noopener">轩脉刃de刀光剑影</a><a href="https://www.cnblogs.com/yjf512/p/9670990.html" target="_blank" rel="noopener">Gin框架源码解析</a></p><p>2.[hhstore/blog的gin 源码剖析](<a href="https://www.yuque.com/wegoer/set/hhstore/blog%E7%9A%84gin" target="_blank" rel="noopener">https://www.yuque.com/wegoer/set/hhstore/blog的gin</a> 源码剖析)</p><p>2.<a href="https://www.kancloud.cn/liuqing_will/the_source_code_analysis_of_gin/616920" target="_blank" rel="noopener">源码解析之:gin</a></p><p>3.<a href="http://www.okyes.me/2016/05/08/httprouter.html" target="_blank" rel="noopener">httprouter框架 (Gin使用的路由框架)</a></p><h2 id="gocn_news_2019-11-24">gocn_news_2019-11-24</h2><ul><li><ol><li>DigitalOcean的How to code in go系列 <a href="https://www.digitalocean.com/community/tutorial_series/how-to-code-in-go" target="_blank" rel="noopener">https://www.digitalocean.com/community/tutorial_series/how-to-code-in-go</a></li></ol></li><li><ol start="2"><li>uber-go漏桶限流器使用与原理分析 <a href="https://www.cyhone.com/articles/analysis-of-uber-go-ratelimit/" target="_blank" rel="noopener">https://www.cyhone.com/articles/analysis-of-uber-go-ratelimit/</a></li></ol></li><li><ol start="3"><li>WebSocket实现Web端即时通信 <a href="https://mp.weixin.qq.com/s/sbIWO7-2ELdHsekw7qxKjw" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/sbIWO7-2ELdHsekw7qxKjw</a></li></ol></li><li><ol start="4"><li>nebula: 一个可扩展的overlay网络工具 <a href="https://github.com/slackhq/nebula" target="_blank" rel="noopener">https://github.com/slackhq/nebula</a></li></ol></li><li><ol start="5"><li>微博：大规模离线视频处理系统的架构设计 <a href="https://mp.weixin.qq.com/s/siqG3ePZ5jDsuYeC-_hAGg" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/siqG3ePZ5jDsuYeC-_hAGg</a></li></ol></li></ul><h2 id="go语言中文网每日资讯_2019-11-23">go语言中文网(每日资讯)_2019-11-23</h2><h3 id="一-go语言中文网">一、Go语言中文网</h3><p>1.<a href="https://mp.weixin.qq.com/s/PJaT6p_fyBPe_YbkNei6Lg" target="_blank" rel="noopener">一起攻克面试难关：Go 面试每天一篇（第 64 天）</a></p><p>2.<a href="https://mp.weixin.qq.com/s/FUI-Eoc6V2e5RhDSFxy6Dw" target="_blank" rel="noopener">为什么golang没有volatile？</a></p><p>3.<a href="https://mp.weixin.qq.com/s/8NGwJ4YUmFBQwjg3NOOQlQ" target="_blank" rel="noopener">Gin 框架系列 - 使用 go modules 包管理工具</a></p><p>4.<a href="https://mp.weixin.qq.com/s/dADRPS8_uWbVA-6YJIoFRA" target="_blank" rel="noopener">函数传参slice传递方式：我对变量产生了这些想法</a></p><p>5.<a href="https://mp.weixin.qq.com/s/GtAeIEkUHDn8kLfGbK06JQ" target="_blank" rel="noopener">详解 Kubernetes Service 的实现原理</a></p><h3 id="二-golang来啦">二、Golang来啦</h3><p>1.<a href="https://mp.weixin.qq.com/s/b3UJw5X34GaZDnWQTdqKqQ" target="_blank" rel="noopener">Go 面试每天一篇（第 82 天）</a></p><h3 id="三-码途漫漫">三、码途漫漫</h3><p>1.<a href="https://mp.weixin.qq.com/s/rzgYifoMzWOO_PD0-2UIpw" target="_blank" rel="noopener">Go 命令行解析 flag 包之快速上手</a></p><p>2.<a href="https://mp.weixin.qq.com/s/eGUdL6Cko1de9Boy6csr4A" target="_blank" rel="noopener">Go官方发布的go.dev给gopher们带来了什么</a>Go相关公众号文章每日推荐 【2019-11-21】</p><h2 id="gocn_news_2019-11-23">gocn_news_2019-11-23</h2><ul><li><ol><li>70行Go代码打败C <a href="https://ajeetdsouza.github.io/blog/posts/beating-c-with-70-lines-of-go/" target="_blank" rel="noopener">https://ajeetdsouza.github.io/blog/posts/beating-c-with-70-lines-of-go/</a></li></ol></li><li><ol start="2"><li>Go中Goroutine、OS Thread和CPU管理 <a href="https://medium.com/a-journey-with-go/go-goroutine-os-thread-and-cpu-management-2f5a5eaf518a" target="_blank" rel="noopener">https://medium.com/a-journey-with-go/go-goroutine-os-thread-and-cpu-management-2f5a5eaf518a</a></li></ol></li><li><ol start="3"><li>Go后台定时任务执行 <a href="https://medium.com/@mkfeuhrer/running-periodic-background-tasks-in-golang-8baa1af9a1f6" target="_blank" rel="noopener">https://medium.com/@mkfeuhrer/running-periodic-background-tasks-in-golang-8baa1af9a1f6</a></li></ol></li><li><ol start="4"><li>撮合引擎开发:对接黑箱 <a href="https://keeganlee.me/post/matching/20191121/" target="_blank" rel="noopener">https://keeganlee.me/post/matching/20191121/</a></li></ol></li><li><ol start="5"><li>2019 Go Developer官方调查 <a href="https://blog.golang.org/survey2019" target="_blank" rel="noopener">https://blog.golang.org/survey2019</a></li></ol></li></ul><h2 id="go语言中文网每日资讯_2019-11-22">go语言中文网(每日资讯)_2019-11-22</h2><h3 id="一-学院君的后花园">一、学院君的后花园</h3><p>1.<a href="https://mp.weixin.qq.com/s/tQyaAPcWtJYz1k9HyFPhHA" target="_blank" rel="noopener">Go 语言网络编程系列（九）—— JSON 处理篇：JSON 编解码基本使用入门</a></p><h3 id="二-go语言中文网">二、Go语言中文网</h3><p>1.<a href="https://mp.weixin.qq.com/s/qFMp7F4dQ-U_SMCvUA0dXA" target="_blank" rel="noopener">一起攻克面试难关：Go 面试每天一篇（第 63 天）</a></p><p>2.<a href="https://mp.weixin.qq.com/s/0nYFqRCxfMnqDSaeiUXtWg" target="_blank" rel="noopener">天冷了，Go语言中文网温馨提示：一定要常喝热水</a></p><p>3.<a href="https://mp.weixin.qq.com/s/bWsg-ZDBTp3Fp_3Lik83oA" target="_blank" rel="noopener">golang 避坑指南(1)interface 之坑多多 | 文末深圳 Meetup</a></p><p>4.<a href="https://mp.weixin.qq.com/s/UbUV1HFpJqoYCgUj0oxhiw" target="_blank" rel="noopener">一个程序员对架构的认识</a></p><p>5.<a href="https://mp.weixin.qq.com/s/zIclqsNHz4xQmrnCvxE2Vw" target="_blank" rel="noopener">值得收藏调度器系列：锲而不舍 — M 是怎样找工作的？（八）</a></p><h3 id="三-golang来啦">三、Golang来啦</h3><p>1.<a href="https://mp.weixin.qq.com/s/2iz65lFmrYaJqViB1SMmiQ" target="_blank" rel="noopener">Go 面试每天一篇（第 81 天）</a></p><h3 id="四-我的小碗汤">四、我的小碗汤</h3><p>1.<a href="https://mp.weixin.qq.com/s/UcpP4koV1tTRxfM7Vmi0Ug" target="_blank" rel="noopener">备战CKA每日一题——第5天</a></p><h3 id="五-容器时代">五、 容器时代</h3><p>1.<a href="https://mp.weixin.qq.com/s/VDDFCkk7jWFH4zBXWNjEbQ" target="_blank" rel="noopener">Kubernetes中的gRPC服务健康检查</a></p><h3 id="六-学而思网校技术团队">六、学而思网校技术团队</h3><p>1.<a href="https://mp.weixin.qq.com/s/c_7omM1SocMlPnm8heyj4Q" target="_blank" rel="noopener">【Golang源码系列】一：Map实现原理分析</a></p><h2 id="gocn_news_2019-11-22">gocn_news_2019-11-22</h2><ul><li><ol><li>Go语言内存管理与分配[译]  <a href="https://pengrl.com/p/38720/" target="_blank" rel="noopener">https://pengrl.com/p/38720/</a></li></ol></li><li><ol start="2"><li>Go开源项目BigCache如何加速并发访问以及避免高额的GC开销 [译] <a href="https://pengrl.com/p/35302/" target="_blank" rel="noopener">https://pengrl.com/p/35302/</a></li></ol></li><li><ol start="3"><li>详解Kubernetes Pod的实现原理 <a href="https://mp.weixin.qq.com/s/tQfLRxTVuftgS_yHPm6flw" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/tQfLRxTVuftgS_yHPm6flw</a></li></ol></li><li><ol start="4"><li>要优雅退出吗？dubbogo给你 <a href="https://www.jianshu.com/p/7d83153b9ee5" target="_blank" rel="noopener">https://www.jianshu.com/p/7d83153b9ee5</a></li></ol></li><li><ol start="5"><li>k3s正式GA！Rancher打造从云端到边缘的“K8S即服务” <a href="https://mp.weixin.qq.com/s/uB9fKOQ_Cu67LQsBqpGfBA" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/uB9fKOQ_Cu67LQsBqpGfBA</a></li></ol></li></ul><h2 id="go语言中文网每日资讯_2019-11-21">go语言中文网(每日资讯)_2019-11-21</h2><h3 id="一-go语言中文网">一、Go语言中文网</h3><p>1.<a href="https://mp.weixin.qq.com/s/MyMpDalLQ4dD_9WwkgpJBw" target="_blank" rel="noopener">一起攻克面试难关：Go 面试每天一篇（第 62 天）</a></p><p>2.<a href="https://mp.weixin.qq.com/s/Slf7J6ZP4Uz9ukRc-JORyg" target="_blank" rel="noopener">由一个简单程序图解Go语言内存分配和管理</a></p><p>3.<a href="https://mp.weixin.qq.com/s/EQYJVRZuAGW964ZyXyxd5A" target="_blank" rel="noopener">Gin框架系列 - 你是如何组织项目目录的？</a></p><p>4.<a href="https://mp.weixin.qq.com/s/TLyXFnERmm8F8R4Ln_nLkA" target="_blank" rel="noopener">Rob Pike 写在 Go 开源十周年：计算重现性 — 一些挑战</a></p><p>5.<a href="https://mp.weixin.qq.com/s/UfJQi7w2NflA_68sbH0Fzg" target="_blank" rel="noopener">别样学习：Go初始化变量的招式</a></p><h3 id="二-golang来啦">二、Golang来啦</h3><p>1.<a href="https://mp.weixin.qq.com/s/MfjhHXNhQVHliyzTQh3C_g" target="_blank" rel="noopener">Go 面试每天一篇（第 80 天）</a></p><h3 id="三-我的小碗汤">三、我的小碗汤</h3><p>1.<a href="https://mp.weixin.qq.com/s/V9Q7yewpE2Cm7jGiCmL1HA" target="_blank" rel="noopener">备战CKA每日一题——第4天</a></p><h3 id="四-容器时代">四、容器时代</h3><p>1.<a href="https://mp.weixin.qq.com/s/6cWzSeQJ2QoeczYk7H4rAg" target="_blank" rel="noopener">拐点已至，云原生引领数字化转型升级</a></p><p>2.<a href="https://mp.weixin.qq.com/s/cakDmQ-8D__sO-AWgRWLaA" target="_blank" rel="noopener">Cortex：Prometheus 针对多个客户端状态的监控</a></p><h3 id="五-微服务架构体系的深度治理">五、微服务架构体系的深度治理</h3><p>1.<a href="https://www.yuque.com/attachments/yuque/0/2019/pdf/203993/1574336723604-835846e8-d376-4f19-8636-41e553d2262e.pdf" target="_blank" rel="noopener">📎微服务架构体系的深度治理.pdf</a></p><h3 id="六-go语言高薪进阶公开课">六、Go语言高薪进阶公开课</h3><p>1.<a href="https://appolhfk6r26639.h5.xiaoeknow.com/content_page/eyJ0eXBlIjoxMiwicmVzb3VyY2VfdHlwZSI6NCwicmVzb3VyY2VfaWQiOiJsXzVkZDUwYjMyNzFkZGFfZ2wyMUV6ejUiLCJwcm9kdWN0X2lkIjoiIiwiYXBwX2lkIjoiYXBwT2xoRms2cjI2NjM5IiwiZXh0cmFfZGF0YSI6MH0?entry=1&amp;entry_type=l_5dd50b3271dda_gl21Ezz5&amp;state=2819f90ef3b31a1c10e27a25e2813a9f_CAwpcl&amp;app_id=appOlhFk6r26639" target="_blank" rel="noopener">Go语言高薪进阶公开课直播地址</a></p><p>2.<a href="https://www.yuque.com/attachments/yuque/0/2019/pdf/203993/1574336649654-02e1d5ea-f694-48d6-afff-28323e9e0e62.pdf" target="_blank" rel="noopener">📎Go内存详解.pdf</a></p><h2 id="gocn_news_2019-11-21">gocn_news_2019-11-21</h2><ul><li><ol><li>kubeedge源码分析系列之edgecore（三）<a href="https://juejin.im/post/5dd3cdfd5188254eed5b2859" target="_blank" rel="noopener">https://juejin.im/post/5dd3cdfd5188254eed5b2859</a></li></ol></li><li><ol start="2"><li>Restful风格和Go实践  <a href="https://mp.weixin.qq.com/s/zGcGl0H_gZaFJ4XbwayoaA" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/zGcGl0H_gZaFJ4XbwayoaA</a></li></ol></li><li><ol start="3"><li>go中的关键字-select <a href="http://www.cnblogs.com/33debug/p/11891154.html" target="_blank" rel="noopener">http://www.cnblogs.com/33debug/p/11891154.html</a></li></ol></li><li><ol start="4"><li>用 Go 重构 C 语言系统，这个抗住春晚红包的百度转发引擎承接了万亿流量  <a href="https://mp.weixin.qq.com/s/kQb3pHOU7_SdeAKfkptRYw" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/kQb3pHOU7_SdeAKfkptRYw</a></li></ol></li><li><ol start="5"><li>容器中某Go服务GC停顿经常超过100ms排查 <a href="https://mp.weixin.qq.com/s/H34xmtDIomaVSmZQO1JK-g" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/H34xmtDIomaVSmZQO1JK-g</a></li></ol></li></ul><h2 id="go语言中文网每日资讯_2019-11-20">go语言中文网(每日资讯)_2019-11-20</h2><h3 id="一-golang来啦">一、Golang来啦</h3><p>1.<a href="https://mp.weixin.qq.com/s/oBF-rwE3UkvZ8mRjgV_rIg" target="_blank" rel="noopener">Go面试每天一篇（第79天）</a></p><h3 id="二-go语言中文网">二、Go语言中文网</h3><p>1.<a href="https://mp.weixin.qq.com/s/SLWj9Qph22cweHtnmh5QhQ" target="_blank" rel="noopener">从Go开源项目BigCache学习加速并发访问和避免高额的GC开销</a></p><p>2.<a href="https://mp.weixin.qq.com/s/vUM2Ei_WzXs4M94pNU3bcw" target="_blank" rel="noopener">Gin框架系列 - 自定义错误处理</a></p><p>3.<a href="https://mp.weixin.qq.com/s/g3k9UD3l24OxKMdYCAVqGg" target="_blank" rel="noopener">一起攻克面试难关：Go 面试每天一篇（第 61 天）</a></p><p>4.<a href="https://mp.weixin.qq.com/s/bgTcbLZbW0qkerRBimK03g" target="_blank" rel="noopener">Go语言中不一样的Interface</a></p><p>5.<a href="https://mp.weixin.qq.com/s/tQfLRxTVuftgS_yHPm6flw" target="_blank" rel="noopener">详解 Kubernetes Pod 的实现原理</a></p><h3 id="三-容器时代">三、容器时代</h3><p>1.<a href="https://mp.weixin.qq.com/s/YbInTI0vNryEbsCjK5wJYw" target="_blank" rel="noopener">一文看懂 K8s 日志系统设计和实践</a></p><h3 id="四-我的小碗汤">四、我的小碗汤</h3><p>1.<a href="https://mp.weixin.qq.com/s/C618HkPfsXwSRnYVdVdXNw" target="_blank" rel="noopener">备战CKA每日一题——第3天</a></p><h2 id="gocn_news_2019-11-20">gocn_news_2019-11-20</h2><ul><li><ol><li>测试驱动开发中百分百测试覆盖的命令行应用 <a href="https://itnext.io/how-to-tdd-a-console-application-to-achieve-100-coverage-starting-from-main-test-go-934a617b080f" target="_blank" rel="noopener">https://itnext.io/how-to-tdd-a-console-application-to-achieve-100-coverage-starting-from-main-test-go-934a617b080f</a></li></ol></li><li><ol start="2"><li>Go学习笔记之咬文嚼字带你弄清楚defer延迟函数 <a href="https://mp.weixin.qq.com/s/t5tmqsjZ4y4Z_n6u4c9bMw" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/t5tmqsjZ4y4Z_n6u4c9bMw</a></li></ol></li><li><ol start="3"><li>比较用Java、Swift和Go编写的后端框架 <a href="https://medium.com/comsystoreply/https-medium-com-max-comsysto-comparing-backend-frameworks-written-in-java-swift-and-go-70acd07d3a8a" target="_blank" rel="noopener">https://medium.com/comsystoreply/https-medium-com-max-comsysto-comparing-backend-frameworks-written-in-java-swift-and-go-70acd07d3a8a</a></li></ol></li><li><ol start="4"><li>利用强大的interface来模拟和测试外部接口 <a href="https://medium.com/@victorsteven/utilizing-the-power-of-interfaces-when-mocking-and-testing-external-apis-in-golang-1178b0db5a32" target="_blank" rel="noopener">https://medium.com/@victorsteven/utilizing-the-power-of-interfaces-when-mocking-and-testing-external-apis-in-golang-1178b0db5a32</a></li></ol></li><li><ol start="5"><li>Go开发过程中总是要停下来编译：用它解决你的烦恼，快乐编程 <a href="https://mp.weixin.qq.com/s/4xwswOB17A-wup3Gqdlndw" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/4xwswOB17A-wup3Gqdlndw</a></li></ol></li></ul><h2 id="go语言中文网每日资讯_2019-11-19">go语言中文网(每日资讯)_2019-11-19</h2><h3 id="一-golang来啦">一、Golang来啦</h3><p>1.<a href="https://mp.weixin.qq.com/s/hIavH1k_wvE6LZ7X37dfGA" target="_blank" rel="noopener">Go面试每天一篇（第78天）</a></p><h3 id="二-go语言中文网">二、Go语言中文网</h3><ul><li>1.<a href="https://mp.weixin.qq.com/s/4xwswOB17A-wup3Gqdlndw" target="_blank" rel="noopener">Go开发过程中总是要停下来编译：用它解决你的烦恼，快乐编程</a></li><li>2.<a href="https://mp.weixin.qq.com/s/h8wGEyCkmjeUZUGJfQnx-Q" target="_blank" rel="noopener">Gin框架系列 - 数据绑定和验证</a></li><li>3.<a href="https://mp.weixin.qq.com/s/vTYEh4N7wcKasrsmyeeUIQ" target="_blank" rel="noopener">一起攻克面试难关：Go 面试每天一篇（第 60 天）</a></li><li>4.<a href="https://mp.weixin.qq.com/s/AWgdHxpSlXO4Ro5jf6Hxdw" target="_blank" rel="noopener">从 Kubernetes 中的对象谈起</a></li><li>5.<a href="https://mp.weixin.qq.com/s/BtLON43pQ-djHQKsCW4LVA" target="_blank" rel="noopener">If-None-Match 在刷票软件中的应用</a></li></ul><h3 id="三-学院君的后花园">三、学院君的后花园</h3><p>1.<a href="https://mp.weixin.qq.com/s/MyUx_6Xlsx5KQSpqPMyI7g" target="_blank" rel="noopener">Go 语言网络编程系列（八）—— RPC 编程篇：使用 JSON 对传输数据进行编解码</a></p><h3 id="四-go夜读">四、Go夜读</h3><p>1.<a href="https://mp.weixin.qq.com/s/9bIES9W4W_hmYsT6SZBZ9Q" target="_blank" rel="noopener">《Go 夜读》第 68 期预告</a></p><h2 id="gocn_news_2019-11-19">gocn_news_2019-11-19</h2><ul><li>1.Golang容器部署:<a href="https://segmentfault.com/a/1190000021051021" target="_blank" rel="noopener">https://segmentfault.com/a/1190000021051021</a></li><li>2.走进Golang之编译器原理:<a href="https://mp.weixin.qq.com/s/VtRIEpUHn1vavT_FYkL86w" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/VtRIEpUHn1vavT_FYkL86w</a></li><li>3.Golangworkerpool实现：<a href="https://github.com/gammazero/workerpool" target="_blank" rel="noopener">https://github.com/gammazero/workerpool</a></li><li>4.混沌工程落地的六个阶段https://mp.weixin.qq.com/s/UXiDerl6I3RrEoTlXpGwpg</li><li>5.为什么HTTPS比HTTP安全：<a href="https://juejin.im/post/5dd23e556fb9a020350a88f6-" target="_blank" rel="noopener">https://juejin.im/post/5dd23e556fb9a020350a88f6-</a></li></ul><h2 id="go语言中文网每日资讯_2019-11-18">go语言中文网(每日资讯)_2019-11-18</h2><h3 id="一-golang来啦">一、Golang来啦</h3><p>1.<a href="https://mp.weixin.qq.com/s/sd2485PPSRxcc_1CHFzBhw" target="_blank" rel="noopener">Go面试每天一篇（第77天）</a></p><p>2.<a href="https://mp.weixin.qq.com/s/Sf1AG0WUoG7o3HnyHUraQw" target="_blank" rel="noopener">Go 面试每天一篇（第 76 天）</a></p><h3 id="二-go语言中文网">二、Go语言中文网</h3><p>1.<a href="https://mp.weixin.qq.com/s/BNRleKHfyWx7DfUenaZCLA" target="_blank" rel="noopener">Gin框架系列 - 日志记录：Logrus 如何用？</a></p><p>2.<a href="https://mp.weixin.qq.com/s/TamxbRiGP66CbO9bDsDWHw" target="_blank" rel="noopener">一起攻克面试难关：Go 面试每天一篇（第 59 天）</a></p><p>3.<a href="https://mp.weixin.qq.com/s/NGdaH5syqgAjdJ4yIaJQbQ" target="_blank" rel="noopener">Go最重要的数据类型之一：切片使用绕坑指南</a></p><p>4.<a href="https://mp.weixin.qq.com/s/pJ14z5HQhDNubIxjLYAH9Q" target="_blank" rel="noopener">值得收藏调度器系列：生生世世 — schedule 的轮回（七）</a></p><p>5.<a href="https://mp.weixin.qq.com/s/ARCKpGfqB7j-oRkSy53N_g" target="_blank" rel="noopener">Go语言爱好者周刊：第 17 期 | 文末招聘</a></p><p>6.<a href="https://mp.weixin.qq.com/s/c-UcujkdfqbsvioPIQx-8g" target="_blank" rel="noopener">一起攻克面试难关：Go 面试每天一篇（第 58 天）</a></p><h3 id="三-无闻是个码痴">三、无闻是个码痴</h3><p>1.<a href="https://mp.weixin.qq.com/s/iiteMLkXzQGbz8dFhuU9Tg" target="_blank" rel="noopener">在国外远程办公是一种怎样的体验？</a></p><p>2.<a href="https://mp.weixin.qq.com/s/7Y5M4xQ0MGWOJZlBCfujYQ" target="_blank" rel="noopener">GitHub Universe 2019 Keynote 回顾</a></p><h3 id="四-容器时代">四、容器时代</h3><p>1.<a href="https://mp.weixin.qq.com/s/PRZVm0TvyVeVT4KO_umdFQ" target="_blank" rel="noopener">Kubernetes Adds-ons——提供更高效的计算</a></p><h3 id="五-moelove">五、Moelove</h3><p>1.<a href="https://mp.weixin.qq.com/s/Dr_Hl5kTnMT-DiMnbzVWVA" target="_blank" rel="noopener">K8S 生态周报| Helm v3.0.0 正式发布</a></p><p>2.<a href="https://mp.weixin.qq.com/s/bU1vbhVII2fd12_7Dcp5aQ" target="_blank" rel="noopener">2019 容器使用量报告</a></p><h2 id="gocn_news_2019-11-18">gocn_news_2019-11-18</h2><ul><li>1.借助OpenFaaS和Golang实现Serverlesshttps://towardsdatascience.com/going-serverless-with-openfaas-and-golang-the-ultimate-setup-and-workflow-52a4a85a7951</li><li>2.我在C#中实现了Goroutines和Channelshttps://medium.com/@nolanmudge/i-implemented-goroutines-and-channels-in-c-why-dbd4a269bfbe</li><li>3.深入理解Golang之httpserverhttps://juejin.im/post/5dd11baff265da0c0c1fe813</li><li>4.谷歌软件工程师：我为什么喜欢用Go语言？<a href="https://news.51cto.com/art/201911/606121.htm" target="_blank" rel="noopener">https://news.51cto.com/art/201911/606121.htm</a></li><li>5.用Go编写的UNIXed(lineeditor)克隆版本https://github.com/prologic/ed</li></ul><h2 id="go语言中文网每日资讯_2019-11-17">go语言中文网(每日资讯)_2019-11-17</h2><ol><li><p><a href="https://github.com/spf13/viper" target="_blank" rel="noopener">viper</a></p></li><li><p><a href="https://www.cnblogs.com/cnblogs-wangzhipeng/p/9484460.html" target="_blank" rel="noopener">Viper–方便好用的Golang 配置库</a></p></li><li><p><a href="https://kongpingfan.me/2019/04/20/Viper%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/" target="_blank" rel="noopener">golang库——Viper源码分析</a></p></li><li><p><a href="https://blog.csdn.net/cs380637384/article/details/81217767" target="_blank" rel="noopener">go viper包翻译介绍</a></p></li><li><p><a href="https://chunlife.top/2019/02/28/%E5%AD%A6%E4%B9%A0%E4%BD%BF%E7%94%A8confd/" target="_blank" rel="noopener">etcd配置中心——confd/viper</a></p></li><li><p><a href="https://github.com/lalamove/konfig" target="_blank" rel="noopener">konfig</a> 、<a href="https://github.com/micro/go-micro/tree/master/config" target="_blank" rel="noopener">config</a>[<a href="https://micro.mu/docs/cn/go-config.html" target="_blank" rel="noopener">Go Config配置库</a>] <a href="https://github.com/lalamove/konfig#benchmark" target="_blank" rel="noopener">和viper的benchmark</a></p></li></ol><h2 id="gocn_news_2019-11-17">gocn_news_2019-11-17</h2><ul><li>1.解决增量并发的问题https://medium.com/@claudiojm92/solving-increment-concurrency-problems-a788f75ae68d</li><li>2.如何有选择得导出包内的标识符https://engineering.kablamo.com.au/posts/2019/export-test</li><li>3.为什么说代码质量是一个很主观的评判https://medium.com/the-developers-journey/code-quality-not-required-707520627efb</li><li>4.适用于测试的内存SQL引擎ramsqlhttps://github.com/proullon/ramsql</li><li>5.流事件处理框架firebolthttps://github.com/digitalocean/firebolt</li></ul><h2 id="go语言中文网每日资讯_2019-11-16">go语言中文网(每日资讯)_2019-11-16</h2><h3 id="一-golang来啦">一、Golang来啦</h3><p>1.<a href="https://mp.weixin.qq.com/s/2loneGhQAE3s7YDc2hrPqQ" target="_blank" rel="noopener">Go面试每天一篇（第75天）</a></p><h3 id="二-go语言中文网">二、Go语言中文网</h3><p>1.<a href="https://mp.weixin.qq.com/s/JxWlI2LRXQX2kHxMQzJRPw" target="_blank" rel="noopener">Leader 这样说对吗？还是自己动手验证 Go 逃逸分析</a></p><p>2.<a href="https://mp.weixin.qq.com/s/5SDDSYFlEYyi6yNtPRgmTw" target="_blank" rel="noopener">线上问题排查实战：容器中某Go服务GC停顿经常超过100ms</a></p><p>3.<a href="https://mp.weixin.qq.com/s/tqmca23L1JhWMYXhpp4Z0A" target="_blank" rel="noopener">一起攻克面试难关：Go 面试每天一篇（第 57 天）</a></p><p>4.<a href="https://mp.weixin.qq.com/s/753ZVif7ZRq5L777vqrUrw" target="_blank" rel="noopener">Gin 框架系列 - 安装和路由配置</a></p><p>5.<a href="https://mp.weixin.qq.com/s/yhFJLHqchYkcZ1kkTg-eag" target="_blank" rel="noopener">值得收藏调度器系列：千难万险 — goroutine 从生到死（六）</a></p><h3 id="三-无闻是个码痴">三、无闻是个码痴</h3><p>1.<a href="https://mp.weixin.qq.com/s/uSH48yDzIV6oKUwBqeJxFA" target="_blank" rel="noopener">GitHub Mobile 抢先体验篇（多图预警）</a></p><h3 id="四-容器时代">四、容器时代</h3><p>1.<a href="https://mp.weixin.qq.com/s/Bzg56X_tt6gB591nRZUgtw" target="_blank" rel="noopener">从心理学的角度思考职业发展和个人成长</a></p><p>2.<a href="https://mp.weixin.qq.com/s/EVWeQEM7HlPnig0vQ3GKyQ" target="_blank" rel="noopener">云原生存储和云存储有什么区别？</a></p><h2 id="gocn_news_2019-11-16">gocn_news_2019-11-16</h2><ul><li>1.Go的text/template源码解析 <a href="https://bigpigeon.org/post/go-text-template" target="_blank" rel="noopener">https://bigpigeon.org/post/go-text-template</a></li><li>2.Go中的数据结构字典-map <a href="https://www.cnblogs.com/33debug/p/11851585.html" target="_blank" rel="noopener">https://www.cnblogs.com/33debug/p/11851585.html</a></li><li>3.Uber Go 语言编码规范 <a href="https://segmentfault.com/a/1190000021011649" target="_blank" rel="noopener">https://segmentfault.com/a/1190000021011649</a></li><li>4.Golang rabbitmq的使用（一） <a href="https://segmentfault.com/a/1190000021018046" target="_blank" rel="noopener">https://segmentfault.com/a/1190000021018046</a></li><li>5.fastzip：快速创建和读取zip的库 <a href="https://github.com/saracen/fastzip" target="_blank" rel="noopener">https://github.com/saracen/fastzip</a></li></ul><h2 id="go语言中文网每日资讯_2019-11-15">go语言中文网(每日资讯)_2019-11-15</h2><h3 id="一-golang来啦">一、Golang来啦</h3><ol><li><a href="https://mp.weixin.qq.com/s/-cPNDtSdjMvsMvQy0-Qnfw" target="_blank" rel="noopener">Go面试每天一篇（第74天）</a></li></ol><h3 id="二-我要煎鱼说">二、我要煎鱼说</h3><ol><li><a href="https://mp.weixin.qq.com/s/VksbLXT4-7eFiuLDUL79nQ" target="_blank" rel="noopener">关于 goproxy.cn 近期出现错误的说明</a></li></ol><h3 id="三-go语言中文网">三、Go语言中文网</h3><ol><li><a href="https://mp.weixin.qq.com/s/vwBlrJvHXdWhqWmVFhv7-A" target="_blank" rel="noopener">大家用Go都做什么？Go官方新发布的 Go.Dev 告诉你</a></li><li><a href="https://mp.weixin.qq.com/s/C2ZhB-r7SZYqfXLC6yj-VQ" target="_blank" rel="noopener">一起攻克面试难关：Go 面试每天一篇（第 56 天）</a></li><li><a href="https://mp.weixin.qq.com/s/YaxaI95g6mUyYx7hI-Zr2A" target="_blank" rel="noopener">谈 Kubernetes 的架构设计与实现原理</a></li><li><a href="https://mp.weixin.qq.com/s/VZXQeEeNNTLJPfS8tJVJZg" target="_blank" rel="noopener">二进制文件加入 Git 版本的坑？Golang -ldflags 的一个技巧</a></li><li><a href="https://mp.weixin.qq.com/s/8xTtSoLvAcE1u_jWw9I-Eg" target="_blank" rel="noopener">值得收藏调度器系列：偷天换日 — g0 栈和用户栈如何完成切换？（四）</a></li></ol><p>编辑：polaris</p><h2 id="gocn_news_2019-11-15">gocn_news_2019-11-15</h2><ul><li>1.go.dev新的Go开发门户网站上线啦https://www.i-programmer.info/news/98-languages/13250-go-dev-portal-now-online.html</li><li>2.kubeedge源码分析系列之edgecore（一)<a href="https://juejin.im/post/5dcd374ee51d45080d2bdd36" target="_blank" rel="noopener">https://juejin.im/post/5dcd374ee51d45080d2bdd36</a></li><li>3.用Go语言实现pdf的合成https://xdg.me/blog/go-as-glue-json-xml-png-pdf/</li><li>4.musig:像shazam那样实现音乐识别https://github.com/sfluor/musig</li><li>5.Dcron:基于redis与一致性哈希算法的分布式定时任务库https://github.com/LibiChai/dcron  <em>【活动】北京meetup <a href="https://www.bagevent.com/event/6150831" target="_blank" rel="noopener">https://www.bagevent.com/event/6150831</a></em>【活动】杭州meetup <a href="https://www.bagevent.com/event/6129212" target="_blank" rel="noopener">https://www.bagevent.com/event/6129212</a></li></ul><h2 id="go语言中文网每日资讯_2019-11-14">go语言中文网(每日资讯)_2019-11-14</h2><h3 id="一-golang来啦">一、Golang来啦</h3><p>1.<a href="https://mp.weixin.qq.com/s/Jy7bTTUem5f5_Vd8vatRhA" target="_blank" rel="noopener">Go面试每天一篇（第73天）</a></p><h3 id="二-我的小碗汤">二、 我的小碗汤</h3><p>1.<a href="https://mp.weixin.qq.com/s/V5iODjXrRl9fjfk-uM9skw" target="_blank" rel="noopener">避坑指南 | 我非要把这个bug优雅的解决掉</a></p><h3 id="三-go语言中文网">三、Go语言中文网</h3><p>1.<a href="https://mp.weixin.qq.com/s/ROo168oOSkZon_EE0kEbAw" target="_blank" rel="noopener">Go项目实战：用 Go 语言构建 SQL 解析器</a></p><p>2.<a href="https://mp.weixin.qq.com/s/-5Un8uvS4281qB-M4xmJXg" target="_blank" rel="noopener">Go netpoll I/O 多路复用构建原生网络模型之源码深度解析</a></p><p>3.<a href="https://mp.weixin.qq.com/s/KW9tnXgt5Sjz1Oa1R7puHg" target="_blank" rel="noopener">一起攻克面试难关：Go 面试每天一篇（第 55 天）</a></p><p>4.<a href="https://mp.weixin.qq.com/s/oosnb8Ym063iBD9uuSQ-rA" target="_blank" rel="noopener">花椒前端基于 GitLab CI/CD 的自动化构建、发布实践</a></p><p>5.<a href="https://mp.weixin.qq.com/s/zLYiulqO00q9AA3DQCslLw" target="_blank" rel="noopener">浏览器运行数据库是如何实现的？TiDB-Wasm 原理与实现</a></p><h2 id="gocn_news_2019-11-14">gocn_news_2019-11-14</h2><ul><li>1.sourcegraph的Go代码风格指南https://about.sourcegraph.com/handbook/engineering/go_style_guide</li><li>2.减少内存分配开销https://www.markphelps.me/2019/11/profiling-to-reduce-memory-allocations/</li><li>3.Error的堆栈跟踪https://github.com/romanyx/stack</li><li>4.Go实现的终端的天气应用https://github.com/schachmat/wego</li><li>5.扩展Go页面分配器提案https://go.googlesource.com/proposal/+/refs/changes/57/202857/2/design/35112-scaling-the-page-allocator.md*【活动】北京meetuphttps://www.bagevent.com/event/6150831*【活动】杭州meetuphttps://www.bagevent.com/event/6129212</li></ul><h2 id="go语言中文网每日资讯_2019-11-13">go语言中文网(每日资讯)_2019-11-13</h2><h3 id="一-go语言中文网">一、Go语言中文网</h3><p>1.<a href="https://mp.weixin.qq.com/s/6cbDcyuhQpM-UBH_GMV2GA" target="_blank" rel="noopener">两位Go大佬的对话引发的对 Race 的思考总结</a></p><p>2.<a href="https://mp.weixin.qq.com/s/LvkQnJPy1vl4WWMH_JU8EA" target="_blank" rel="noopener">漫画：什么是区块链？很难的问题普通人都能看懂</a></p><p>3.<a href="https://mp.weixin.qq.com/s/plQWcTkMbZ5Z8-WMtXNnwQ" target="_blank" rel="noopener">一起攻克面试难关：Go 面试每天一篇（第 54 天）</a></p><p>4.<a href="https://mp.weixin.qq.com/s/qZoy3FzJIwoctlxvHVqeQQ" target="_blank" rel="noopener">为Java程序员准备的Go教程：快速入门</a></p><p>5.<a href="https://mp.weixin.qq.com/s/1FXMH4JW63gCn4sH0HU3mw" target="_blank" rel="noopener">值得收藏调度器系列：新官上任 — Go sheduler 开始调度循环（五）</a></p><h3 id="二-golang来啦">二、Golang来啦</h3><p>1.<a href="https://mp.weixin.qq.com/s/nfDOlM6Kqfr496eDW0WEwg" target="_blank" rel="noopener">Go 面试每天一篇（第 72 天）</a></p><h3 id="三-圈内精选区块链文章">三、<a href="http://100000p.com/" target="_blank" rel="noopener">圈内精选–区块链文章</a></h3><p>1.<a href="http://100000p.com/article/2c9f60ef6e5884e0016e58875e4e0000" target="_blank" rel="noopener">斗鱼基于 Golang 在高并发场景下的日志系统实践</a></p><h2 id="gocn_news_2019-11-13">gocn_news_2019-11-13</h2><ul><li>1.SystemDesign分享https://www.youtube.com/watch?v=mhUQe4BKZXs&amp;list=PLkQkbY7JNJuBoTemzQfjym0sqbOHt5fnV</li><li>2.Go实现简单TCP扫描器https://mp.weixin.qq.com/s/OhS_RQZojJbkenOSS_tEng</li><li>3.闪电网络——BTC小额支付解决方案https://mp.weixin.qq.com/s/_xVnljUbz7GMGS0pPIlwpA</li><li>4.斗鱼基于Golang在高并发场景下的日志系统实践http://100000p.com/article/2c9f60ef6e5884e0016e58875e4e0000</li><li>5.我的Promtheus到底啥时候报警？<a href="https://aleiwu.com/post/prometheus-alert-why/?from=singlemessage&amp;isappinstalled=0" target="_blank" rel="noopener">https://aleiwu.com/post/prometheus-alert-why/?from=singlemessage&amp;isappinstalled=0</a></li></ul><h2 id="go语言中文网每日资讯_2019-11-12">go语言中文网(每日资讯)_2019-11-12</h2><h3 id="一-go语言中文网">一、Go语言中文网</h3><p>1.<a href="https://mp.weixin.qq.com/s/Bx3ioFKwIlMQqaF1cOCIpw" target="_blank" rel="noopener">一起攻克面试难关：Go 面试每天一篇（第 53 天）</a></p><p>2.<a href="https://mp.weixin.qq.com/s/vq7Jf7NZ612ItlN-u3fDew" target="_blank" rel="noopener">Go为什么能成功，Rob Pike认为做了这5件事</a></p><p>3.<a href="https://mp.weixin.qq.com/s/Oi0_30qSxz1WdmeXnlIM8Q" target="_blank" rel="noopener">Go有标准库 net，还需要其他网络库吗？看看 gnet 再说</a></p><p>4.<a href="https://mp.weixin.qq.com/s/uj-hHEjW61XJ6zeIV3o7eA" target="_blank" rel="noopener">安全很重要：Go项目的安全评估技术</a></p><h3 id="二-golang来啦">二、Golang来啦</h3><p>1.<a href="https://mp.weixin.qq.com/s/Jl8FT_0OK-k5198MBDaAkA" target="_blank" rel="noopener">Go 面试每天一篇（第 71 天）</a></p><h3 id="三-我的小碗汤">三、我的小碗汤</h3><p>1.<a href="https://mp.weixin.qq.com/s/o0iv_rj8AuXN0diYgzBTIA" target="_blank" rel="noopener">（图文并茂，权威最详细）Wireshark抓包分析 TCP三次握手/四次挥手详解</a></p><h3 id="四-云原声技术发展趋势及应用探讨">四、云原声技术发展趋势及应用探讨</h3><p>1.<a href="https://www.yuque.com/attachments/yuque/0/2019/pptx/470492/1573555860604-1e2100be-d2e4-4c35-a249-bccf27718628.pptx" target="_blank" rel="noopener">📎云原生技术发展趋势及应用探讨.pptx</a></p><h2 id="gocn_news_2019-11-12">gocn_news_2019-11-12</h2><ul><li>1.JEB反编译Go二进制文件https://www.pnfsoftware.com/blog/analyzing-golang-executables/</li><li>2.k8s边缘计算平台kubeedge源码分析系列之整体架构https://juejin.im/post/5dc92c66f265da4d513359ab</li><li>3.goplsv0.2.0发布https://github.com/golang/go/issues/33030</li><li>4.Golang限流器time/rate使用介绍https://www.cyhone.com/articles/usage-of-golang-rate/</li><li>5.你不知道的Gounsafe.Pointeruintptr原理和玩法https://www.cnblogs.com/sunsky303/p/11820500.html</li></ul><h2 id="go语言中文网每日资讯_2019-11-11">go语言中文网(每日资讯)_2019-11-11</h2><h3 id="一-golang来啦">一、Golang来啦</h3><ol><li><a href="https://mp.weixin.qq.com/s/OVUI0ExYndqG2ZxNIu9sJQ" target="_blank" rel="noopener">Go 面试每天一篇（第 70 天）</a></li></ol><h3 id="二-go语言中文网">二、Go语言中文网</h3><ol><li><a href="https://mp.weixin.qq.com/s/MSSZjiTPQymNLlnSXOd16Q" target="_blank" rel="noopener">Go语言爱好者周刊：第 16 期</a></li><li><a href="https://mp.weixin.qq.com/s/RDeNxMc6B8NQ6FFYNgdLBA" target="_blank" rel="noopener">超详细的讲解Go中如何实现一个协程池</a></li><li><a href="https://mp.weixin.qq.com/s/ZlyQHfmoY1lzOoRgFSCOBw" target="_blank" rel="noopener">深入golang之—goroutine并发控制与通信</a></li><li><a href="https://mp.weixin.qq.com/s/xZ7i8k2NIJGlG7tRWgWvhQ" target="_blank" rel="noopener">图解中文字符编码-Go语言例解</a></li><li><a href="https://mp.weixin.qq.com/s/WaTpl_EdJOF96BqoZWsOUw" target="_blank" rel="noopener">go语言的开源区块链代码都有哪些？欢迎留言补充</a></li><li><a href="https://mp.weixin.qq.com/s/0Vo4apK4VdBfOs0-KyWXZA" target="_blank" rel="noopener">让数据库运行在 Markdown 文档中：这是真的吗？</a></li></ol><h3 id="三-容器时代">三、容器时代</h3><ol><li><a href="http://mp.weixin.qq.com/mp/getmasssendmsg?__biz=MzI0NjI4MDg5MQ==#wechat_webview_type=1&amp;wechat_redirect" target="_blank" rel="noopener">Jaeger在Kubernetes上的分布式追踪基础设施</a></li></ol><h3 id="四-我的小碗汤">四、我的小碗汤</h3><ol><li><a href="https://mp.weixin.qq.com/s/lGYhUJ06K6I7_YmvFvmuCQ" target="_blank" rel="noopener">大规模场景下 k8s 集群的性能优化</a></li></ol><h3 id="五-无闻是个码痴">五、无闻是个码痴</h3><ol><li><a href="https://mp.weixin.qq.com/s/zG3J4nFKuLE83800r8y0sg" target="_blank" rel="noopener">Go 语言 Web 应用开发 第 03 课：进阶模板用法</a></li></ol><h3 id="六-码农桃花源">六、码农桃花源</h3><ol><li><a href="https://mp.weixin.qq.com/s/QiqoZeew3348OzU0tJ8XxA" target="_blank" rel="noopener">深度解密Go语言之pprof</a></li></ol><h3 id="七-moelove">七、MoeLove</h3><ol><li><a href="https://mp.weixin.qq.com/s/LL7Pj3tz7hT3eFjNnduSJQ" target="_blank" rel="noopener">K8S 生态周报| Vitess 正式从 CNCF 毕业</a></li></ol><h2 id="gocn_news_2019-11-11">gocn_news_2019-11-11</h2><ul><li>1.Go的内存管理与回收 <a href="https://medium.com/a-journey-with-go/go-memory-management-and-memory-sweep-cc71b484de05" target="_blank" rel="noopener">https://medium.com/a-journey-with-go/go-memory-management-and-memory-sweep-cc71b484de05</a></li><li>2.protoc-gen-struct-transformer：帮助将gRPC生成模型与编写的数据模型进行关联的工具 <a href="https://speakerdeck.com/ekhabarov/protoc-gen-struct-transformer" target="_blank" rel="noopener">https://speakerdeck.com/ekhabarov/protoc-gen-struct-transformer</a></li><li>3.构建可持续微服务，我们的看法和建议 <a href="https://building.echo.co.uk/microservices-opinions-and-advice/" target="_blank" rel="noopener">https://building.echo.co.uk/microservices-opinions-and-advice/</a></li><li>4.Staticcheck工具实战 <a href="https://superhighway.dev/staticcheck-in-action" target="_blank" rel="noopener">https://superhighway.dev/staticcheck-in-action</a></li><li>5.lungo：兼容MongoDB协议的嵌入式数据库 <a href="https://github.com/256dpi/lungo%E3%80%90%E6%B4%BB%E5%8A%A8%E3%80%91%E5%8C%97%E4%BA%ACmeetup" target="_blank" rel="noopener">https://github.com/256dpi/lungo【活动】北京meetup</a> <a href="https://www.bagevent.com/event/6150831%E3%80%90%E6%B4%BB%E5%8A%A8%E3%80%91%E6%9D%AD%E5%B7%9Emeetup" target="_blank" rel="noopener">https://www.bagevent.com/event/6150831【活动】杭州meetup</a> <a href="https://www.bagevent.com/event/6129212" target="_blank" rel="noopener">https://www.bagevent.com/event/6129212</a></li></ul><h2 id="go语言中文网每日资讯_2019-11-10">go语言中文网(每日资讯)_2019-11-10</h2><h3 id="go-race-专题">Go Race 专题</h3><ol><li><a href="https://github.com/golang/go/tree/master/src/runtime/race" target="_blank" rel="noopener">Race源码</a></li><li><a href="https://www.yuque.com/wegoer/set/go-race-talk" target="_blank" rel="noopener">Go race的难逃之路</a></li><li><a href="https://segmentfault.com/a/1190000020107431" target="_blank" rel="noopener">Go 译文之竞态检测器 race</a>[官方blog]</li><li><a href="https://golang.org/doc/articles/race_detector.html" target="_blank" rel="noopener">Data Race Detector</a>[官方blog]</li><li><a href="https://krakensystems.co/blog/2019/golang-race-detection" target="_blank" rel="noopener">Golang race detection</a></li><li><a href="https://www.sohamkamani.com/blog/2018/02/18/golang-data-race-and-how-to-fix-it/" target="_blank" rel="noopener">Data races in Go(Golang) and how to fix them</a></li><li><a href="https://speakerdeck.com/kavya719/go-run-race-under-the-hood" target="_blank" rel="noopener">go run -race的底层实现</a> [<a href="https://www.yuque.com/attachments/yuque/0/2019/pdf/203993/1573389823278-c8452c49-30ed-4152-a5ed-2e3e9641554b.pdf" target="_blank" rel="noopener">📎Strangeloop_final.pdf</a>]</li></ol><h2 id="gocn_news_2019-11-10">gocn_news_2019-11-10</h2><ul><li>1.GoNetpollI/O多路复用构建原生网络模型之源码深度解析https://taohuawu.club/go-netpoll-io-multiplexing-reactor</li><li>2.Go垃圾回收：第三部分-GC的步调https://studygolang.com/articles/24562</li><li>3.Go语言协程池模型－图数据库(Neo4j)写入https://www.jianshu.com/p/d27504514c17</li><li>4.使用Go创建一个简单的LoadBalancerhttps://kasvith.github.io/posts/lets-create-a-simple-lb-go/</li><li>5.Golang单元测试入门实践总结https://www.jianshu.com/p/331c432dc036-</li></ul><h2 id="go语言中文网每日资讯_2019-11-09">go语言中文网(每日资讯)_2019-11-09</h2><h3 id="一-学院君的后花园">一、学院君的后花园</h3><p>1.<a href="https://mp.weixin.qq.com/s/0ZkU_8zu13Lqo681eD4i1A" target="_blank" rel="noopener">Go 语言网络编程系列（七）—— RPC 编程篇：默认编解码工具 Gob</a></p><h3 id="二-go语言中文网">二、Go语言中文网</h3><p>1.<a href="https://mp.weixin.qq.com/s/Ywkn2qwxNhLWgYZORJXuaQ" target="_blank" rel="noopener">一起攻克面试难关：Go 面试每天一篇（第 50 天）</a></p><p>2.<a href="https://mp.weixin.qq.com/s/2ysqos7dJTS3DO_srLsdVw" target="_blank" rel="noopener">800 字彻底理解 Go 指针</a></p><p>3.<a href="https://mp.weixin.qq.com/s/DJtUjKEOrxyEEJtIj7NMBA" target="_blank" rel="noopener">详细介绍 Go 中如何实现 bitset</a></p><p>4.<a href="https://mp.weixin.qq.com/s/K6a1UBaVuaA56lPgBpjwKA" target="_blank" rel="noopener">为什么这篇微服务的文章好评如潮？只因它把微服务架构讲透了</a></p><h3 id="三-golang来啦">三、Golang来啦</h3><p>1.<a href="https://mp.weixin.qq.com/s/1rgFCNs9KpRCT_R7sZLEZg" target="_blank" rel="noopener">Go 面试每天一篇（第 68 天）</a></p><h3 id="四-我的小碗汤">四、我的小碗汤</h3><p>1.<a href="https://mp.weixin.qq.com/s/sEY60uCitrc88I3CTff0CQ" target="_blank" rel="noopener">必学必会 ● 1小时入门 Docker，让部署应用更快更简单</a></p><h3 id="五-无闻是个码痴">五、无闻是个码痴</h3><p>1.<a href="https://mp.weixin.qq.com/s/XaSe5qYDN3--jPNn7MMYNQ" target="_blank" rel="noopener">Go 语言 Web 应用开发 第 02 课：基础模板用法</a></p><h3 id="六-我的网课">六、我的网课</h3><p>1.<a href="https://mp.weixin.qq.com/s/NXH7N6QipCtxb7wcsl4AEg" target="_blank" rel="noopener">istio是怎样强行代理Pod的进出请求的？</a></p><h3 id="七-容器时代">七、 容器时代</h3><p>1.<a href="https://mp.weixin.qq.com/s/d1uwBvk6v_eTLkLvvEcrQw" target="_blank" rel="noopener">深入介绍Kubernetes admission webhooks</a></p><p>编辑者：ironbox</p><h2 id="gocn_news_2019-11-09">gocn_news_2019-11-09</h2><ul><li>1.Go语言发行10周年庆祝https://blog.golang.org/10years</li><li>2.容器中某Go服务GC停顿经常超过100ms排查https://mp.weixin.qq.com/s/Lk1EbiT7WprVOyX_dXYMyg</li><li>3.详细介绍Go中如何实现bitsethttps://juejin.im/post/5dc409b2f265da4cfd296635</li><li>4.Go项目安全评估https://blog.trailofbits.com/2019/11/07/attacking-go-vr-ttps/</li><li>5.几种部署GokuAPIGateway的方式https://segmentfault.com/a/1190000020948193【活动】北京meetuphttps://www.bagevent.com/event/6150831【活动】杭州meetuphttps://www.bagevent.com/event/6129212</li></ul><h2 id="go语言中文网每日资讯_2019-11-08">go语言中文网(每日资讯)_2019-11-08</h2><h3 id="一-golang来啦">一、Golang来啦</h3><ol><li><a href="https://mp.weixin.qq.com/s/HT7UwQHLuf2YJrnG_X0UZw" target="_blank" rel="noopener">Go面试每天一篇（第67天）</a></li></ol><h3 id="二-无闻是个码痴">二、无闻是个码痴</h3><ol><li><a href="https://mp.weixin.qq.com/s/L5Eo3kBh2J3zl0OsghzrIQ" target="_blank" rel="noopener">Go 语言 Web 应用开发 开课啦！</a></li><li><a href="https://mp.weixin.qq.com/s/341LO-M3_Qj4Kym_Q5O_Zg" target="_blank" rel="noopener">第 01 课：初窥 HTTP 服务器</a></li></ol><h3 id="三-go夜读分享预告">三、Go夜读分享预告</h3><ol><li><a href="https://mp.weixin.qq.com/s/SyQR9lbhFXxdhc_6B56LgQ" target="_blank" rel="noopener">Go 夜读第 65 期 Go 原生网络模型 vs 异步 Reactor 模型</a></li></ol><h3 id="四-go语言中文网">四、Go语言中文网</h3><ol><li><a href="https://mp.weixin.qq.com/s/fkB8jDYbikHiOJpiwTmkdg" target="_blank" rel="noopener">Go语言中文网和币威合作，共同打造Go语言区块链社区</a></li><li><a href="https://mp.weixin.qq.com/s/TZuHdxvo0rI-X5gxe8FHvQ" target="_blank" rel="noopener">好消息，无闻大神又出课程了：Go 语言 Web 应用开发</a></li><li><a href="https://mp.weixin.qq.com/s/ojCB-jj4YeKbnSqafZJOkw" target="_blank" rel="noopener">一起攻克面试难关：Go 面试每天一篇（第 49 天）</a></li><li><a href="https://mp.weixin.qq.com/s/llOt-Ql0sQHHX7BptJ454w" target="_blank" rel="noopener">在系统中用etcd实现服务注册和发现</a></li></ol><p>编辑：polaris</p><h2 id="gocn_news_2019-11-08">gocn_news_2019-11-08</h2><ul><li><ol><li>Go Modules: v2及更高版本使用 <a href="https://blog.golang.org/v2-go-modules" target="_blank" rel="noopener">https://blog.golang.org/v2-go-modules</a></li></ol></li><li><ol start="2"><li>根据拓扑图理解golang的sync.Map工作原理 <a href="https://segmentfault.com/a/1190000020946989" target="_blank" rel="noopener">https://segmentfault.com/a/1190000020946989</a></li></ol></li><li><ol start="3"><li>如何写高大上的 godoc（Go 文档）<a href="https://cloud.tencent.com/developer/article/1526609" target="_blank" rel="noopener">https://cloud.tencent.com/developer/article/1526609</a></li></ol></li><li><ol start="4"><li>Go 语言 time 包常用用法笔记 <a href="https://cloud.tencent.com/developer/article/1456484" target="_blank" rel="noopener">https://cloud.tencent.com/developer/article/1456484</a></li></ol></li><li><ol start="5"><li>蚂蚁金服 Service Mesh 深度实践 <a href="https://mp.weixin.qq.com/s/XjbmCxdJLKVcFlEUiM7Pig%E3%80%90%E6%B4%BB%E5%8A%A8%E3%80%91%E5%8C%97%E4%BA%ACmeetup" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/XjbmCxdJLKVcFlEUiM7Pig【活动】北京meetup</a> <a href="https://www.bagevent.com/event/6150831%E3%80%90%E6%B4%BB%E5%8A%A8%E3%80%91%E6%9D%AD%E5%B7%9Emeetup" target="_blank" rel="noopener">https://www.bagevent.com/event/6150831【活动】杭州meetup</a> <a href="https://www.bagevent.com/event/6129212" target="_blank" rel="noopener">https://www.bagevent.com/event/6129212</a></li></ol></li></ul><h2 id="go语言中文网每日资讯_2019-11-07">go语言中文网(每日资讯)_2019-11-07</h2><h3 id="一-建立可持续的微服务我们的意见和建议">一、建立可持续的微服务，我们的意见和建议。</h3><p>1.<a href="https://building.echo.co.uk/microservices-opinions-and-advice/" target="_blank" rel="noopener">Building sustainable microservices, our opinions and advice.</a></p><h3 id="二-go语言内存管理和分配">二、Go语言：内存管理和分配</h3><p>1.<a href="https://medium.com/a-journey-with-go/go-memory-management-and-allocation-a7396d430f44" target="_blank" rel="noopener">Go: Memory Management and Allocation</a></p><h3 id="三-golang来啦">三、Golang来啦</h3><p>1.<a href="https://mp.weixin.qq.com/s/L4o1RrNFgKTKEcUCXb-OAg" target="_blank" rel="noopener">Go面试每天一篇（第66天）</a></p><h3 id="四-我的小碗汤">四、我的小碗汤</h3><p>1.<a href="https://mp.weixin.qq.com/s/M0Yxevd2UyG3NucSgLPgJg" target="_blank" rel="noopener">详解docker镜像&amp;容器</a></p><h3 id="五-容器时代">五、容器时代</h3><p>1.<a href="https://mp.weixin.qq.com/s/MYonH0NREdZNfOh5CVprjA" target="_blank" rel="noopener">用Telepresence在本地调试Kubernetes服务</a></p><h3 id="六-go语言中文网">六、Go语言中文网</h3><p>1.<a href="https://mp.weixin.qq.com/s/hVhpet_RCwcgMMwZJnadrg" target="_blank" rel="noopener">开源社区福利，微软不断拥抱开源：Go 实现的微服务构建软件 Dapr 入门</a></p><p>2.<a href="https://mp.weixin.qq.com/s/QgV0ZBgbTlnXFZNYmA4z1A" target="_blank" rel="noopener">一起攻克面试难关：Go 面试每天一篇（第 48 天）</a></p><p>3.<a href="https://mp.weixin.qq.com/s/n3NAhohDqB-O5NHACEolKQ" target="_blank" rel="noopener">让数据库运行在浏览器里？TiDB + WebAssembly 告诉你答案</a></p><p>4.<a href="https://mp.weixin.qq.com/s/gLfvxIhFtB40xvhhOOOwFg" target="_blank" rel="noopener">值得收藏调度器系列：粉墨登场 — main goroutine 的诞生（三）</a></p><h3 id="七-go夜读分享预告">七、Go夜读分享预告</h3><p>1.<a href="https://github.com/developer-learning/night-reading-go/issues/490" target="_blank" rel="noopener">理解顺序进程间通信（CSP）</a></p><p>编辑：张云峰</p><h2 id="gocn_news_2019-11-07">gocn_news_2019-11-07</h2><ul><li><ol><li>[译] 排序运行时间能否做到 O(n)？让 Go 语言来告诉你 <a href="https://mp.weixin.qq.com/s/dHp-OJ0v9yNTazdYSsEKGw" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/dHp-OJ0v9yNTazdYSsEKGw</a></li></ol></li><li><ol start="2"><li>go语言学习（十一）package简介 <a href="http://www.cnblogs.com/wangshuyang/p/11807454.html" target="_blank" rel="noopener">http://www.cnblogs.com/wangshuyang/p/11807454.html</a></li></ol></li><li><ol start="3"><li>[译]Golang template 小抄 <a href="https://colobu.com/2019/11/05/Golang-Templates-Cheatsheet/" target="_blank" rel="noopener">https://colobu.com/2019/11/05/Golang-Templates-Cheatsheet/</a></li></ol></li><li><ol start="4"><li>理解Go的reflect <a href="https://juejin.im/post/5dc03c466fb9a04a9a08655e" target="_blank" rel="noopener">https://juejin.im/post/5dc03c466fb9a04a9a08655e</a></li></ol></li><li><ol start="5"><li>通过 深入对比 Arrays 和 Slices 学习GO<br>【活动】北京meetup <a href="https://www.bagevent.com/event/6150831" target="_blank" rel="noopener">https://www.bagevent.com/event/6150831</a><br>【活动】杭州meetup <a href="https://www.bagevent.com/event/6129212" target="_blank" rel="noopener">https://www.bagevent.com/event/6129212</a></li></ol></li></ul><h2 id="go语言中文网每日资讯_2019-11-06">go语言中文网(每日资讯)_2019-11-06</h2><h3 id="golang来啦">Golang来啦</h3><ul><li><a href="https://mp.weixin.qq.com/s/dJOqqdQ-et4aZ_ddwkQ7xg" target="_blank" rel="noopener">Go面试每天一篇（第65天）</a></li></ul><h3 id="我的小碗汤">我的小碗汤</h3><ul><li><a href="https://mp.weixin.qq.com/s/l9u7ronP10S3E8q1yPrTbA" target="_blank" rel="noopener">必须掌握的|chrome开发者工具骚技巧</a></li></ul><h3 id="光谷码农">光谷码农</h3><ul><li><a href="https://mp.weixin.qq.com/s/ry3aII6xy5u_xvNSYBgmzw" target="_blank" rel="noopener">让数据库运行在浏览器里？TiDB+WebAssembly 告诉你答案</a></li></ul><h3 id="go语言中文网">Go语言中文网</h3><ul><li><a href="https://mp.weixin.qq.com/s/QcV1ASYiztQ7Jj-VSqy_mQ" target="_blank" rel="noopener">持续集成和部署如何做？一步步教你在k8s上安装Jenkins</a></li><li><a href="https://mp.weixin.qq.com/s/wiSuP9_UUOKXUeS-sOUycQ" target="_blank" rel="noopener">Hugo作者演讲总结：Go语言的遗产</a></li><li><a href="https://mp.weixin.qq.com/s/dbnbDMWrz5KbySZ25_9o-g" target="_blank" rel="noopener">Go面试每天一篇（第47天）</a></li><li><a href="https://mp.weixin.qq.com/s/P900NSqJz6NCVJdpmMGRVg" target="_blank" rel="noopener">通过测试学习Go：Select</a></li><li><a href="https://mp.weixin.qq.com/s/_zLdRUndgXhguFOe-ssjYQ" target="_blank" rel="noopener">值得收藏调度器系列：开天辟地—Go scheduler初始化（二）</a></li></ul><p>编辑：张云峰</p><h2 id="gocn_news_2019-11-06">gocn_news_2019-11-06</h2><ul><li>1.使用构建标签分离你的测试文件https://mickey.dev/posts/go-build-tags-testing/</li><li>2.使用Go添加Nginx代理https://juejin.im/post/5dc0c3905188255faf60b3c5</li><li>3.为什么要使用goroutines取代threadshttps://juejin.im/post/5dc144c05188255f695be5f8</li><li>4.Go语言教程之工程管理https://mp.weixin.qq.com/s/yMcX5yWlBr8azg1-TEjG_g</li><li>5.让数据库运行在浏览器里？TiDB+WebAssembly告诉你答案https://mp.weixin.qq.com/s/EhKw2mEMZ69sU4Zn4_JhZw【活动】北京meetuphttps://www.bagevent.com/event/6150831【活动】杭州meetuphttps://www.bagevent.com/event/6129212</li></ul><h2 id="go语言中文网每日资讯_2019-11-05">go语言中文网(每日资讯)_2019-11-05</h2><h3 id="一-tonybai">一、 <a href="https://mp.weixin.qq.com/mp/profile_ext?action=home&amp;__biz=MzIyNzM0MDk0Mg==&amp;scene=124#wechat_redirect" target="_blank" rel="noopener">TonyBai</a></h3><ol><li><a href="https://mp.weixin.qq.com/mp/profile_ext?action=home&amp;__biz=MzIyNzM0MDk0Mg==&amp;scene=124#wechat_redirect" target="_blank" rel="noopener">Go语言的遗产</a> [可参考<a href="https://www.yuque.com/wereading/set/preface" target="_blank" rel="noopener">Go语言起源</a>]</li></ol><h3 id="二-golang来啦">二、<a href="https://mp.weixin.qq.com/mp/profile_ext?action=home&amp;__biz=MzI2MDA1MTcxMg==&amp;scene=123#wechat_redirect" target="_blank" rel="noopener">Golang来啦</a></h3><ol><li><a href="https://mp.weixin.qq.com/s/1Dj-R5Sa50iQks2wrGE9Qw" target="_blank" rel="noopener">Go 面试每天一篇（第 64 天）</a></li></ol><h3 id="三-光谷码农">三、 <a href="https://mp.weixin.qq.com/mp/profile_ext?action=home&amp;__biz=Mzg2NzAwMTYzOQ==&amp;scene=124#wechat_redirect" target="_blank" rel="noopener">光谷码农</a></h3><ol><li><a href="https://mp.weixin.qq.com/s/zpSCAJvigP_WXjWTogPzBA" target="_blank" rel="noopener">狗头语(Go Template Language)</a></li></ol><h3 id="四-我的小碗汤">四、 <a href="https://mp.weixin.qq.com/mp/profile_ext?action=home&amp;__biz=MjM5MzU5NDYwNA==&amp;scene=124#wechat_redirect" target="_blank" rel="noopener">我的小碗汤</a></h3><ol><li><a href="https://mp.weixin.qq.com/s/CoJbWbyQW79iGxedhZFXGg" target="_blank" rel="noopener">干货 | 这20个堪称神器的网站，个个都能解你的燃眉之急</a></li></ol><h3 id="五-go语言中文网">五、 <a href="https://mp.weixin.qq.com/mp/profile_ext?action=home&amp;__biz=MzAxMTA4Njc0OQ==&amp;scene=124#wechat_redirect" target="_blank" rel="noopener">Go语言中文网</a></h3><ol><li><p><a href="https://mp.weixin.qq.com/s/dHp-OJ0v9yNTazdYSsEKGw" target="_blank" rel="noopener">排序运行时间能否做到 O(n)？让Go语言来告诉你</a></p></li><li><p><a href="https://mp.weixin.qq.com/s/GYcr1PkVXwJUC4A7_pzd1Q" target="_blank" rel="noopener">Go 面试每天一篇（第 46 天）</a></p></li><li><p><a href="https://mp.weixin.qq.com/s/ZowV20mlC3CE_wrfjDeAdg" target="_blank" rel="noopener">从词法分析角度聊 Go 代码组成</a></p></li><li><p><a href="https://mp.weixin.qq.com/s/7lk4bW3xXiJaqr0SSR2Umg" target="_blank" rel="noopener">职业初期应该选择什么样的工作</a></p></li><li><p><a href="https://mp.weixin.qq.com/s/0Jfm3m0RJ9Wv9u_evA5gcw" target="_blank" rel="noopener">已拿头条和阿里 offer，特别感谢这几个公众号的资料</a></p></li></ol><h3 id="归档">归档：</h3><ol><li><p><a href="https://www.yuque.com/wegoer/set/article-20191104" target="_blank" rel="noopener">语雀</a></p></li><li><p><a href="https://studygolang.com/topics/10370" target="_blank" rel="noopener">Go语言中文网</a></p></li></ol><h2 id="gocn_news_2019-11-05">gocn_news_2019-11-05</h2><ul><li>1.Protobuf终极教程https://colobu.com/2019/10/03/protobuf-ultimate-tutorial-in-go/</li><li>2.何处安放我们的Go代码https://liujiacai.net/blog/2019/10/24/go-modules/</li><li>3.为什么使用通信来共享内存？<a href="https://draveness.me/whys-the-design-communication-shared-memory" target="_blank" rel="noopener">https://draveness.me/whys-the-design-communication-shared-memory</a></li><li>4.Go结构体定义https://www.digitalocean.com/community/tutorials/defining-structs-in-go</li><li>5.UNIX50年：KENTHOMPSON的密码https://coolshell.cn/articles/19996.html-</li></ul><h2 id="go语言中文网每日资讯_2019-11-04">go语言中文网(每日资讯)_2019-11-04</h2><h3 id="一-码途漫漫">一、<a href="https://mp.weixin.qq.com/mp/profile_ext?action=home&amp;__biz=MzI0MzE2NTY2MA==&amp;scene=124#wechat_redirect" target="_blank" rel="noopener">码途漫漫</a></h3><p>1.<a href="https://mp.weixin.qq.com/s/s19mV1RxlbfpnT5HP063-Q" target="_blank" rel="noopener">从词法分析角度聊 Go 代码组成</a></p><h3 id="二-moelove">二、<a href="">MoeLove</a></h3><p>1.<a href="https://mp.weixin.qq.com/s/vBRcOLd4eUPD7KI9acrxcA" target="_blank" rel="noopener">K8S 生态周报| Helm v2 爆出全版本漏洞</a></p><h3 id="三-golang来啦">三、<a href="https://mp.weixin.qq.com/mp/profile_ext?action=home&amp;__biz=MzI2MDA1MTcxMg==&amp;scene=123#wechat_redirect" target="_blank" rel="noopener">Golang来啦</a></h3><p>1.<a href="https://mp.weixin.qq.com/s/d-GVayYB1bxZxef_of6cVw" target="_blank" rel="noopener">Go 面试每天一篇（第 63 天）</a></p><h3 id="四-容器时代">四、<a href="https://mp.weixin.qq.com/mp/profile_ext?action=home&amp;__biz=MzI0NjI4MDg5MQ==&amp;scene=124&amp;uin=&amp;key=&amp;devicetype=Windows+10&amp;version=6206014b&amp;lang=zh_CN&amp;a8scene=7&amp;winzoom=1" target="_blank" rel="noopener">容器时代</a></h3><p>1.<a href="https://mp.weixin.qq.com/s/Z_atGNcfSOQatWB6rdw8sQ" target="_blank" rel="noopener">从零开始入门 K8s | Kubernetes 网络概念及策略控制</a></p><h3 id="五-我的小碗汤">五、 <a href="https://mp.weixin.qq.com/mp/profile_ext?action=home&amp;__biz=MjM5MzU5NDYwNA==&amp;scene=124#wechat_redirect" target="_blank" rel="noopener">我的小碗汤</a></h3><p>1.<a href="https://mp.weixin.qq.com/s/lPbJZepudavuVk3ItzAdFg" target="_blank" rel="noopener">四大网络抓包神器，你用过哪款？</a></p><h3 id="六-go语言中文网">六、<a href="https://mp.weixin.qq.com/mp/profile_ext?action=home&amp;__biz=MzAxMTA4Njc0OQ==&amp;scene=124#wechat_redirect" target="_blank" rel="noopener">Go语言中文网</a></h3><p>1.<a href="https://mp.weixin.qq.com/s/9xwFapohMkutVRczSmrNfQ" target="_blank" rel="noopener">漫画：Go 语言的并发</a></p><p>2.<a href="https://mp.weixin.qq.com/s/YwH3Ahtt97Ge-5z_gxovkg" target="_blank" rel="noopener">Go 面试每天一篇（第 45 天）</a></p><p>3.<a href="https://mp.weixin.qq.com/s/4Qq1X5IuRak6Rv2luV4nqQ" target="_blank" rel="noopener">如果 map 不是引用变量，那是什么？</a></p><p>4.<a href="https://mp.weixin.qq.com/s/jvilH3y0E0LfbL8RfXmStg" target="_blank" rel="noopener">通过测试学习Go：并发</a></p><p>5.<a href="https://mp.weixin.qq.com/s/zEibw47pNvuJ1kQyejIh5w" target="_blank" rel="noopener">做对这三道题，表明你基本已经如火纯青般地掌握了for-range的用法</a></p><h3 id="归档">归档：</h3><p>1.<a href="https://www.yuque.com/wegoer/set/article-20191104" target="_blank" rel="noopener">语雀</a><br>2.<a href="https://studygolang.com/topics/10365" target="_blank" rel="noopener">Go语言中文网</a></p><h2 id="gocn_news_2019-11-04">gocn_news_2019-11-04</h2><ul><li><ol><li>Go中垃圾收集器是如何标记内存的 <a href="https://medium.com/a-journey-with-go/go-how-does-the-garbage-collector-mark-the-memory-72cfc12c6976" target="_blank" rel="noopener">https://medium.com/a-journey-with-go/go-how-does-the-garbage-collector-mark-the-memory-72cfc12c6976</a></li></ol></li><li><ol start="2"><li>自动删除未使用的中间层 docker 镜像 <a href="https://medium.com/@cikupin/removing-unused-intermediate-docker-images-automatically-25e453c514ea" target="_blank" rel="noopener">https://medium.com/@cikupin/removing-unused-intermediate-docker-images-automatically-25e453c514ea</a></li></ol></li><li><ol start="3"><li>ElasticSearch 客户端学习案例 <a href="https://medium.com/a-journey-with-go/go-elasticsearch-clients-study-case-dbaee1e02c7" target="_blank" rel="noopener">https://medium.com/a-journey-with-go/go-elasticsearch-clients-study-case-dbaee1e02c7</a></li></ol></li><li><ol start="4"><li>从词法分析角度看 Go 代码的组成 <a href="https://juejin.im/post/5dbebb3d6fb9a0204e659077" target="_blank" rel="noopener">https://juejin.im/post/5dbebb3d6fb9a0204e659077</a></li></ol></li><li><ol start="5"><li>用 Go 编写的快速的 HTTP (L7) 和 TCP (L4) 隧道 <a href="https://github.com/inlets/inletsctl-" target="_blank" rel="noopener">https://github.com/inlets/inletsctl-</a></li></ol></li></ul><h2 id="gocn_news_2019-11-03">gocn_news_2019-11-03</h2><ul><li><ol><li>Go的内存管理与分配 <a href="https://medium.com/a-journey-with-go/go-memory-management-and-allocation-a7396d430f44" target="_blank" rel="noopener">https://medium.com/a-journey-with-go/go-memory-management-and-allocation-a7396d430f44</a></li></ol></li><li><ol start="2"><li>我将把pkg移到外部 <a href="https://travisjeffery.com/b/2019/11/i-ll-take-pkg-over-internal/" target="_blank" rel="noopener">https://travisjeffery.com/b/2019/11/i-ll-take-pkg-over-internal/</a></li></ol></li><li><ol start="3"><li>使用缓存加速Github Action中的Go项目构建 <a href="https://www.markphelps.me/2019/11/speed-up-your-go-builds-with-actions-cache/" target="_blank" rel="noopener">https://www.markphelps.me/2019/11/speed-up-your-go-builds-with-actions-cache/</a></li></ol></li><li><ol start="4"><li>详解panic和recover机制 <a href="https://go101.org/article/panic-and-recover-more.html" target="_blank" rel="noopener">https://go101.org/article/panic-and-recover-more.html</a></li></ol></li><li><ol start="5"><li>实战gorgonia:iris数据集的多变量的线性衰退分析 <a href="https://gorgonia.org/tutorials/iris/" target="_blank" rel="noopener">https://gorgonia.org/tutorials/iris/</a></li></ol></li></ul><h2 id="gocn_news_2019-11-02">gocn_news_2019-11-02</h2><ul><li><ol><li>Go 1.13.4 and Go 1.12.13 are released <a href="https://groups.google.com/forum/#!msg/golang-announce/YVXawNxmEBw/pju_oNyaAQAJ" target="_blank" rel="noopener">https://groups.google.com/forum/#!msg/golang-announce/YVXawNxmEBw/pju_oNyaAQAJ</a></li></ol></li><li><ol start="2"><li>Go map数据结构和源码详解 <a href="https://www.cnblogs.com/JoZSM/p/11784037.html" target="_blank" rel="noopener">https://www.cnblogs.com/JoZSM/p/11784037.html</a></li></ol></li><li><ol start="3"><li>理解 Go 的空接口 <a href="https://medium.com/a-journey-with-go/go-understand-the-empty-interface-2d9fc1e5ec72" target="_blank" rel="noopener">https://medium.com/a-journey-with-go/go-understand-the-empty-interface-2d9fc1e5ec72</a></li></ol></li><li><ol start="4"><li>Golang限流器time/rate使用介绍 <a href="https://www.cyhone.com/articles/usage-of-golang-rate" target="_blank" rel="noopener">https://www.cyhone.com/articles/usage-of-golang-rate</a></li></ol></li><li><ol start="5"><li>为Golang API设置Swagger文档 <a href="https://towardsdatascience.com/setting-up-swagger-docs-for-golang-api-8d0442263641" target="_blank" rel="noopener">https://towardsdatascience.com/setting-up-swagger-docs-for-golang-api-8d0442263641</a></li></ol></li></ul><h2 id="gocn_news_2019-11-01">gocn_news_2019-11-01</h2><ul><li>1.RobPike认为Go成功的5个因素https://changelog.com/posts/5-things-rob-pike-attributes-to-gos-success</li><li>2.提案:扩展Go内存分页机制https://go.googlesource.com/proposal/+/refs/changes/57/202857/2/design/35112-scaling-the-page-allocator.md#proposal_scaling-the-go-page-allocator</li><li>3.Podcast:关于缓存的一切https://changelog.com/gotime/103</li><li>4.GoTCP库gevhttps://github.com/Allenxuxu/gev</li><li>5.ldflags使用教程https://www.digitalocean.com/community/tutorials/using-ldflags-to-set-version-information-for-go-applications</li></ul><h2 id="gocn_news_2019-10-31">gocn_news_2019-10-31</h2><ul><li>1.Go语言继承的其他语言的优秀之处https://spf1</li><li><a href="http://3.com/presentation/the-legacy-of-go/" target="_blank" rel="noopener">3.com/presentation/the-legacy-of-go/</a></li><li>2.Golang图灵机库https://madeddu.xyz/posts/golang-turing-machine/3.Go中的反射https://medium.com/better-programming/understand-reflect-in-go-24a68fcf1011</li><li>4.给Go程序加入编译版本时间等信息https://pengrl.com/p/37397/</li><li>5.BigCache如何避免GC周期并加速Go中的并发访问https://dev.to/douglasmakey/how-bigcache-avoids-expensive-gc-cycles-and-speeds-up-concurrent-access-in-go-12bb</li></ul><h2 id="gocn_news_2019-10-30">gocn_news_2019-10-30</h2><ul><li>1.AstaXie:玩转Go语言，从beego开始https://mp.weixin.qq.com/s/Iof1hA1JUJg9S_gfI6kGQQ</li><li>2.[译]UberGo语言代码风格指南http://fivezh.github.io/2019/10/17/uber-go-style-guide</li><li>3.何处安放我们的Go代码https://liujiacai.net/blog/2019/10/24/go-modules</li><li>4.[译]Go使用封装返回模式回收被goroutines占用的内存https://juejin.im/post/5db7c1a4e51d452a1340f36f</li><li>5.Sqreen:Go语言应用程序安全管理组件https://github.com/sqreen/go-agent</li></ul><h2 id="gocn_news_2019-10-29">gocn_news_2019-10-29</h2><ul><li>1.Go的发展传奇https://spf1</li><li><a href="http://3.com/presentation/the-legacy-of-go/" target="_blank" rel="noopener">3.com/presentation/the-legacy-of-go/</a></li><li>2.Go操作Linux网络层https://tomdnetto.net/post/linux_networking_from_go_nftables3.GolangAST语法树使用教程及示例https://juejin.im/post/5db7195df265da4d104b7fb7</li><li>4.使用Makefile管理Go项目https://segmentfault.com/a/1190000020842140</li><li>5.Go是新的Rubyhttps://00f.net/2019/10/28/go-is-the-new-ruby/</li></ul><h2 id="gocn_news_2019-10-28">gocn_news_2019-10-28</h2><ul><li>1.理解和攻击GoDSA验证漏洞https://paul.querna.org/articles/2019/10/24/dsa-verify-poc/</li><li>2.Go中进行Fuzz测试https://medium.com/a-journey-with-go/go-fuzz-testing-in-go-deb36abc971f</li><li>3.用Go克隆Memcachedhttps://healeycodes.com/go/tutorial/beginners/showdev/2019/10/21/cloning-memcached-with-go.html</li><li>4.Go实现的scrapyd替代品https://github.com/alash3al/scrapyd-go</li><li>5.TamaGo：为ARMSoC提供的Gohttps://github.com/inversepath/tamago</li></ul><h2 id="gocn_news_2019-10-27">gocn_news_2019-10-27</h2><ul><li>1.Golab(意大利GopherCon)2019见闻http://fedepaol.github.io/blog/2019/10/23/golab-2019/</li><li>2.pkg/errors迁移到go1.13error处理https://mycodesmells.com/post/migrating-pkg-errors-to-go-113-errors</li><li>3.Golang慎用Update函数https://www.jianshu.com/p/1380b004e789</li><li>4.effective-go之map、fmt、appendhttps://jingwei.link/2019/10/26/effectivego-map-fmt-append.html</li><li>5.gin-api路由中间件-签名验证https://www.cnblogs.com/xinliangcoder/p/11743815.html-</li></ul><h2 id="gocn_news_2019-10-26">gocn_news_2019-10-26</h2><ul><li>1.GateKeeper：滴滴开源的使用Go编写的不依赖分布式数据库的API网关https://mp.weixin.qq.com/s/gpQSPJ-uRpI-k1j97K1waw</li><li>2.Gopanic处理https://www.digitalocean.com/community/tutorials/handling-panics-in-go</li><li>3.Go实现TCP扫描器https://developer20.com/tcp-scanner-in-go/</li><li>4.两分钟让你明白Go中如何继承https://segmentfault.com/a/1190000020800285</li><li>5.花椒服务端Kubernetes技术实践https://mp.weixin.qq.com/s/zviiMElp54HyxI8GsKfBjg</li></ul><h2 id="gocn_news_2019-10-25">gocn_news_2019-10-25</h2><ul><li><ol><li>[译]Golang应付百万级请求/分钟 <a href="https://juejin.im/post/5db1464b6fb9a0202a261ca9" target="_blank" rel="noopener">https://juejin.im/post/5db1464b6fb9a0202a261ca9</a></li></ol></li><li><ol start="2"><li>[译][Part1]使用Go gRPC微服务构建HTTP/REST服务，中间件，Kubernetes部署等等 <a href="https://juejin.im/post/5daffe9ae51d4524c118083b" target="_blank" rel="noopener">https://juejin.im/post/5daffe9ae51d4524c118083b</a></li></ol></li><li><ol start="3"><li>Go gRPC 客户端服务保障如何做？负载均衡、重试、健康检查 <a href="http://yangxikun.com/golang/2019/10/19/golang-grpc-client-side-lb.html" target="_blank" rel="noopener">http://yangxikun.com/golang/2019/10/19/golang-grpc-client-side-lb.html</a></li></ol></li><li><ol start="4"><li>微服务如何保证不会出现连锁反应？Go实现的断路器了解下 <a href="https://mp.weixin.qq.com/s/Q1a0TVpjG4EyNzi0EKJn0A" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/Q1a0TVpjG4EyNzi0EKJn0A</a></li></ol></li><li><ol start="5"><li>一文让你了解Kubernetes架构 <a href="https://mp.weixin.qq.com/s/hgN1xmwb0yOWep71CHdBtQ%E7%AC%AC%E4%BA%8C%E5%AD%A3go" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/hgN1xmwb0yOWep71CHdBtQ第二季go</a> hack黑客马拉松来啦！ <a href="http://gohack2019.sxl.cn/" target="_blank" rel="noopener">http://gohack2019.sxl.cn/</a></li></ol></li></ul><h2 id="gocn_news_2019-10-24">gocn_news_2019-10-24</h2><ul><li>1.学习Golang之服务器框架编写–CS网络通信http://1t.click/aJag</li><li>2.如何实现GoModule依赖关系的可视化https://juejin.im/post/5dafe742e51d45249465cd9a</li><li>3.GogRPC系列七：让服务同时提供HTTP接口https://juejin.im/post/5dafedd8f265da5b86014357</li><li>4.如何写出优雅的Golang代码https://juejin.im/entry/5db018c3f265da4d4a30569e</li><li>5.[译]用Golang编写一个简易聊天室https://juejin.im/post/5dafb4435188256290692f05第二季gohack黑客马拉松来啦！<a href="http://gohack2019.sxl.cn/" target="_blank" rel="noopener">http://gohack2019.sxl.cn/</a></li></ul><h2 id="gocn_news_2019-10-23">gocn_news_2019-10-23</h2><ul><li>1.从0开始，用Go实现Lexer和Parserhttps://mp.weixin.qq.com/s/cFGJX2IeGZOifqaLh5YYYA</li><li>2.在grpc中使用pprofhttps://medium.com/@gurasis/profiling-a-golang-grpc-server-using-pprof-b6de1371fdd</li><li>3.Go依赖关系https://medium.com/@2hamed/dependency-isolation-in-go-afab00b5e4c9</li><li>4.Go使用信号来处理Unix命令https://medium.com/better-programming/using-signals-to-handle-unix-commands-in-golang-f09e9efb7769</li><li>5.Go使用httpshttps://juejin.im/post/5daeb504f265da5b7e2406a4第二季gohack黑客马拉松来啦！<a href="http://gohack2019.sxl.cn/" target="_blank" rel="noopener">http://gohack2019.sxl.cn/</a></li></ul><h2 id="gocn_news_2019-10-22">gocn_news_2019-10-22</h2><ul><li><ol><li>Go 集成测试：<a href="https://www.ardanlabs.com/blog/2019/10/integration-testing-in-go-set-up-and-writing-tests.html" target="_blank" rel="noopener">https://www.ardanlabs.com/blog/2019/10/integration-testing-in-go-set-up-and-writing-tests.html</a></li></ol></li><li><ol start="2"><li>Go 错误处理：<a href="https://blog.logrocket.com/error-handling-in-golang/" target="_blank" rel="noopener">https://blog.logrocket.com/error-handling-in-golang/</a></li></ol></li><li><ol start="3"><li>使用’internal’包减少 API 的暴露范围：<a href="https://dave.cheney.net/2019/10/06/use-internal-packages-to-reduce-your-public-api-surface" target="_blank" rel="noopener">https://dave.cheney.net/2019/10/06/use-internal-packages-to-reduce-your-public-api-surface</a></li></ol></li><li><ol start="4"><li>HTTP的前世今生: <a href="https://coolshell.cn/articles/19840.html" target="_blank" rel="noopener">https://coolshell.cn/articles/19840.html</a></li></ol></li><li><ol start="5"><li>Ubuntu 18.04 Server上部署Kubernetes集群: <a href="https://tonybai.com/2019/10/21/how-to-deploy-a-kubernetes-cluster-with-ubuntu-server-18-04/" target="_blank" rel="noopener">https://tonybai.com/2019/10/21/how-to-deploy-a-kubernetes-cluster-with-ubuntu-server-18-04/</a></li></ol></li></ul><h2 id="gocn_news_2019-10-21">gocn_news_2019-10-21</h2><ul><li><ol><li>使用 Golang, RabbitMQ和 Protobuf 构建高效的微服务 <a href="https://medium.com/rahasak/reactive-microservices-with-golang-rabbitmq-and-protobuf-af025f4ec27" target="_blank" rel="noopener">https://medium.com/rahasak/reactive-microservices-with-golang-rabbitmq-and-protobuf-af025f4ec27</a></li></ol></li><li><ol start="2"><li>Golang 中的比较函数对比 — 最好自己实现  <a href="https://medium.com/@ktrilaksono/comparing-simple-comparison-functions-in-golang-it-is-better-to-implement-it-yourself-73a3a31b9bc" target="_blank" rel="noopener">https://medium.com/@ktrilaksono/comparing-simple-comparison-functions-in-golang-it-is-better-to-implement-it-yourself-73a3a31b9bc</a></li></ol></li><li><ol start="3"><li>go modules 的一些细节https://juejin.im/post/5dac45ae6fb9a04e1043a837</li></ol></li><li><ol start="4"><li>给 Go 库作者的建议 <a href="https://juejin.im/post/5dac18895188256ab73dd4a9" target="_blank" rel="noopener">https://juejin.im/post/5dac18895188256ab73dd4a9</a></li></ol></li><li><ol start="5"><li>用 Go 编写的 git 简易托管方案 <a href="https://github.com/belak/go-git-dir*" target="_blank" rel="noopener">https://github.com/belak/go-git-dir*</a> 第二季go hack黑客马拉松来啦！ <a href="http://gohack2019.sxl.cn/" target="_blank" rel="noopener">http://gohack2019.sxl.cn/</a></li></ol></li></ul><h2 id="gocn_news_2019-10-20">gocn_news_2019-10-20</h2><ul><li><ol><li>slakc是如何构建共享频道的 <a href="https://slack.engineering/how-slack-built-shared-channels-8d42c895b19f" target="_blank" rel="noopener">https://slack.engineering/how-slack-built-shared-channels-8d42c895b19f</a></li></ol></li><li><ol start="2"><li>关于缓存的一切 <a href="https://www.youtube.com/watch?v=pjV0Nfcle9A" target="_blank" rel="noopener">https://www.youtube.com/watch?v=pjV0Nfcle9A</a></li></ol></li><li><ol start="3"><li>Netflix如何处理数据集的发布订阅 <a href="https://medium.com/netflix-techblog/how-netflix-microservices-tackle-dataset-pub-sub-4a068adcc9a" target="_blank" rel="noopener">https://medium.com/netflix-techblog/how-netflix-microservices-tackle-dataset-pub-sub-4a068adcc9a</a></li></ol></li><li><ol start="4"><li>csv比较工具csvdiff <a href="https://github.com/aswinkarthik/csvdiff" target="_blank" rel="noopener">https://github.com/aswinkarthik/csvdiff</a></li></ol></li><li><ol start="5"><li>如何构建自定义的k8s ingress控制器 <a href="http://www.doxsey.net/blog/how-to-build-a-custom-kubernetes-ingress-controller-in-go" target="_blank" rel="noopener">http://www.doxsey.net/blog/how-to-build-a-custom-kubernetes-ingress-controller-in-go</a></li></ol></li></ul><h2 id="gocn_news_2019-10-19">gocn_news_2019-10-19</h2><ul><li><ol><li>Go 1.13中的错误处理 <a href="https://tonybai.com/2019/10/18/errors-handling-in-go-1-13" target="_blank" rel="noopener">https://tonybai.com/2019/10/18/errors-handling-in-go-1-13</a></li></ol></li><li><ol start="2"><li>golang核心原理-协程栈 <a href="https://juejin.im/post/5da7385ae51d45782a478d2d" target="_blank" rel="noopener">https://juejin.im/post/5da7385ae51d45782a478d2d</a></li></ol></li><li><ol start="3"><li>使用 Go 处理中间件 <a href="https://segmentfault.com/a/1190000020729659" target="_blank" rel="noopener">https://segmentfault.com/a/1190000020729659</a></li></ol></li><li><ol start="4"><li>Gocache:一个强大可扩展的Go缓存库 <a href="https://github.com/eko/gocache" target="_blank" rel="noopener">https://github.com/eko/gocache</a></li></ol></li><li><ol start="5"><li>Vearch:用于深度学习向量的高效相似性搜索的分布式系统 <a href="https://github.com/vearch/vearch" target="_blank" rel="noopener">https://github.com/vearch/vearch</a></li></ol></li></ul><h2 id="gocn_news_2019-10-18">gocn_news_2019-10-18</h2><ul><li><ol><li>在Go1.13使用Errors <a href="https://blog.golang.org/go1.13-errors" target="_blank" rel="noopener">https://blog.golang.org/go1.13-errors</a></li></ol></li><li><ol start="2"><li>Go的扁平化应用结构 <a href="https://www.calhoun.io/flat-application-structure/" target="_blank" rel="noopener">https://www.calhoun.io/flat-application-structure/</a></li></ol></li><li><ol start="3"><li>Go新特性抢先看:动态unsafe pointer检查 <a href="https://groups.google.com/forum/#!topic/golang-dev/SzwDoqoRVJA/discussion" target="_blank" rel="noopener">https://groups.google.com/forum/#!topic/golang-dev/SzwDoqoRVJA/discussion</a></li></ol></li><li><ol start="4"><li>使用Go编写nushell的插件 <a href="https://vsoch.github.io//2019/nushell-plugin-golang/" target="_blank" rel="noopener">https://vsoch.github.io//2019/nushell-plugin-golang/</a></li></ol></li><li><ol start="5"><li>onnx-go:ONNX库链接包 <a href="https://github.com/owulveryck/onnx-go" target="_blank" rel="noopener">https://github.com/owulveryck/onnx-go</a></li></ol></li></ul><h2 id="gocn_news_2019-10-17">gocn_news_2019-10-17</h2><ul><li><ol><li>通过go module管理go tool <a href="https://marcofranssen.nl/manage-go-tools-via-go-modules/" target="_blank" rel="noopener">https://marcofranssen.nl/manage-go-tools-via-go-modules/</a></li></ol></li><li><ol start="2"><li>使用go的并发性进行图形计算 <a href="https://blog.owulveryck.info/2019/10/14/think-like-a-vertex-using-gos-concurrency-for-graph-computation.html" target="_blank" rel="noopener">https://blog.owulveryck.info/2019/10/14/think-like-a-vertex-using-gos-concurrency-for-graph-computation.html</a></li></ol></li><li><ol start="3"><li>使用HTTP2 Server Push创建快速且惯用的客户端驱动的REST API <a href="https://github.com/dunglas/vulcain" target="_blank" rel="noopener">https://github.com/dunglas/vulcain</a></li></ol></li><li><ol start="4"><li>用Go实现狄克斯特拉算法 <a href="https://deployeveryday.com/2019/10/16/dijkstra-algorithm-golang.html" target="_blank" rel="noopener">https://deployeveryday.com/2019/10/16/dijkstra-algorithm-golang.html</a></li></ol></li><li><ol start="5"><li>go中使用嵌入式结构的装饰器 <a href="https://fabianlindfors.se/blog/decorators-in-go-using-embedded-structs/" target="_blank" rel="noopener">https://fabianlindfors.se/blog/decorators-in-go-using-embedded-structs/</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-10-16">gocn_news_2019-10-16</h2><ul><li><ol><li>GoCN每日新闻(2019-10-16)</li></ol></li><li><ol start="2"><li><ol><li>持续的性能分析与优化 <a href="https://medium.com/@tvii/continuous-profiling-and-go-6c0ab4d2504b" target="_blank" rel="noopener">https://medium.com/@tvii/continuous-profiling-and-go-6c0ab4d2504b</a></li></ol></li></ol></li><li><ol start="3"><li><ol start="2"><li>理解Go 中的 defer <a href="https://www.digitalocean.com/community/tutorials/understanding-defer-in-go" target="_blank" rel="noopener">https://www.digitalocean.com/community/tutorials/understanding-defer-in-go</a></li></ol></li></ol></li><li><ol start="4"><li><ol start="3"><li>Go 语言反射的实现原理 <a href="https://draveness.me/golang/basic/golang-reflect.html" target="_blank" rel="noopener">https://draveness.me/golang/basic/golang-reflect.html</a></li></ol></li></ol></li><li><ol start="5"><li><ol start="4"><li>如何构建一个云原生框架 <a href="https://medium.com/@yannick.b/how-should-be-built-the-ideal-cloud-native-framework-part-2-2fcfa38c9de7" target="_blank" rel="noopener">https://medium.com/@yannick.b/how-should-be-built-the-ideal-cloud-native-framework-part-2-2fcfa38c9de7</a></li></ol></li></ol></li><li><ol start="6"><li><ol start="5"><li>pigo - 人脸识别库 <a href="https://www.reddit.com/r/golang/comments/di3n1k/the_pigo_face_detection_library_now_is_capable/" target="_blank" rel="noopener">https://www.reddit.com/r/golang/comments/di3n1k/the_pigo_face_detection_library_now_is_capable/</a></li></ol></li></ol></li></ul><hr><h2 id="gocn_news_2019-10-15">gocn_news_2019-10-15</h2><ul><li><ol><li>GoCN每日新闻(2019-10-15)</li></ol></li><li><ol start="2"><li><ol><li>Go Module 存在的意义与解决的问题 <a href="https://www.ardanlabs.com/blog/2019/10/modules-01-why-and-what.html" target="_blank" rel="noopener">https://www.ardanlabs.com/blog/2019/10/modules-01-why-and-what.html</a></li></ol></li></ol></li><li><ol start="3"><li><ol start="2"><li>理解 Go 指针 <a href="https://www.digitalocean.com/community/conceptual_articles/understanding-pointers-in-go" target="_blank" rel="noopener">https://www.digitalocean.com/community/conceptual_articles/understanding-pointers-in-go</a></li></ol></li></ol></li><li><ol start="4"><li><ol start="3"><li>Dave Cheney 的 Go 实践总结图示 <a href="https://skarlso.github.io/2019/10/10/practical-go-summary/" target="_blank" rel="noopener">https://skarlso.github.io/2019/10/10/practical-go-summary/</a></li></ol></li></ol></li><li><ol start="5"><li><ol start="4"><li>Go有GC就不需要掌握内存堆栈知识了吗？Go 堆栈的理解 <a href="https://mp.weixin.qq.com/s/SGbiWLW6pLfd32TKIil10A" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/SGbiWLW6pLfd32TKIil10A</a></li></ol></li></ol></li><li><ol start="6"><li><ol start="5"><li>高性能 Go 网络库 gnet 发布 v1 版 <a href="https://segmentfault.com/a/1190000020689928" target="_blank" rel="noopener">https://segmentfault.com/a/1190000020689928</a></li></ol></li></ol></li></ul><hr><h2 id="gocn_news_2019-10-14">gocn_news_2019-10-14</h2><ul><li><ol><li><ol><li>基于 Go 开源项目 MIMIO 的对象存储方案在探探的实践 <a href="https://mp.weixin.qq.com/s/YIKB_qAqqy6ydtFT_a_Ieg" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/YIKB_qAqqy6ydtFT_a_Ieg</a></li></ol></li></ol></li><li><ol start="2"><li><ol start="2"><li>[译]Uber Go 语言代码风格指南 <a href="https://mp.weixin.qq.com/s/cu6IZl_BhWokJxMXYmSytg" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/cu6IZl_BhWokJxMXYmSytg</a></li></ol></li></ol></li><li><ol start="3"><li><ol start="3"><li>实现Go语言解释器 <a href="http://notes.eatonphil.com/interpreting-go.html" target="_blank" rel="noopener">http://notes.eatonphil.com/interpreting-go.html</a></li></ol></li></ol></li><li><ol start="4"><li><ol start="4"><li>dt：Go缺失的日期时间包 <a href="https://medium.com/@ribice/dt-gos-missing-datetime-package-b9c5041398d0" target="_blank" rel="noopener">https://medium.com/@ribice/dt-gos-missing-datetime-package-b9c5041398d0</a></li></ol></li></ol></li><li><ol start="5"><li><ol start="5"><li>学术论文： 大规模Go语言单元测试 <a href="https://www.academia.edu/40301628/Large_Scale_Unit_Testing_for_Go_Programming_Language_Packages" target="_blank" rel="noopener">https://www.academia.edu/40301628/Large_Scale_Unit_Testing_for_Go_Programming_Language_Packages</a></li></ol></li></ol></li><li><ol start="6"><li><ul><li>活动推荐：GoHack 2019 火热招募中！ <a href="http://gohack2019.sxl.cn/" target="_blank" rel="noopener">http://gohack2019.sxl.cn/</a></li></ul></li></ol></li></ul><hr><h2 id="gocn_news_2019-10-13">gocn_news_2019-10-13</h2><ul><li><ol><li><ol><li>通过测试学习Go语言 <a href="https://mp.weixin.qq.com/s/MGT_yoP_NdWVGpwlAJFK4A" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/MGT_yoP_NdWVGpwlAJFK4A</a></li></ol></li></ol></li><li><ol start="2"><li>go panic recover源码解析 <a href="https://segmentfault.com/a/1190000020667326" target="_blank" rel="noopener">https://segmentfault.com/a/1190000020667326</a></li></ol></li><li><ol start="3"><li>go map底层实现 <a href="http://yangxikun.com/2019/10/07/golang-map.html" target="_blank" rel="noopener">http://yangxikun.com/2019/10/07/golang-map.html</a></li></ol></li><li><ol start="4"><li>基于Apache Flink和规则引擎的实时风控解决方案 <a href="https://mp.weixin.qq.com/s/RnUnMtlm4M6nPvjvmo8HWw" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/RnUnMtlm4M6nPvjvmo8HWw</a></li></ol></li><li><ol start="5"><li>Kafka重平衡机制 <a href="https://mp.weixin.qq.com/s/4DFup_NziFJ1xdc4bZnVcg" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/4DFup_NziFJ1xdc4bZnVcg</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-10-12">gocn_news_2019-10-12</h2><ul><li><ol><li><ol><li>Go 1.13中sync.Pool是如何优化的 <a href="https://colobu.com/2019/10/08/how-is-sync-Pool-improved-in-Go-1-13/" target="_blank" rel="noopener">https://colobu.com/2019/10/08/how-is-sync-Pool-improved-in-Go-1-13/</a></li></ol></li></ol></li><li><ol start="2"><li>Uber Go编程规范 <a href="https://github.com/uber-go/guide/blob/master/style.md" target="_blank" rel="noopener">https://github.com/uber-go/guide/blob/master/style.md</a></li></ol></li><li><ol start="3"><li>Go高级编程：指针和内存分配详解 <a href="https://mp.weixin.qq.com/s/46T6hO9Ht4fN5jD8kXuCSQ" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/46T6hO9Ht4fN5jD8kXuCSQ</a></li></ol></li><li><ol start="4"><li>如何用GVM管理Go项目 <a href="https://juejin.im/post/5da0900d5188254c4e6a94b7" target="_blank" rel="noopener">https://juejin.im/post/5da0900d5188254c4e6a94b7</a></li></ol></li><li><ol start="5"><li>etcd性能测试与调优 <a href="https://mp.weixin.qq.com/s/tEaRGXGCeCJxwU_SU7ZBOQ" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/tEaRGXGCeCJxwU_SU7ZBOQ</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-10-11">gocn_news_2019-10-11</h2><ul><li><ol><li>golang 将数据库转换为gorm结构 <a href="https://studygolang.com/articles/23878" target="_blank" rel="noopener">https://studygolang.com/articles/23878</a></li></ol></li><li><ol start="2"><li>关于Go的10个你可能不知道的事情 <a href="https://talks.golang.org/2012/10things.slide#1" target="_blank" rel="noopener">https://talks.golang.org/2012/10things.slide#1</a></li></ol></li><li><ol start="3"><li>Go gRPC 系列五：基于 CA 的 TLS 证书校验 <a href="https://juejin.im/post/5d9ffc24f265da5b8a516112" target="_blank" rel="noopener">https://juejin.im/post/5d9ffc24f265da5b8a516112</a></li></ol></li><li><ol start="4"><li>Go和Android集成实战 <a href="http://www.songjiayang.com/posts/go-he-andji-shi-li" target="_blank" rel="noopener">http://www.songjiayang.com/posts/go-he-andji-shi-li</a></li></ol></li><li><ol start="5"><li>超大规模商用 K8s 场景下，阿里巴巴如何动态解决容器资源的按需分配问题？</li></ol></li></ul><hr><h2 id="gocn_news_2019-10-10">gocn_news_2019-10-10</h2><ul><li><ol><li>GoCN每日新闻(2019-10-10)</li></ol></li><li><ol start="2"><li><ol><li>Go语言源码阅读之bytes.Buffer <a href="http://www.pengrl.com/p/60618/" target="_blank" rel="noopener">http://www.pengrl.com/p/60618/</a></li></ol></li></ol></li><li><ol start="3"><li><ol start="2"><li>Go gRPC 系列一：相关介绍 <a href="https://juejin.im/post/5d99af86f265da5b555f59dc" target="_blank" rel="noopener">https://juejin.im/post/5d99af86f265da5b555f59dc</a></li></ol></li></ol></li><li><ol start="4"><li><ol start="3"><li>干货满满的 Go Modules 和 <a href="http://goproxy.cn" target="_blank" rel="noopener">goproxy.cn</a> <a href="https://juejin.im/post/5d8ee2db6fb9a04e0b0d9c8b" target="_blank" rel="noopener">https://juejin.im/post/5d8ee2db6fb9a04e0b0d9c8b</a></li></ol></li></ol></li><li><ol start="5"><li><ol start="4"><li>原来这才是 Golang Interface <a href="https://juejin.im/post/5d8877f1f265da03986c311c" target="_blank" rel="noopener">https://juejin.im/post/5d8877f1f265da03986c311c</a></li></ol></li></ol></li><li><ol start="6"><li><ol start="5"><li>云原生可观察性之日志管理 <a href="https://mp.weixin.qq.com/s/E7bFp58OL6gjvBxLTKpbJQ" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/E7bFp58OL6gjvBxLTKpbJQ</a></li></ol></li></ol></li><li><ol start="7"><li>编辑: 崔广章</li></ol></li><li><ol start="8"><li>订阅新闻: <a href="http://tinyletter.com/gocn" target="_blank" rel="noopener">http://tinyletter.com/gocn</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-10-09">gocn_news_2019-10-09</h2><ul><li><ol><li>我们如何将服务延迟减少了98% <a href="https://blog.gojekengineering.com/the-need-for-speed-how-we-reduced-service-latency-by-98-5c45d1acdc81" target="_blank" rel="noopener">https://blog.gojekengineering.com/the-need-for-speed-how-we-reduced-service-latency-by-98-5c45d1acdc81</a></li></ol></li><li><ol start="2"><li>Go RPC实践 <a href="https://mp.weixin.qq.com/s/ScsB0VH8tvlaNK_d6a6AMQ" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/ScsB0VH8tvlaNK_d6a6AMQ</a></li></ol></li><li><ol start="3"><li>Go中使用Seed得到重复随机数的问题 <a href="https://juejin.im/post/5d9c7c736fb9a04df57de074" target="_blank" rel="noopener">https://juejin.im/post/5d9c7c736fb9a04df57de074</a></li></ol></li><li><ol start="4"><li>高效生成JSON串 <a href="https://juejin.im/post/5d9c96ff518825095c3c5f79" target="_blank" rel="noopener">https://juejin.im/post/5d9c96ff518825095c3c5f79</a></li></ol></li><li><ol start="5"><li>Istio熔断器解析 <a href="https://mp.weixin.qq.com/s/95DVrg6oeaGFZi64r7LSLQ" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/95DVrg6oeaGFZi64r7LSLQ</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-10-08">gocn_news_2019-10-08</h2><ul><li><ol><li>Go 构建高性能数据库中间件: <a href="https://mp.weixin.qq.com/s/gzjFt9zi4trMzFi92WqF-A" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/gzjFt9zi4trMzFi92WqF-A</a></li></ol></li><li><ol start="2"><li>Go 编写的代码计数器： <a href="https://github.com/boyter/scc/" target="_blank" rel="noopener">https://github.com/boyter/scc/</a></li></ol></li><li><ol start="3"><li>Go 闭包理解：<a href="https://mp.weixin.qq.com/s/GJnvPgW7IONK9LVw-i34hQ" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/GJnvPgW7IONK9LVw-i34hQ</a></li></ol></li><li><ol start="4"><li>AWS Lambda 使用简介：<a href="https://www.rosie.dev/post/hello-lambda/" target="_blank" rel="noopener">https://www.rosie.dev/post/hello-lambda/</a></li></ol></li><li><ol start="5"><li>单例设计模式：<a href="https://segmentfault.com/a/1190000020608216" target="_blank" rel="noopener">https://segmentfault.com/a/1190000020608216</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-10-07">gocn_news_2019-10-07</h2><ul><li><ol><li>Go 不好的点：JSON 解析的探究 <a href="https://medium.com/@philpearl/bad-go-adventures-with-json-marshalling-1f7a73b80a59" target="_blank" rel="noopener">https://medium.com/@philpearl/bad-go-adventures-with-json-marshalling-1f7a73b80a59</a></li></ol></li><li><ol start="2"><li>Hyperledger Fabric v1.4 中的私有和公有数据 <a href="https://medium.com/@taseen.junaid/private-public-data-at-hyperledger-fabric-v1-4-ff9f303f4bc1" target="_blank" rel="noopener">https://medium.com/@taseen.junaid/private-public-data-at-hyperledger-fabric-v1-4-ff9f303f4bc1</a></li></ol></li><li><ol start="3"><li>以太坊 golang-event 简单使用 <a href="https://www.jianshu.com/p/ab5451b9f4e6" target="_blank" rel="noopener">https://www.jianshu.com/p/ab5451b9f4e6</a></li></ol></li><li><ol start="4"><li>使用 Go 读写请求 <a href="https://juejin.im/post/5d99d606518825582078374d" target="_blank" rel="noopener">https://juejin.im/post/5d99d606518825582078374d</a></li></ol></li><li><ol start="5"><li>多个 pprof 文件合并到一个文件的小工具 <a href="https://github.com/rakyll/pprof-merge" target="_blank" rel="noopener">https://github.com/rakyll/pprof-merge</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-10-06">gocn_news_2019-10-06</h2><ul><li><ol><li>国庆专辑：GopherChina祝大家国庆节快乐</li></ol></li><li><ol start="2"><li>GoCN每日新闻(2019-10-06)</li></ol></li><li><ol start="3"><li><ol><li>Go 1.14 有什么新变化 <a href="http://docs.google.com/presentation/d/1HfIwlVTmVWQk94OLKfTGvXpQxyp0U4ywG1u5j2tjiuE" target="_blank" rel="noopener">http://docs.google.com/presentation/d/1HfIwlVTmVWQk94OLKfTGvXpQxyp0U4ywG1u5j2tjiuE</a></li></ol></li></ol></li><li><ol start="4"><li><ol start="2"><li>优雅地关闭 goroutine  <a href="https://callistaenterprise.se/blogg/teknik/2019/10/05/go-worker-cancellation/" target="_blank" rel="noopener">https://callistaenterprise.se/blogg/teknik/2019/10/05/go-worker-cancellation/</a></li></ol></li></ol></li><li><ol start="5"><li><ol start="3"><li>实现并发版本的 Each,Map,Select 方法 <a href="https://www.beenverified.com/engineering/writing-concurrent-methods-in-go/" target="_blank" rel="noopener">https://www.beenverified.com/engineering/writing-concurrent-methods-in-go/</a></li></ol></li></ol></li><li><ol start="6"><li><ol start="4"><li>使用 Go 和 Kafka 实现有状态的流处理 <a href="https://mux.com/blog/stateful-stream-processing-with-kafka-and-go/" target="_blank" rel="noopener">https://mux.com/blog/stateful-stream-processing-with-kafka-and-go/</a></li></ol></li></ol></li><li><ol start="7"><li><ol start="5"><li>提供无逃逸 Read 和 Write 的库 noescape <a href="https://github.com/lukechampine/noescape" target="_blank" rel="noopener">https://github.com/lukechampine/noescape</a></li></ol></li></ol></li></ul><hr><h2 id="gocn_news_2019-10-05">gocn_news_2019-10-05</h2><ul><li><ol><li>国庆专辑：GopherChina祝大家国庆节快乐GoCN每日新闻(2019-10-05)</li></ol></li><li><ol><li>Gophercon UK 2019 <a href="https://www.bilibili.com/video/av70127356" target="_blank" rel="noopener">https://www.bilibili.com/video/av70127356</a></li></ol></li><li><ol start="2"><li>Golang 接口与反射知识要点 <a href="https://www.cnblogs.com/guangze/p/11621277.html" target="_blank" rel="noopener">https://www.cnblogs.com/guangze/p/11621277.html</a></li></ol></li><li><ol start="3"><li>Gophers的安全性 <a href="https://changelog.com/gotime/101" target="_blank" rel="noopener">https://changelog.com/gotime/101</a></li></ol></li><li><ol start="4"><li>龙芯 &amp; Golang <a href="https://mzh.io/loongson-go" target="_blank" rel="noopener">https://mzh.io/loongson-go</a></li></ol></li><li><ol start="5"><li>通过实例快速掌握k8s（Kubernetes）核心概念 <a href="https://segmentfault.com/a/1190000020595811" target="_blank" rel="noopener">https://segmentfault.com/a/1190000020595811</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-10-04">gocn_news_2019-10-04</h2><ul><li><ol><li>国庆专辑：GopherChina祝大家国庆节快乐</li></ol></li><li><ol start="2"><li>GoCN每日新闻(2019-10-04)</li></ol></li><li><ol start="3"><li><ol><li>Go提议流程:代表 <a href="https://research.swtch.com/proposals-representation" target="_blank" rel="noopener">https://research.swtch.com/proposals-representation</a></li></ol></li></ol></li><li><ol start="4"><li><ol start="2"><li>使用内存池解决性能热点问题 <a href="https://dzone.com/articles/memory-pooling-in-go-where-why-and-how" target="_blank" rel="noopener">https://dzone.com/articles/memory-pooling-in-go-where-why-and-how</a></li></ol></li></ol></li><li><ol start="5"><li><ol start="3"><li>解决Google Cloud Run单任务运行时间限制的一种方法 <a href="https://blog.doit-intl.com/hacking-google-cloud-run-to-run-long-background-tasks-6eb410259a81" target="_blank" rel="noopener">https://blog.doit-intl.com/hacking-google-cloud-run-to-run-long-background-tasks-6eb410259a81</a></li></ol></li></ol></li><li><ol start="6"><li><ol start="4"><li>ent:一个基于schema的ORM框架 <a href="https://github.com/facebookincubator/ent" target="_blank" rel="noopener">https://github.com/facebookincubator/ent</a></li></ol></li></ol></li><li><ol start="7"><li><ol start="5"><li>BigSlice: 一个Go语言编写的集群化数据计算系统 <a href="https://github.com/grailbio/bigslice" target="_blank" rel="noopener">https://github.com/grailbio/bigslice</a></li></ol></li></ol></li><li><ol start="8"><li>编辑: Razil</li></ol></li><li><ol start="9"><li>订阅新闻: <a href="http://tinyletter.com/gocn" target="_blank" rel="noopener">http://tinyletter.com/gocn</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-10-03">gocn_news_2019-10-03</h2><ul><li><ol><li>国庆专辑：GopherChina祝大家国庆节快乐</li></ol></li><li><ol start="2"><li>GoCN每日新闻(2019-10-03)</li></ol></li><li><ol start="3"><li><ol><li>垃圾回收器如何监控你的应用程序 <a href="https://medium.com/a-journey-with-go/go-how-does-the-garbage-collector-watch-your-application-dbef99be2c35" target="_blank" rel="noopener">https://medium.com/a-journey-with-go/go-how-does-the-garbage-collector-watch-your-application-dbef99be2c35</a></li></ol></li></ol></li><li><ol start="4"><li><ol start="2"><li>go ctx超时导致资源释放失败 <a href="https://segmentfault.com/a/1190000020549820" target="_blank" rel="noopener">https://segmentfault.com/a/1190000020549820</a></li></ol></li></ol></li><li><ol start="5"><li><ol start="3"><li>Go channel 实现原理分析 <a href="https://www.jianshu.com/p/d841f251d3bc" target="_blank" rel="noopener">https://www.jianshu.com/p/d841f251d3bc</a></li></ol></li></ol></li><li><ol start="6"><li><ol start="4"><li>通过内存逃逸分析讨论GC的压力 <a href="https://www.jianshu.com/p/10e83dc6cd64" target="_blank" rel="noopener">https://www.jianshu.com/p/10e83dc6cd64</a></li></ol></li></ol></li><li><ol start="7"><li><ol start="5"><li>关于 Liveness/Readiness Probe 的实践与思考 <a href="https://srcco.de/posts/kubernetes-liveness-probes-are-dangerous.html" target="_blank" rel="noopener">https://srcco.de/posts/kubernetes-liveness-probes-are-dangerous.html</a></li></ol></li></ol></li></ul><hr><h2 id="gocn_news_2019-10-02">gocn_news_2019-10-02</h2><ul><li><ol><li>GoCN每日新闻(2019-10-02)1. Golang中基于Gin和Casbin的web使用方式 <a href="https://dev.to/maxwellhertz/tutorial-integrate-gin-with-cabsin-56m0" target="_blank" rel="noopener">https://dev.to/maxwellhertz/tutorial-integrate-gin-with-cabsin-56m0</a></li></ol></li><li><ol start="2"><li>Go语言中的TCP/IP网络编程 <a href="https://segmentfault.com/a/1190000014733620" target="_blank" rel="noopener">https://segmentfault.com/a/1190000014733620</a></li></ol></li><li><ol start="3"><li>Go实现的PDF生成器 <a href="https://github.com/jung-kurt/gofpdf" target="_blank" rel="noopener">https://github.com/jung-kurt/gofpdf</a></li></ol></li><li><ol start="4"><li>Go编写的高性能，轻量级，无阻塞和事件循环网络库  <a href="https://github.com/panjf2000/gnet" target="_blank" rel="noopener">https://github.com/panjf2000/gnet</a></li></ol></li><li><ol start="5"><li>学习使用Minikube部署Kubernetes <a href="https://dev.to/azure/kubernetes-from-the-beginning-part-i-4ifd" target="_blank" rel="noopener">https://dev.to/azure/kubernetes-from-the-beginning-part-i-4ifd</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-10-01">gocn_news_2019-10-01</h2><ul><li><ol><li>GoCN每日新闻(2019-10-01)</li></ol></li><li><ol start="2"><li><ol><li>我依然爱着 GOPATH <a href="https://divan.dev/posts/gopath/" target="_blank" rel="noopener">https://divan.dev/posts/gopath/</a></li></ol></li></ol></li><li><ol start="3"><li><ol start="2"><li>Go 代码注释的用法 <a href="https://blog.jbowen.dev/2019/09/the-magic-of-go-comments/" target="_blank" rel="noopener">https://blog.jbowen.dev/2019/09/the-magic-of-go-comments/</a></li></ol></li></ol></li><li><ol start="4"><li><ol start="3"><li>Go 学习导航 <a href="https://www.calhoun.io/guide-to-go/" target="_blank" rel="noopener">https://www.calhoun.io/guide-to-go/</a></li></ol></li></ol></li><li><ol start="5"><li><ol start="4"><li>Go 的 BT 客户端 <a href="https://github.com/cenkalti/rain" target="_blank" rel="noopener">https://github.com/cenkalti/rain</a></li></ol></li></ol></li><li><ol start="6"><li><ol start="5"><li>Go对接ElasticSearch的单元测试 <a href="https://mp.weixin.qq.com/s/ze7Ws567SgaFQ7OVDyyWEg" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/ze7Ws567SgaFQ7OVDyyWEg</a></li></ol></li></ol></li></ul><hr><h2 id="gocn_news_2019-09-30">gocn_news_2019-09-30</h2><ul><li><ol><li><ol><li>使用Sqlmock测试数据库 <a href="https://medium.com/ralali-engineering/testing-database-using-sqlmock-for-big-agent-b1d4fc486802" target="_blank" rel="noopener">https://medium.com/ralali-engineering/testing-database-using-sqlmock-for-big-agent-b1d4fc486802</a></li></ol></li></ol></li><li><ol start="2"><li><ol start="2"><li>Golang逃逸分析：重现GC压力 <a href="https://medium.com/@sakthishanmugam02/golang-escape-analysis-reduce-pressure-on-gc-6bde1891d625" target="_blank" rel="noopener">https://medium.com/@sakthishanmugam02/golang-escape-analysis-reduce-pressure-on-gc-6bde1891d625</a></li></ol></li></ol></li><li><ol start="3"><li><ol start="3"><li>如何处理返回错误 <a href="https://www.efekarakus.com/golang/2019/09/26/when-to-wrap-errors.html" target="_blank" rel="noopener">https://www.efekarakus.com/golang/2019/09/26/when-to-wrap-errors.html</a></li></ol></li></ol></li><li><ol start="4"><li><ol start="4"><li>Go中实现顺序并发的归并排序 <a href="https://medium.com/@giopap/sequential-and-parallel-merge-sort-in-go-74881e92a609" target="_blank" rel="noopener">https://medium.com/@giopap/sequential-and-parallel-merge-sort-in-go-74881e92a609</a></li></ol></li></ol></li><li><ol start="5"><li><ol start="5"><li>如何编写Event feed库 <a href="https://rauljordan.com/2019/09/23/how-to-write-an-event-feed-library.html" target="_blank" rel="noopener">https://rauljordan.com/2019/09/23/how-to-write-an-event-feed-library.html</a></li></ol></li></ol></li><li><ol start="6"><li><ul><li>据说混迹在广深的 Go 开发团队，水都很深（文末专属福利）<a href="https://mp.weixin.qq.com/s/64aQgrkJfuyupJAclkTLOQ" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/64aQgrkJfuyupJAclkTLOQ</a></li></ul></li></ol></li><li><ol start="7"><li>编辑: 李俱顺Kevin</li></ol></li><li><ol start="8"><li>订阅新闻: <a href="http://tinyletter.com/gocn" target="_blank" rel="noopener">http://tinyletter.com/gocn</a></li></ol></li><li><ol start="9"><li>GoCN归档：<a href="https://gocn.vip/question/6053" target="_blank" rel="noopener">https://gocn.vip/question/6053</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-09-29">gocn_news_2019-09-29</h2><ul><li><ol><li><ol><li>干货满满的Go <a href="http://xn--Modulesgoproxy-mq7x.cn" target="_blank" rel="noopener">Modules和goproxy.cn</a> <a href="https://juejin.im/post/5d8ee2db6fb9a04e0b0d9c8b" target="_blank" rel="noopener">https://juejin.im/post/5d8ee2db6fb9a04e0b0d9c8b</a></li></ol></li></ol></li><li><ol start="2"><li><ol start="2"><li>gnet: 一个轻量级且高性能的 Golang 网络库  <a href="https://taohuawu.club/go-event-loop-networking-library-gnet" target="_blank" rel="noopener">https://taohuawu.club/go-event-loop-networking-library-gnet</a></li></ol></li></ol></li><li><ol start="3"><li><ol start="3"><li>go-gin-api 路由中间件 - Jaeger 链路追踪 <a href="https://www.cnblogs.com/xinliangcoder/p/11604880.html" target="_blank" rel="noopener">https://www.cnblogs.com/xinliangcoder/p/11604880.html</a></li></ol></li></ol></li><li><ol start="4"><li><ol start="4"><li>golang-middleware设计模式 <a href="https://yuerblog.cc/2019/09/29/golang-middleware%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/" target="_blank" rel="noopener">https://yuerblog.cc/2019/09/29/golang-middleware设计模式/</a></li></ol></li></ol></li><li><ol start="5"><li><ol start="5"><li>YouTube召回模型设计 <a href="http://www.broadview.com.cn/article/419572" target="_blank" rel="noopener">http://www.broadview.com.cn/article/419572</a></li></ol></li></ol></li></ul><hr><h2 id="gocn_news_2019-09-28">gocn_news_2019-09-28</h2><ul><li><ol><li><ol><li>可视化Go程序的调用图 <a href="https://truefurby.github.io/go-callvis/" target="_blank" rel="noopener">https://truefurby.github.io/go-callvis/</a></li></ol></li></ol></li><li><ol start="2"><li>Go modules编写和发布官方教程 <a href="https://blog.golang.org/publishing-go-modules" target="_blank" rel="noopener">https://blog.golang.org/publishing-go-modules</a></li></ol></li><li><ol start="3"><li>使用Go代替bash编写脚本 <a href="https://presstige.io/p/Using-Go-instead-of-bash-for-scripts-6b51885c1f6940aeb40476000d0eb0fc" target="_blank" rel="noopener">https://presstige.io/p/Using-Go-instead-of-bash-for-scripts-6b51885c1f6940aeb40476000d0eb0fc</a></li></ol></li><li><ol start="4"><li>理解Golang中slice的底层设计 <a href="https://segmentfault.com/a/1190000020518237" target="_blank" rel="noopener">https://segmentfault.com/a/1190000020518237</a></li></ol></li><li><ol start="5"><li>Go学习笔记之学习函数式编程前不要忘了函数基础 <a href="https://my.oschina.net/snowdreams1006/blog/3106370" target="_blank" rel="noopener">https://my.oschina.net/snowdreams1006/blog/3106370</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-09-27">gocn_news_2019-09-27</h2><hr><ul><li><ol><li>Golang新版本发布:Go 1.13.1和Go 1.12.10 <a href="https://golang.org/dl/" target="_blank" rel="noopener">https://golang.org/dl/</a></li></ol></li><li><ol start="2"><li>如何在Golang中使用Websockets：最佳工具和步骤指南 <a href="https://yalantis.com/blog/how-to-build-websockets-in-go/" target="_blank" rel="noopener">https://yalantis.com/blog/how-to-build-websockets-in-go/</a></li></ol></li><li><ol start="3"><li>详解varint编码原理 <a href="https://segmentfault.com/a/1190000020500985" target="_blank" rel="noopener">https://segmentfault.com/a/1190000020500985</a></li></ol></li><li><ol start="4"><li>Rabin-Karp算法在go的实现 <a href="https://sjatsh.com/golang/2019/09/26/rabin-karp/" target="_blank" rel="noopener">https://sjatsh.com/golang/2019/09/26/rabin-karp/</a></li></ol></li><li><ol start="5"><li>Go微服务容错与韧性(Service Resilience) <a href="https://segmentfault.com/a/1190000020503704" target="_blank" rel="noopener">https://segmentfault.com/a/1190000020503704</a></li></ol></li></ul><h2 id="gocn_news_2019-09-26">gocn_news_2019-09-26</h2><ul><li><ol><li>go-gin-api 路由中间件：Jaeger 链路追踪（六）<a href="https://mp.weixin.qq.com/s/Ea28475_UTNaM9RNfgPqJA" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/Ea28475_UTNaM9RNfgPqJA</a></li></ol></li><li><ol start="2"><li>golang interface 要怎么用？<a href="http://www.leyafo.com/post/2019-09-24-how-to-use-golang-interface/" target="_blank" rel="noopener">http://www.leyafo.com/post/2019-09-24-how-to-use-golang-interface/</a></li></ol></li><li><ol start="3"><li>Go 程序占用大量内存问题分析 <a href="http://team.jiunile.com/blog/2019/09/go-debug-memory.html" target="_blank" rel="noopener">http://team.jiunile.com/blog/2019/09/go-debug-memory.html</a></li></ol></li><li><ol start="4"><li>Go 业务基础库之 Error <a href="https://mp.weixin.qq.com/s/PLzA22yfSV_byckTTezl5Q" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/PLzA22yfSV_byckTTezl5Q</a></li></ol></li><li><ol start="5"><li>Prometheus架构与实践分享 <a href="https://mp.weixin.qq.com/s/beusaP2f3mOMIlEETBhtjg" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/beusaP2f3mOMIlEETBhtjg</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-09-25">gocn_news_2019-09-25</h2><ul><li><ol><li>Go module 再回顾 <a href="https://colobu.com/2019/09/23/review-go-module-again/" target="_blank" rel="noopener">https://colobu.com/2019/09/23/review-go-module-again/</a></li></ol></li><li><ol start="2"><li>如何灵活地进行Go版本管理 <a href="https://juejin.im/post/5d848b66f265da03a7160e89" target="_blank" rel="noopener">https://juejin.im/post/5d848b66f265da03a7160e89</a></li></ol></li><li><ol start="3"><li>Go RESTful 服务挂了怎么能第一时间知晓？分享一个超实用的健康检查方法 <a href="https://mp.weixin.qq.com/s/tpWAYN18cSW9lRXGumsEbw" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/tpWAYN18cSW9lRXGumsEbw</a></li></ol></li><li><ol start="4"><li>原来这才是 Go Interface <a href="https://juejin.im/post/5d8877f1f265da03986c311c" target="_blank" rel="noopener">https://juejin.im/post/5d8877f1f265da03986c311c</a></li></ol></li><li><ol start="5"><li>Go中处理可选参数 <a href="https://medium.com/@petomalina/dealing-with-optional-parameters-in-go-9780f9bfbd1d*" target="_blank" rel="noopener">https://medium.com/@petomalina/dealing-with-optional-parameters-in-go-9780f9bfbd1d*</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-09-24">gocn_news_2019-09-24</h2><ul><li><ol><li>Go 搭建的高效网页爬虫：<a href="https://creekorful.me/building-fast-modern-web-crawler/" target="_blank" rel="noopener">https://creekorful.me/building-fast-modern-web-crawler/</a></li></ol></li><li><ol start="2"><li>Go 时区处理：<a href="https://medium.com/@kamal.g.namdeo/handling-timezone-in-go-723b1e38639c" target="_blank" rel="noopener">https://medium.com/@kamal.g.namdeo/handling-timezone-in-go-723b1e38639c</a></li></ol></li><li><ol start="3"><li>Go io.Reader/io.Writer 处理流数据：<a href="https://dasio.hashnode.dev/using-of-ioreaderiowriter-in-go-to-stream-data-ck0v22mvg0005xes1gp13f5pg" target="_blank" rel="noopener">https://dasio.hashnode.dev/using-of-ioreaderiowriter-in-go-to-stream-data-ck0v22mvg0005xes1gp13f5pg</a></li></ol></li><li>4.Docker 安全入门：风险及最佳实践 <a href="https://www.stackrox.com/post/2019/09/docker-security-101/" target="_blank" rel="noopener">https://www.stackrox.com/post/2019/09/docker-security-101/</a></li><li><ol start="5"><li>使用 Jenkins，Nexus，k8s 构建 CI/CD 流：<a href="https://kublr.com/blog/cicd-pipeline-with-jenkins-nexus-kubernetes/*" target="_blank" rel="noopener">https://kublr.com/blog/cicd-pipeline-with-jenkins-nexus-kubernetes/*</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-09-23">gocn_news_2019-09-23</h2><ul><li><ol><li>查看 Go 的代码优化过程 <a href="http://xargin.com/go-compiler-opt" target="_blank" rel="noopener">http://xargin.com/go-compiler-opt</a></li></ol></li><li><ol start="2"><li>go 学习笔记之仅仅需要一个示例就能讲清楚什么闭包 <a href="https://segmentfault.com/a/1190000020461487" target="_blank" rel="noopener">https://segmentfault.com/a/1190000020461487</a></li></ol></li><li><ol start="3"><li>使用 pprof和go-torch排查golang 的性能问题 <a href="https://www.felix021.com/blog/read.php?2210" target="_blank" rel="noopener">https://www.felix021.com/blog/read.php?2210</a></li></ol></li><li><ol start="4"><li>为什么 Go 模块在下游服务抖动恢复后，CPU 占用无法恢复 <a href="http://xargin.com/cpu-idle-cannot-recover-after-peak-load" target="_blank" rel="noopener">http://xargin.com/cpu-idle-cannot-recover-after-peak-load</a></li></ol></li><li><ol start="5"><li>一个分析算法大O时间复杂度的库 <a href="https://github.com/Oppodelldog/bigo" target="_blank" rel="noopener">https://github.com/Oppodelldog/bigo</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-09-22">gocn_news_2019-09-22</h2><ul><li><ol><li>Go 中的测试  <a href="https://ieftimov.com/post/testing-in-go-fixtures/" target="_blank" rel="noopener">https://ieftimov.com/post/testing-in-go-fixtures/</a></li></ol></li><li><ol start="2"><li>纯 Go 编写的高性能网络库 gnet  <a href="https://github.com/panjf2000/gnet" target="_blank" rel="noopener">https://github.com/panjf2000/gnet</a></li></ol></li><li><ol start="3"><li>Go 包管理 <a href="https://deepsource.io/blog/go-modules/" target="_blank" rel="noopener">https://deepsource.io/blog/go-modules/</a></li></ol></li><li><ol start="4"><li>如何使用 Go 中的可变参数函数 <a href="https://www.digitalocean.com/community/tutorials/how-to-use-variadic-functions-in-go" target="_blank" rel="noopener">https://www.digitalocean.com/community/tutorials/how-to-use-variadic-functions-in-go</a></li></ol></li><li><ol start="5"><li>捕获闭包中的循环变量 <a href="https://eli.thegreenplace.net/2019/go-internals-capturing-loop-variables-in-closures/" target="_blank" rel="noopener">https://eli.thegreenplace.net/2019/go-internals-capturing-loop-variables-in-closures/</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-09-21">gocn_news_2019-09-21</h2><ul><li><ol><li>为什么是Go而不是Rust <a href="https://kristoff.it/blog/why-go-and-not-rust" target="_blank" rel="noopener">https://kristoff.it/blog/why-go-and-not-rust</a></li></ol></li><li><ol start="2"><li>Go语言包管理简史 <a href="https://tonybai.com/2019/09/21/brief-history-of-go-package-management" target="_blank" rel="noopener">https://tonybai.com/2019/09/21/brief-history-of-go-package-management</a></li></ol></li><li><ol start="3"><li>Go Modules 和 Go Proxy <a href="https://segmentfault.com/a/1190000020450159" target="_blank" rel="noopener">https://segmentfault.com/a/1190000020450159</a></li></ol></li><li><ol start="4"><li>如何用Go语言打造一个高性能MySQL Proxy <a href="https://segmentfault.com/a/1190000003101056" target="_blank" rel="noopener">https://segmentfault.com/a/1190000003101056</a></li></ol></li><li><ol start="5"><li>Go微服务全链路跟踪详解 <a href="https://segmentfault.com/a/1190000020450845" target="_blank" rel="noopener">https://segmentfault.com/a/1190000020450845</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-09-20">gocn_news_2019-09-20</h2><ul><li><ol><li>一文悟透备受争议的 Go 语言错误处理 <a href="http://developer.51cto.com/art/201909/603177.htm" target="_blank" rel="noopener">http://developer.51cto.com/art/201909/603177.htm</a></li></ol></li><li><ol start="2"><li>把我的Go项目从travis迁移到github actions <a href="https://www.markphelps.me/2019/09/migrating-from-travis-to-github-actions/" target="_blank" rel="noopener">https://www.markphelps.me/2019/09/migrating-from-travis-to-github-actions/</a></li></ol></li><li><ol start="3"><li>Serverless微服务实践 <a href="https://ewanvalentine.io/how-im-writing-serverless-services-in-golang-these-days/" target="_blank" rel="noopener">https://ewanvalentine.io/how-im-writing-serverless-services-in-golang-these-days/</a></li></ol></li><li><ol start="4"><li>Go Vet 命令：超出预期的强大 <a href="https://studygolang.com/articles/23498" target="_blank" rel="noopener">https://studygolang.com/articles/23498</a></li></ol></li><li><ol start="5"><li>gojtp: 动态json校验库 <a href="https://github.com/ankur-anand/gojtp" target="_blank" rel="noopener">https://github.com/ankur-anand/gojtp</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-09-19">gocn_news_2019-09-19</h2><ul><li><ol><li>踏出使用Go的第一步 <a href="https://dev.to/heroku/first-steps-with-go-4ggl" target="_blank" rel="noopener">https://dev.to/heroku/first-steps-with-go-4ggl</a></li></ol></li><li><ol start="2"><li>golang优雅的错误处理 <a href="https://segmentfault.com/a/1190000020420692" target="_blank" rel="noopener">https://segmentfault.com/a/1190000020420692</a></li></ol></li><li><ol start="3"><li>go基于ip地址的速率限制http请求 <a href="https://dev.to/plutov/rate-limiting-http-requests-in-go-based-on-ip-address-542g" target="_blank" rel="noopener">https://dev.to/plutov/rate-limiting-http-requests-in-go-based-on-ip-address-542g</a></li></ol></li><li><ol start="4"><li>基于中间件的轻量级golang web框架 <a href="https://goa-go.github.io/zh/" target="_blank" rel="noopener">https://goa-go.github.io/zh/</a></li></ol></li><li><ol start="5"><li>构建Go mod项目的Docker镜像只需三步 <a href="https://dev.to/ivan/go-build-a-minimal-docker-image-in-just-three-steps-514i" target="_blank" rel="noopener">https://dev.to/ivan/go-build-a-minimal-docker-image-in-just-three-steps-514i</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-09-18">gocn_news_2019-09-18</h2><ul><li><ol><li>看看这篇拯救发际线的干货吧–警惕 Go 编程陷阱 <a href="https://mp.weixin.qq.com/s/0bJOzNxoQhdVjFOunhmVKQ" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/0bJOzNxoQhdVjFOunhmVKQ</a></li></ol></li><li><ol start="2"><li>Google – 如何去做code review <a href="https://juejin.im/post/5d80c27cf265da03e61b45c7" target="_blank" rel="noopener">https://juejin.im/post/5d80c27cf265da03e61b45c7</a></li></ol></li><li><ol start="3"><li>Go 内存管理 <a href="https://povilasv.me/go-memory-management-part-3/" target="_blank" rel="noopener">https://povilasv.me/go-memory-management-part-3/</a></li></ol></li><li><ol start="4"><li>Goroutine 原理 <a href="https://draveness.me/golang/concurrency/golang-goroutine.html" target="_blank" rel="noopener">https://draveness.me/golang/concurrency/golang-goroutine.html</a></li></ol></li><li><ol start="5"><li>gnet: 轻量级且高性能的 Golang 网络库 <a href="https://segmentfault.com/a/1190000020399873" target="_blank" rel="noopener">https://segmentfault.com/a/1190000020399873</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-09-17">gocn_news_2019-09-17</h2><ul><li><ol><li>【图示】控制 Goroutine 的并发数量的方式 <a href="https://jingwei.link/2019/09/13/conotrol-goroutines-count.html" target="_blank" rel="noopener">https://jingwei.link/2019/09/13/conotrol-goroutines-count.html</a></li></ol></li><li><ol start="2"><li>聊一聊Go的那些处理命令行参数和配置文件的库 <a href="https://segmentfault.com/a/1190000020377098" target="_blank" rel="noopener">https://segmentfault.com/a/1190000020377098</a></li></ol></li><li><ol start="3"><li>go 学习笔记之学习函数式编程前不要忘了函数基础 <a href="https://mp.weixin.qq.com/s/dprkCOvPZHr6fi_qC91dVw" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/dprkCOvPZHr6fi_qC91dVw</a></li></ol></li><li><ol start="4"><li>Go 设计模式思想 <a href="https://github.com/sevenelevenlee/go-patterns" target="_blank" rel="noopener">https://github.com/sevenelevenlee/go-patterns</a></li></ol></li><li><ol start="5"><li>Go 连接 NATS <a href="https://mp.weixin.qq.com/s/oE7Q-9wPrngHfr02gbBlLw" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/oE7Q-9wPrngHfr02gbBlLw</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-09-16">gocn_news_2019-09-16</h2><ul><li><ol><li>响应式规划与Go中的妥协 <a href="https://gianarb.it/blog/reactive-planning-and-reconciliation-in-go" target="_blank" rel="noopener">https://gianarb.it/blog/reactive-planning-and-reconciliation-in-go</a></li></ol></li><li><ol start="2"><li>在 Go 中使用服务对象 <a href="https://mp.weixin.qq.com/s/i0onQKFOkO7XBLpjMgVqqA" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/i0onQKFOkO7XBLpjMgVqqA</a></li></ol></li><li><ol start="3"><li>在Go中构建不可变变量 <a href="https://levelup.gitconnected.com/building-immutable-data-structures-in-go-56a1068c76b2" target="_blank" rel="noopener">https://levelup.gitconnected.com/building-immutable-data-structures-in-go-56a1068c76b2</a></li></ol></li><li><ol start="4"><li>NATS多种连接Golang实践 <a href="https://mp.weixin.qq.com/s/oE7Q-9wPrngHfr02gbBlLw" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/oE7Q-9wPrngHfr02gbBlLw</a></li></ol></li><li><ol start="5"><li>TurboCookedRabbit: 一款用户友好的RabbitMQ库 <a href="https://github.com/houseofcat/turbocookedrabbit" target="_blank" rel="noopener">https://github.com/houseofcat/turbocookedrabbit</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-09-15">gocn_news_2019-09-15</h2><ul><li><ol><li>Go语言测试进阶版建议与技巧 <a href="https://pengrl.com/p/32101/" target="_blank" rel="noopener">https://pengrl.com/p/32101/</a></li></ol></li><li><ol start="2"><li>图数据库爱好者的聚会在谈论什么？ <a href="https://zhuanlan.zhihu.com/p/82300640" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/82300640</a></li></ol></li><li><ol start="3"><li>Go中slice的In功能实现探索 <a href="https://juejin.im/post/5d7cc0aae51d4557ca7fddd4" target="_blank" rel="noopener">https://juejin.im/post/5d7cc0aae51d4557ca7fddd4</a></li></ol></li><li><ol start="4"><li>美团集群调度系统HULK技术演进 <a href="https://mp.weixin.qq.com/s/AuCQn3jdJURUi9tZLt0dlw" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/AuCQn3jdJURUi9tZLt0dlw</a></li></ol></li><li><ol start="5"><li>你需要的是一款合适且强大的OLAP数据库 <a href="https://segmentfault.com/a/1190000020385432" target="_blank" rel="noopener">https://segmentfault.com/a/1190000020385432</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-09-14">gocn_news_2019-09-14</h2><ul><li><ol><li>构建更好的Go链接器 <a href="https://docs.google.com/document/d/1D13QhciikbdLtaI67U6Ble5d_1nsI4befEd6_k1z91U/view" target="_blank" rel="noopener">https://docs.google.com/document/d/1D13QhciikbdLtaI67U6Ble5d_1nsI4befEd6_k1z91U/view</a></li></ol></li><li><ol start="2"><li>在Go中创建自定义错误 <a href="https://www.digitalocean.com/community/tutorials/creating-custom-errors-in-go" target="_blank" rel="noopener">https://www.digitalocean.com/community/tutorials/creating-custom-errors-in-go</a></li></ol></li><li><ol start="3"><li>Go Serverless Fn介绍 <a href="https://fnproject.io/tutorials/Introduction/" target="_blank" rel="noopener">https://fnproject.io/tutorials/Introduction/</a></li></ol></li><li><ol start="4"><li>Go是如何实现protobuf的编解码的(2)：源码 <a href="https://segmentfault.com/a/1190000020338411" target="_blank" rel="noopener">https://segmentfault.com/a/1190000020338411</a></li></ol></li><li><ol start="5"><li>我们如何在Go中构建一个Lucene启发的解析器 <a href="https://www.mailgun.com/blog/how-we-built-a-lucene-inspired-parser-in-go" target="_blank" rel="noopener">https://www.mailgun.com/blog/how-we-built-a-lucene-inspired-parser-in-go</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-09-13">gocn_news_2019-09-13</h2><ul><li><ol><li>弄懂goroutine调度原理 <a href="https://bingjian-zhu.github.io/2019/09/12/%E5%BC%84%E6%87%82goroutine%E8%B0%83%E5%BA%A6%E5%8E%9F%E7%90%86/" target="_blank" rel="noopener">https://bingjian-zhu.github.io/2019/09/12/弄懂goroutine调度原理/</a></li></ol></li><li><ol start="2"><li>聊一聊Go的那些处理命令行参数和配置文件的库 <a href="https://segmentfault.com/a/1190000020377098" target="_blank" rel="noopener">https://segmentfault.com/a/1190000020377098</a></li></ol></li><li><ol start="3"><li>Kong 开源的的服务网格Kuma爬过了K8S这座大山 <a href="https://mp.weixin.qq.com/s/7FlaDCsmOTOgSm-2IWZWiQ" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/7FlaDCsmOTOgSm-2IWZWiQ</a></li></ol></li><li><ol start="4"><li>理解 Golang 中 slice 的底层设计 <a href="https://juejin.im/post/5d79eddbe51d4561e53539df" target="_blank" rel="noopener">https://juejin.im/post/5d79eddbe51d4561e53539df</a></li></ol></li><li><ol start="5"><li>Cadence一个分布式，可扩展，持久且高度可用的编排引擎 <a href="https://github.com/uber/cadence" target="_blank" rel="noopener">https://github.com/uber/cadence</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-09-12">gocn_news_2019-09-12</h2><ul><li><ol><li>Go Web 应用的优势和劣势   <a href="https://www.brsoftech.com/blog/advantages-and-disadvantages-of-golang-web-application/" target="_blank" rel="noopener">https://www.brsoftech.com/blog/advantages-and-disadvantages-of-golang-web-application/</a></li></ol></li><li><ol start="2"><li>深入Go的错误处理机制使用 <a href="http://www.cnblogs.com/sy270321/p/11508797.html" target="_blank" rel="noopener">http://www.cnblogs.com/sy270321/p/11508797.html</a></li></ol></li><li><ol start="3"><li>go-gin-api 路由中间件 - 捕获异常（四） <a href="https://segmentfault.com/a/1190000020358030" target="_blank" rel="noopener">https://segmentfault.com/a/1190000020358030</a></li></ol></li><li><ol start="4"><li>Go http request 引起的 goroutine 泄漏 <a href="http://sanyuesha.com/2019/09/10/go-http-request-goroutine-leak/" target="_blank" rel="noopener">http://sanyuesha.com/2019/09/10/go-http-request-goroutine-leak/</a></li></ol></li><li><ol start="5"><li>微服务架构在Kubernetes上的实现 <a href="https://mp.weixin.qq.com/s/YjInujvKHJSU6az9TEOmpw" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/YjInujvKHJSU6az9TEOmpw</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-09-11">gocn_news_2019-09-11</h2><ul><li><ol><li>Go Modules 不完全教程  <a href="https://mp.weixin.qq.com/s/v-NdYEJBgKbiKsdoQaRsQg" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/v-NdYEJBgKbiKsdoQaRsQg</a></li></ol></li><li><ol start="2"><li>调试Go的代码生成 <a href="https://mp.weixin.qq.com/s/mlkpqz5TRCiGrRs35WUNRQ" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/mlkpqz5TRCiGrRs35WUNRQ</a></li></ol></li><li><ol start="3"><li>用Go高效检测有效的IPv4 <a href="https://medium.com/@sergio.anguita/detecting-a-valid-ipv4-in-go-like-a-boss-32eda9bf422f" target="_blank" rel="noopener">https://medium.com/@sergio.anguita/detecting-a-valid-ipv4-in-go-like-a-boss-32eda9bf422f</a></li></ol></li><li><ol start="4"><li>优雅的处理errors <a href="https://juejin.im/post/5d772620e51d4561c83e7cd2" target="_blank" rel="noopener">https://juejin.im/post/5d772620e51d4561c83e7cd2</a></li></ol></li><li><ol start="5"><li>写在Go1.13中的错误常量 <a href="https://medium.com/@smyrman/writing-constant-errors-with-go-1-13-10c4191617" target="_blank" rel="noopener">https://medium.com/@smyrman/writing-constant-errors-with-go-1-13-10c4191617</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-09-10">gocn_news_2019-09-10</h2><ul><li><ol><li>使用 Go 和 React Native 为窗口应用或游戏创建一个 OTP 锁 <a href="https://medium.com/@abhinavdabral/making-games-application-lock-using-go-and-react-native-71090d0af65c" target="_blank" rel="noopener">https://medium.com/@abhinavdabral/making-games-application-lock-using-go-and-react-native-71090d0af65c</a></li></ol></li><li><ol start="2"><li>使用 Go 构建 GitHub Actions <a href="https://medium.com/@yanzay/building-github-actions-using-go-80a0add54104" target="_blank" rel="noopener">https://medium.com/@yanzay/building-github-actions-using-go-80a0add54104</a></li></ol></li><li><ol start="3"><li>thrift golang 解析 <a href="https://juejin.im/post/5d71e684f265da03dd3d9533" target="_blank" rel="noopener">https://juejin.im/post/5d71e684f265da03dd3d9533</a></li></ol></li><li><ol start="4"><li>躲避 Go 1.13 defer 性能提升的姿势 <a href="https://zhuanlan.zhihu.com/p/81857521" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/81857521</a></li></ol></li><li><ol start="5"><li>goroutine的分时调度解析 <a href="https://juejin.im/post/5d65d84751882550f321d22c" target="_blank" rel="noopener">https://juejin.im/post/5d65d84751882550f321d22c</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-09-09">gocn_news_2019-09-09</h2><ul><li><ol><li>只需三步构建最小的 Go Docker 镜像 <a href="https://medium.com/@dlugos.ivan/go-build-a-minimal-docker-image-in-just-three-steps-237a7ab0a105" target="_blank" rel="noopener">https://medium.com/@dlugos.ivan/go-build-a-minimal-docker-image-in-just-three-steps-237a7ab0a105</a></li></ol></li><li><ol start="2"><li>Golang 的 WebAssembly 已经准备好了吗 <a href="https://medium.com/@KevinHoffman/golang-are-we-webassembly-yet-e0a2e180fc98" target="_blank" rel="noopener">https://medium.com/@KevinHoffman/golang-are-we-webassembly-yet-e0a2e180fc98</a></li></ol></li><li><ol start="3"><li>深入理解 Go-runtime.SetFinalizer 原理剖析 <a href="https://segmentfault.com/a/1190000020323654" target="_blank" rel="noopener">https://segmentfault.com/a/1190000020323654</a></li></ol></li><li><ol start="4"><li>golang 基于 mysql 到内存 map 的缓存库 <a href="https://studygolang.com/articles/23355" target="_blank" rel="noopener">https://studygolang.com/articles/23355</a></li></ol></li><li><ol start="5"><li>Google Cloud Spanner 的 Schema 管理工具 <a href="https://github.com/mercari/wrench" target="_blank" rel="noopener">https://github.com/mercari/wrench</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-09-08">gocn_news_2019-09-08</h2><ul><li><ol><li>Go 语言回顾: 从 Go 1.0 到 Go 1.13 <a href="https://tonybai.com/2019/09/07/go-retrospective/" target="_blank" rel="noopener">https://tonybai.com/2019/09/07/go-retrospective/</a></li></ol></li><li><ol start="2"><li>Go 1.13 defer 的性能是如何提高的？  <a href="https://mp.weixin.qq.com/s/lwBLVjdZCkwTEZzXhpwKJg" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/lwBLVjdZCkwTEZzXhpwKJg</a></li></ol></li><li><ol start="3"><li>两个 Go 程序，三种不同的 pprof 技术 <a href="https://www.youtube.com/watch?v=nok0aYiGiYA" target="_blank" rel="noopener">https://www.youtube.com/watch?v=nok0aYiGiYA</a></li></ol></li><li><ol start="4"><li>Go:编译器概述 <a href="https://medium.com/a-journey-with-go/go-overview-of-the-compiler-4e5a153ca889" target="_blank" rel="noopener">https://medium.com/a-journey-with-go/go-overview-of-the-compiler-4e5a153ca889</a></li></ol></li><li><ol start="5"><li>软件工程的多重意义 <a href="https://medium.com/@solidi/the-many-senses-of-software-engineering-aba9f289498c" target="_blank" rel="noopener">https://medium.com/@solidi/the-many-senses-of-software-engineering-aba9f289498c</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-09-07">gocn_news_2019-09-07</h2><ul><li><ol><li>Go 1.13虽迟但到，<a href="http://goproxy.cn" target="_blank" rel="noopener">goproxy.cn</a> 为中国开发者量身提供模块代理 <a href="https://mp.weixin.qq.com/s/45DTGk90CQzvqN1-y4WvVw" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/45DTGk90CQzvqN1-y4WvVw</a></li></ol></li><li><ol start="2"><li>Go语言(golang)新发布的1.13中的Error Wrapping深度分析 <a href="https://www.flysnow.org/2019/09/06/go1.13-error-wrapping.html" target="_blank" rel="noopener">https://www.flysnow.org/2019/09/06/go1.13-error-wrapping.html</a></li></ol></li><li><ol start="3"><li>Go 语言的并发性 <a href="http://minaandrawos.com/2015/12/06/concurrency-in-golang" target="_blank" rel="noopener">http://minaandrawos.com/2015/12/06/concurrency-in-golang</a></li></ol></li><li><ol start="4"><li>Go并发之channel篇 <a href="https://mp.weixin.qq.com/s/PIb-gGBootc6581pHhi5ew" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/PIb-gGBootc6581pHhi5ew</a></li></ol></li><li><ol start="5"><li>锲而不舍 —— M 是怎样找工作的？<a href="https://qcrao.com/2019/09/06/go-scheduler-m-finds-work/" target="_blank" rel="noopener">https://qcrao.com/2019/09/06/go-scheduler-m-finds-work/</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-09-06">gocn_news_2019-09-06</h2><ul><li><ol><li>不要为你的API调用者进行强制分配 <a href="https://dave.cheney.net/2019/09/05/dont-force-allocations-on-the-callers-of-your-api" target="_blank" rel="noopener">https://dave.cheney.net/2019/09/05/dont-force-allocations-on-the-callers-of-your-api</a></li></ol></li><li><ol start="2"><li>Go context包的语义 <a href="https://www.ardanlabs.com/blog/2019/09/context-package-semantics-in-go.html" target="_blank" rel="noopener">https://www.ardanlabs.com/blog/2019/09/context-package-semantics-in-go.html</a></li></ol></li><li><ol start="3"><li>让Go程序打印HTTP请求详情 <a href="https://onepage.nopub.io/p/Logging-HTTP-requests-in-Go-233de7fe59a747078b35b82a1b035d36" target="_blank" rel="noopener">https://onepage.nopub.io/p/Logging-HTTP-requests-in-Go-233de7fe59a747078b35b82a1b035d36</a></li></ol></li><li><ol start="4"><li>Go schedule的轮回 <a href="https://mp.weixin.qq.com/s/QFmh0wq50H9-4ZrtEknpCQ" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/QFmh0wq50H9-4ZrtEknpCQ</a></li></ol></li><li><ol start="5"><li>Go scheduler开始调度循环 <a href="https://mp.weixin.qq.com/s/pRCWOKlI48soY0deOWoSEw" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/pRCWOKlI48soY0deOWoSEw</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-09-05">gocn_news_2019-09-05</h2><ul><li><ol><li>千难万险-goroutine 从生到死（六） <a href="https://mp.weixin.qq.com/s/kwKqrT4BoeheM9MvSh-rLw" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/kwKqrT4BoeheM9MvSh-rLw</a></li></ol></li><li><ol start="2"><li>Go 1.13虽迟但到，<a href="http://goproxy.cn" target="_blank" rel="noopener">goproxy.cn</a> 为中国开发者量身提供模块代理 <a href="https://mp.weixin.qq.com/s/45DTGk90CQzvqN1-y4WvVw" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/45DTGk90CQzvqN1-y4WvVw</a></li></ol></li><li><ol start="3"><li>如何在Golang项目中使用Github Actions <a href="https://github.com/mvdan/github-actions-golang" target="_blank" rel="noopener">https://github.com/mvdan/github-actions-golang</a></li></ol></li><li><ol start="4"><li>Go语言回顾：从1.0到1.13 <a href="https://medium.com/@blanchon.vincent/go-retrospective-b9723352e9b0" target="_blank" rel="noopener">https://medium.com/@blanchon.vincent/go-retrospective-b9723352e9b0</a></li></ol></li><li><ol start="5"><li>v8go: 在Go中使用v8引擎 <a href="https://github.com/rogchap/v8go" target="_blank" rel="noopener">https://github.com/rogchap/v8go</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-09-04">gocn_news_2019-09-04</h2><ul><li><ol><li>Go 1.13 Released <a href="https://golang.org/doc/go1.13" target="_blank" rel="noopener">https://golang.org/doc/go1.13</a></li></ol></li><li><ol start="2"><li>Bad Go:轻浮的Sprintf <a href="https://philpearl.github.io/post/bad_go_sprintf/" target="_blank" rel="noopener">https://philpearl.github.io/post/bad_go_sprintf/</a></li></ol></li><li><ol start="3"><li>用 GODEBUG 看 GC <a href="https://segmentfault.com/a/1190000020255157" target="_blank" rel="noopener">https://segmentfault.com/a/1190000020255157</a></li></ol></li><li><ol start="4"><li>Go语言之指针 <a href="https://mp.weixin.qq.com/s/qXi-_e_nuVDnaiPfm2HIHQ" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/qXi-_e_nuVDnaiPfm2HIHQ</a></li></ol></li><li><ol start="5"><li>优雅关闭的 Go Web 服务器 <a href="https://mp.weixin.qq.com/s/rA_oh472ZhfcAsAkWyyXFA" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/rA_oh472ZhfcAsAkWyyXFA</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-09-03">gocn_news_2019-09-03</h2><ul><li><ol><li>Go 实现交互式终端资源管理器 <a href="https://github.com/keylo99/pkgtop" target="_blank" rel="noopener">https://github.com/keylo99/pkgtop</a></li></ol></li><li><ol start="2"><li>在线 Go 小测试 <a href="https://golangme.com/quiz/" target="_blank" rel="noopener">https://golangme.com/quiz/</a></li></ol></li><li><ol start="3"><li>深度解密Go语言之scheduler <a href="https://mp.weixin.qq.com/s/rpCf5vm9xYFXjmR98vanfQ" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/rpCf5vm9xYFXjmR98vanfQ</a></li></ol></li><li><ol start="4"><li>如何测试你的 Go 代码 <a href="https://juejin.im/post/5d6d462ef265da03e5234f57" target="_blank" rel="noopener">https://juejin.im/post/5d6d462ef265da03e5234f57</a></li></ol></li><li><ol start="5"><li>Go调用浏览访问url链接 <a href="https://segmentfault.com/a/1190000020271815" target="_blank" rel="noopener">https://segmentfault.com/a/1190000020271815</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-09-02">gocn_news_2019-09-02</h2><ul><li><ol><li>GopherCon 2019：Dave Cheney - 两个Go程序，三种不同的分析技术 <a href="https://golangnews.com/stories/4093" target="_blank" rel="noopener">https://golangnews.com/stories/4093</a></li></ol></li><li><ol start="2"><li>计算机主题的自传：出生，死亡和重生 <a href="https://medium.com/@onlyliuxin/im-a-thread-c6fb4788babb" target="_blank" rel="noopener">https://medium.com/@onlyliuxin/im-a-thread-c6fb4788babb</a></li></ol></li><li><ol start="3"><li>Go1.13 带来的新特性: <a href="https://docs.google.com/presentation/d/1RiZmupILuIQQ1Y-psDb1SzXNjCWh-I_-wagthdcwlq8/edit#slide=id.p" target="_blank" rel="noopener">https://docs.google.com/presentation/d/1RiZmupILuIQQ1Y-psDb1SzXNjCWh-I_-wagthdcwlq8/edit#slide=id.p</a></li></ol></li><li><ol start="4"><li>Go JSON中带有的注释框架jsonc <a href="https://github.com/muhammadmuzzammil1998/jsonc" target="_blank" rel="noopener">https://github.com/muhammadmuzzammil1998/jsonc</a></li></ol></li><li><ol start="5"><li>我如何使用Go在30分钟内建立微服务 <a href="https://www.youtube.com/watch?v=bM6N-vgPlyQ" target="_blank" rel="noopener">https://www.youtube.com/watch?v=bM6N-vgPlyQ</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-09-01">gocn_news_2019-09-01</h2><ul><li><ol><li>Go结构体中属性顺序影响结构体的大小 <a href="https://www.pengrl.com/p/16608" target="_blank" rel="noopener">https://www.pengrl.com/p/16608</a></li></ol></li><li><ol start="2"><li>从Flutter Go到Flutter Go Web <a href="https://juejin.im/post/5d6a9456e51d4561cc25f080" target="_blank" rel="noopener">https://juejin.im/post/5d6a9456e51d4561cc25f080</a></li></ol></li><li><ol start="3"><li>Go：Context和传播取消 <a href="https://studygolang.com/articles/23240" target="_blank" rel="noopener">https://studygolang.com/articles/23240</a></li></ol></li><li><ol start="4"><li>Go 笔记之如何防止goroutine泄露 <a href="https://mp.weixin.qq.com/s/O3JXr0Zm_c2tkmCtnsaQ6Q" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/O3JXr0Zm_c2tkmCtnsaQ6Q</a></li></ol></li><li><ol start="5"><li>YourNovel-Golang的开源小说搜索引擎&amp;免费小说阅读网站 <a href="http://www.yournovel.cn" target="_blank" rel="noopener">http://www.yournovel.cn</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-08-31">gocn_news_2019-08-31</h2><ul><li><ol><li>Go 1.13 Module Mirror和Checksum Database Launched功能上线 <a href="https://blog.golang.org/module-mirror-launch" target="_blank" rel="noopener">https://blog.golang.org/module-mirror-launch</a></li></ol></li><li><ol start="2"><li>使用GitHub Actions对Go项目持续集成 <a href="https://onepage.nopub.io/p/Using-GitHub-Actions-with-Go-2ca9744b531f4f21bdae9976d1ccbb58" target="_blank" rel="noopener">https://onepage.nopub.io/p/Using-GitHub-Actions-with-Go-2ca9744b531f4f21bdae9976d1ccbb58</a></li></ol></li><li><ol start="3"><li>使用Radare2和Python对Go执行文件逆向工程 <a href="https://carvesystems.com/news/reverse-engineering-go-binaries-using-radare-2-and-python/" target="_blank" rel="noopener">https://carvesystems.com/news/reverse-engineering-go-binaries-using-radare-2-and-python/</a></li></ol></li><li><ol start="4"><li>Go学习笔记之面向接口编程 <a href="https://mp.weixin.qq.com/s/Y2ZfdFUO2QMgWQY5jP0VaA" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/Y2ZfdFUO2QMgWQY5jP0VaA</a></li></ol></li><li><ol start="5"><li>嵌入式系统中Go开发 <a href="https://dev.to/jimutt/how-to-write-go-code-and-make-it-run-on-adafruit-feather-or-arduino-m3c" target="_blank" rel="noopener">https://dev.to/jimutt/how-to-write-go-code-and-make-it-run-on-adafruit-feather-or-arduino-m3c</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-08-30">gocn_news_2019-08-30</h2><ul><li><ol><li>golang goroutine and thread <a href="https://www.jianshu.com/p/588c6dceb5cf" target="_blank" rel="noopener">https://www.jianshu.com/p/588c6dceb5cf</a></li></ol></li><li><ol start="2"><li>golang微服务框架go-micro 入门笔记2.3 micro工具之消息订阅和发布 <a href="https://www.jianshu.com/p/cd2e80de45e7" target="_blank" rel="noopener">https://www.jianshu.com/p/cd2e80de45e7</a></li></ol></li><li><ol start="3"><li>Knative Serving 进阶: Knative Serving SDK 开发实践 <a href="https://www.cnblogs.com/bigdataZJ/p/go-filter.html" target="_blank" rel="noopener">https://www.cnblogs.com/bigdataZJ/p/go-filter.html</a></li></ol></li><li><ol start="4"><li>Go进阶：如何开发多彩动感的终端UI应用 <a href="https://mp.weixin.qq.com/s/DQzlfQXt4dV9PYwoVdomaw" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/DQzlfQXt4dV9PYwoVdomaw</a></li></ol></li><li><ol start="5"><li>Go语言学习——如何实现一个过滤器 <a href="https://www.cnblogs.com/bigdataZJ/p/go-filter.html" target="_blank" rel="noopener">https://www.cnblogs.com/bigdataZJ/p/go-filter.html</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-08-29">gocn_news_2019-08-29</h2><ul><li><ol><li>go语言中关于字符串使用的总结 <a href="https://www.yangyanxing.com/article/string_use_in_go.html" target="_blank" rel="noopener">https://www.yangyanxing.com/article/string_use_in_go.html</a><br>2.Go内存泄漏？不是那么简单!  <a href="https://colobu.com/2019/08/28/go-memory-leak-i-dont-think-so/" target="_blank" rel="noopener">https://colobu.com/2019/08/28/go-memory-leak-i-dont-think-so/</a></li></ol></li><li><ol start="2"><li>GCTT 出品 | Go 的调度器追踪   <a href="http://mp.weixin.qq.com/s?__biz=MzI3MjU4Njk3Ng==&amp;mid=2247484253&amp;idx=2&amp;sn=3b640a7a4b3b9f10ed7400be740fcf5a" target="_blank" rel="noopener">http://mp.weixin.qq.com/s?__biz=MzI3MjU4Njk3Ng==&amp;mid=2247484253&amp;idx=2&amp;sn=3b640a7a4b3b9f10ed7400be740fcf5a</a></li></ol></li><li><ol start="3"><li>Golang实现单机百万长连接服务 - 美图的三年优化经验 <a href="https://mp.weixin.qq.com/s/xavjsa4NzRiVRxyMhifCDg" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/xavjsa4NzRiVRxyMhifCDg</a><br>5.大规模微服务场景下的性能问题定位与优化 <a href="https://mp.weixin.qq.com/s/RmK3E_qDzHPWSPkHD5y6YA" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/RmK3E_qDzHPWSPkHD5y6YA</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-08-28">gocn_news_2019-08-28</h2><ul><li><ol><li>GopherCon 2019演讲视频 <a href="http://www.bilibili.com/video/av65679861" target="_blank" rel="noopener">http://www.bilibili.com/video/av65679861</a></li></ol></li><li><ol start="2"><li>看看Go 1.13中的Errors <a href="https://medium.com/onefootball-locker-room/a-look-at-go-1-13-errors-9f6c9f6accb6" target="_blank" rel="noopener">https://medium.com/onefootball-locker-room/a-look-at-go-1-13-errors-9f6c9f6accb6</a></li></ol></li><li><ol start="3"><li>Go build中使用-w -s 参数 <a href="https://blog.spiralscout.com/using-w-and-s-flags-in-golang-97ae59b50e26" target="_blank" rel="noopener">https://blog.spiralscout.com/using-w-and-s-flags-in-golang-97ae59b50e26</a></li></ol></li><li><ol start="4"><li>Go中的测试驱动开发 <a href="https://juejin.im/post/5d653d90f265da039d32dda9" target="_blank" rel="noopener">https://juejin.im/post/5d653d90f265da039d32dda9</a></li></ol></li><li><ol start="5"><li>Go组件学习——database/sql数据库连接池你用对了吗 <a href="https://juejin.im/post/5d624abde51d45621655352c" target="_blank" rel="noopener">https://juejin.im/post/5d624abde51d45621655352c</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-08-27">gocn_news_2019-08-27</h2><ul><li><ol><li>POPPER 的设计和优化：<a href="https://mp.weixin.qq.com/s/XUb8Gu1jjOvlXOju6g9erw" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/XUb8Gu1jjOvlXOju6g9erw</a></li></ol></li><li><ol start="2"><li>Go 编写的终端提示工具 go-prompt：<a href="https://github.com/c-bata/go-prompt" target="_blank" rel="noopener">https://github.com/c-bata/go-prompt</a></li></ol></li><li><ol start="3"><li>Go 迷你编译器 TinyGo：<a href="https://github.com/tinygo-org/drivers" target="_blank" rel="noopener">https://github.com/tinygo-org/drivers</a></li></ol></li><li><ol start="4"><li>Pinterest Kubernetes 平台搭建：<a href="https://medium.com/pinterest-engineering/building-a-kubernetes-platform-at-pinterest-fb3d9571c948" target="_blank" rel="noopener">https://medium.com/pinterest-engineering/building-a-kubernetes-platform-at-pinterest-fb3d9571c948</a></li></ol></li><li><ol start="5"><li>k8s 让我们都成了分布式系统开发者：<a href="https://devclass.com/2019/08/16/pivotal-cto-kubernetes-means-were-all-distributed-systems-programmers-now/" target="_blank" rel="noopener">https://devclass.com/2019/08/16/pivotal-cto-kubernetes-means-were-all-distributed-systems-programmers-now/</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-08-26">gocn_news_2019-08-26</h2><ul><li><ol><li>Go 编写的 Lisp 环境：<a href="https://www.ale-lang.org" target="_blank" rel="noopener">https://www.ale-lang.org</a></li></ol></li><li><ol start="2"><li>Go 静态位向量结构体：<a href="https://github.com/teivah/bitvector" target="_blank" rel="noopener">https://github.com/teivah/bitvector</a></li></ol></li><li><ol start="3"><li>Go 类型转换与检查：<a href="https://www.golangprograms.com/go-language/integer-float-string-boolean.html" target="_blank" rel="noopener">https://www.golangprograms.com/go-language/integer-float-string-boolean.html</a></li></ol></li><li><ol start="4"><li>微服务设计模式：<a href="https://docs.microsoft.com/en-us/azure/architecture/microservices/design/patterns" target="_blank" rel="noopener">https://docs.microsoft.com/en-us/azure/architecture/microservices/design/patterns</a></li></ol></li><li><ol start="5"><li>实现微服务体系结构的三种策略：<a href="https://about.gitlab.com/2019/06/17/strategies-microservices-architecture/" target="_blank" rel="noopener">https://about.gitlab.com/2019/06/17/strategies-microservices-architecture/</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-08-25">gocn_news_2019-08-25</h2><ul><li><ol><li>使用多年的go pprof检查内存泄漏的方法居然是错的? <a href="https://colobu.com/2019/08/20/use-pprof-to-compare-go-memory-usage/" target="_blank" rel="noopener">https://colobu.com/2019/08/20/use-pprof-to-compare-go-memory-usage/</a></li></ol></li><li><ol start="2"><li>我是如何组织Go项目的 <a href="https://developer20.com/how-i-organize-packages-in-go/" target="_blank" rel="noopener">https://developer20.com/how-i-organize-packages-in-go/</a></li></ol></li><li><ol start="3"><li>如何编写go package <a href="https://www.digitalocean.com/community/tutorials/how-to-write-packages-in-go" target="_blank" rel="noopener">https://www.digitalocean.com/community/tutorials/how-to-write-packages-in-go</a></li></ol></li><li><ol start="4"><li>原来Go web框架中的中间件都是这样实现的 <a href="https://colobu.com/2019/08/21/decorator-pattern-pipeline-pattern-and-go-web-middlewares/" target="_blank" rel="noopener">https://colobu.com/2019/08/21/decorator-pattern-pipeline-pattern-and-go-web-middlewares/</a></li></ol></li><li><ol start="5"><li>Go数据库迁移库 migrator  <a href="https://github.com/lopezator/migrator" target="_blank" rel="noopener">https://github.com/lopezator/migrator</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-08-24">gocn_news_2019-08-24</h2><ul><li><ol><li>猜猜看go是不是面向对象语言？能不能面向对象编程？ <a href="https://mp.weixin.qq.com/s/l-nqzYjcre2g__BrVptR9A" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/l-nqzYjcre2g__BrVptR9A</a></li></ol></li><li><ol start="2"><li>go 学习笔记之详细说一说封装是怎么回事 <a href="https://mp.weixin.qq.com/s/fXIKWsPqi6m2IEV--8lBsg" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/fXIKWsPqi6m2IEV–8lBsg</a></li></ol></li><li><ol start="3"><li>Go - http.Client源码分析 <a href="https://juejin.im/post/5d5f6c0d5188255b2131f518" target="_blank" rel="noopener">https://juejin.im/post/5d5f6c0d5188255b2131f518</a></li></ol></li><li><ol start="4"><li>Golang 隐藏技能 – 访问私有成员 <a href="https://www.jianshu.com/p/7b3638b47845" target="_blank" rel="noopener">https://www.jianshu.com/p/7b3638b47845</a></li></ol></li><li><ol start="5"><li>深入理解Go之generate <a href="https://juejin.im/post/5d5ff2f45188256dad113236" target="_blank" rel="noopener">https://juejin.im/post/5d5ff2f45188256dad113236</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-08-23">gocn_news_2019-08-23</h2><ul><li><ol><li>Go提案流程的思考:拓展讨论 <a href="https://research.swtch.com/proposals-discuss" target="_blank" rel="noopener">https://research.swtch.com/proposals-discuss</a></li></ol></li><li><ol start="2"><li>从写一个命令行工具开始学Go <a href="https://medium.com/xebia-engineering/learn-go-by-building-a-command-line-app-bedf32980c0b" target="_blank" rel="noopener">https://medium.com/xebia-engineering/learn-go-by-building-a-command-line-app-bedf32980c0b</a></li></ol></li><li><ol start="3"><li>Github Action已支持Go语言PR的检查 <a href="https://gist.github.com/ledongthuc/9f3c23018ceca9e993d7ef891b1571e8" target="_blank" rel="noopener">https://gist.github.com/ledongthuc/9f3c23018ceca9e993d7ef891b1571e8</a></li></ol></li><li><ol start="4"><li>Go 编程实战：如何组织代码、编写测试？ <a href="https://www.infoq.cn/article/4TAWp8YNYcVD4t046EGd" target="_blank" rel="noopener">https://www.infoq.cn/article/4TAWp8YNYcVD4t046EGd</a></li></ol></li><li><ol start="5"><li>使用interface来加强代码的可测试性 <a href="https://medium.com/swlh/using-go-interfaces-for-testable-code-d2e11b02dea" target="_blank" rel="noopener">https://medium.com/swlh/using-go-interfaces-for-testable-code-d2e11b02dea</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-08-22">gocn_news_2019-08-22</h2><ul><li><ol><li>Go 1.13rc版发布 <a href="https://golang.org/dl/#go1.13rc1" target="_blank" rel="noopener">https://golang.org/dl/#go1.13rc1</a></li></ol></li><li><ol start="2"><li>从Python到Go的简单面部检测实用程序 <a href="https://blog.owulveryck.info/2019/08/16/a-simple-face-detection-utility-from-python-to-go.html" target="_blank" rel="noopener">https://blog.owulveryck.info/2019/08/16/a-simple-face-detection-utility-from-python-to-go.html</a></li></ol></li><li><ol start="3"><li>迁移到Go Modules <a href="https://blog.golang.org/migrating-to-go-modules" target="_blank" rel="noopener">https://blog.golang.org/migrating-to-go-modules</a></li></ol></li><li><ol start="4"><li>用于构建与redis协议兼容的TCP服务器/服务的高性能框架 <a href="https://github.com/bsm/redeo" target="_blank" rel="noopener">https://github.com/bsm/redeo</a></li></ol></li><li><ol start="5"><li>在Go中编写Web服务的入门代码 <a href="https://github.com/ardanlabs/service" target="_blank" rel="noopener">https://github.com/ardanlabs/service</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-08-21">gocn_news_2019-08-21</h2><ul><li><ol><li>Go 编译器内联函数 <a href="https://dave.cheney.net/2019/08/20/go-compiler-intrinsics" target="_blank" rel="noopener">https://dave.cheney.net/2019/08/20/go-compiler-intrinsics</a></li></ol></li><li><ol start="2"><li>Goroutine 泄漏 — 被遗弃的接收者 <a href="https://www.ardanlabs.com/blog/2018/12/goroutine-leaks-the-abandoned-receivers.html" target="_blank" rel="noopener">https://www.ardanlabs.com/blog/2018/12/goroutine-leaks-the-abandoned-receivers.html</a></li></ol></li><li><ol start="3"><li>基于go pprof 内存分析及优化的实践 <a href="https://juejin.im/post/5d5be347f265da03b94ff66b" target="_blank" rel="noopener">https://juejin.im/post/5d5be347f265da03b94ff66b</a></li></ol></li><li><ol start="4"><li>Golang中使用断路器 <a href="http://yangxikun.com/golang/2019/08/10/golang-circuit.html" target="_blank" rel="noopener">http://yangxikun.com/golang/2019/08/10/golang-circuit.html</a></li></ol></li><li><ol start="5"><li>Golang如何才能写出值得阅读的代码 <a href="https://mp.weixin.qq.com/s/R1T33rjW6ZUsYomiSvZ-ww" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/R1T33rjW6ZUsYomiSvZ-ww</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-08-20">gocn_news_2019-08-20</h2><ul><li><ol><li>用 GODEBUG 看调度跟踪 <a href="https://github.com/EDDYCJY/blog/blob/master/tools/godebug-sched.md" target="_blank" rel="noopener">https://github.com/EDDYCJY/blog/blob/master/tools/godebug-sched.md</a></li></ol></li><li><ol start="2"><li>为 Docker 和 CI 加速 Go Modules <a href="https://evilmartians.com/chronicles/speeding-up-go-modules-for-docker-and-ci" target="_blank" rel="noopener">https://evilmartians.com/chronicles/speeding-up-go-modules-for-docker-and-ci</a></li></ol></li><li><ol start="3"><li>为 iOS 编写 Go 程序 <a href="https://github.com/mtojek/go-build-for-ios" target="_blank" rel="noopener">https://github.com/mtojek/go-build-for-ios</a></li></ol></li><li><ol start="4"><li>Tigo 一款 Go 开发的 Web 应用框架 <a href="https://github.com/karldoenitz/Tigo" target="_blank" rel="noopener">https://github.com/karldoenitz/Tigo</a></li></ol></li><li><ol start="5"><li>为 Go 程序自动支持 HTTPS <a href="https://github.com/mholt/certmagic" target="_blank" rel="noopener">https://github.com/mholt/certmagic</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-08-19">gocn_news_2019-08-19</h2><ul><li><ol><li>zap库优化方案解析 <a href="https://medium.com/@blanchon.vincent/go-how-zap-package-is-optimized-dbf72ef48f2d" target="_blank" rel="noopener">https://medium.com/@blanchon.vincent/go-how-zap-package-is-optimized-dbf72ef48f2d</a></li></ol></li><li><ol start="2"><li>Go中重现不稳定重现测试 <a href="https://www.influxdata.com/blog/reproducing-a-flaky-test-in-go/" target="_blank" rel="noopener">https://www.influxdata.com/blog/reproducing-a-flaky-test-in-go/</a></li></ol></li><li><ol start="3"><li>现代垃圾回收：Go GC策略 <a href="https://blog.plan99.net/modern-garbage-collection-911ef4f8bd8e" target="_blank" rel="noopener">https://blog.plan99.net/modern-garbage-collection-911ef4f8bd8e</a></li></ol></li><li><ol start="4"><li>为什么说Go非常适合DevOps <a href="https://www.freecodecamp.org/news/using-go-for-devops/" target="_blank" rel="noopener">https://www.freecodecamp.org/news/using-go-for-devops/</a></li></ol></li><li><ol start="5"><li>trivy: 容器安全性检测工具 <a href="https://github.com/knqyf263/trivy" target="_blank" rel="noopener">https://github.com/knqyf263/trivy</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-08-18">gocn_news_2019-08-18</h2><ul><li><ol><li>Golang译文之竞态检测器race <a href="https://juejin.im/post/5d5851aee51d4561c6784079" target="_blank" rel="noopener">https://juejin.im/post/5d5851aee51d4561c6784079</a></li></ol></li><li><ol start="2"><li>Golang踩坑分析 <a href="https://segmentfault.com/a/1190000020103403" target="_blank" rel="noopener">https://segmentfault.com/a/1190000020103403</a></li></ol></li><li><ol start="3"><li>Go调度器介绍和容易忽视的问题 <a href="https://www.cnblogs.com/CodeWithTxT/p/11370215.html" target="_blank" rel="noopener">https://www.cnblogs.com/CodeWithTxT/p/11370215.html</a></li></ol></li><li><ol start="4"><li>仔细研究Go类型系统 <a href="https://mp.weixin.qq.com/s/2Q6dN5mvW4y0drkZ8ptCJQ" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/2Q6dN5mvW4y0drkZ8ptCJQ</a></li></ol></li><li><ol start="5"><li>零基础学Flink：状态与容错 <a href="https://toutiao.io/k/xcbtmgt" target="_blank" rel="noopener">https://toutiao.io/k/xcbtmgt</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-08-17">gocn_news_2019-08-17</h2><ul><li><ol><li>Go 1.12.9 发布 <a href="https://groups.google.com/forum/#!msg/golang-announce/oeMaeUnkvVE/a49yvTLqAAAJ" target="_blank" rel="noopener">https://groups.google.com/forum/#!msg/golang-announce/oeMaeUnkvVE/a49yvTLqAAAJ</a></li></ol></li><li><ol start="2"><li>zap日志包是如何高性能优化 <a href="https://medium.com/@blanchon.vincent/go-how-zap-package-is-optimized-dbf72ef48f2d" target="_blank" rel="noopener">https://medium.com/@blanchon.vincent/go-how-zap-package-is-optimized-dbf72ef48f2d</a></li></ol></li><li><ol start="3"><li>Go终极学习指导手册 <a href="https://github.com/hoanhan101/ultimate-go" target="_blank" rel="noopener">https://github.com/hoanhan101/ultimate-go</a></li></ol></li><li><ol start="4"><li>开源的Go解释器项目Yaegi  <a href="https://blog.containo.us/announcing-yaegi-263a1e2d070a" target="_blank" rel="noopener">https://blog.containo.us/announcing-yaegi-263a1e2d070a</a></li></ol></li><li><ol start="5"><li>Go测试题考察 <a href="https://golangbot.com/june-2019-quiz-results/" target="_blank" rel="noopener">https://golangbot.com/june-2019-quiz-results/</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-08-16">gocn_news_2019-08-16</h2><ul><li><ol><li>Go 资源大全中文版 <a href="https://mlog.club/topic/239" target="_blank" rel="noopener">https://mlog.club/topic/239</a></li></ol></li><li><ol start="2"><li>Go提案流程:大变化 <a href="https://research.swtch.com/proposals-large" target="_blank" rel="noopener">https://research.swtch.com/proposals-large</a></li></ol></li><li><ol start="3"><li>goroutine并发实践(协程池+超时+错误快返回) <a href="https://juejin.im/post/5d54fbeef265da03af19cc5c" target="_blank" rel="noopener">https://juejin.im/post/5d54fbeef265da03af19cc5c</a></li></ol></li><li><ol start="4"><li>Go Http包解析：为什么需要response.Body.Close() <a href="https://segmentfault.com/a/1190000020086816" target="_blank" rel="noopener">https://segmentfault.com/a/1190000020086816</a></li></ol></li><li><ol start="5"><li>深入理解Go-垃圾回收机制 <a href="https://segmentfault.com/a/1190000020086769" target="_blank" rel="noopener">https://segmentfault.com/a/1190000020086769</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-08-15">gocn_news_2019-08-15</h2><ul><li><ol><li>Go 语言错误及异常处理篇（三）：panic 和 recover  <a href="https://laravelacademy.org/post/19878.html" target="_blank" rel="noopener">https://laravelacademy.org/post/19878.html</a></li></ol></li><li><ol start="2"><li>[Go 教程系列笔记]结构而不是类-Go中的OOP  <a href="https://segmentfault.com/a/1190000020071595" target="_blank" rel="noopener">https://segmentfault.com/a/1190000020071595</a></li></ol></li><li><ol start="3"><li>go语言中的new与make <a href="https://www.yangyanxing.com/article/new_make_in_go.html" target="_blank" rel="noopener">https://www.yangyanxing.com/article/new_make_in_go.html</a></li></ol></li><li><ol start="4"><li>golang timeoutHandler解析及kubernetes中的变种 <a href="http://www.cnblogs.com/gaorong/p/11336834.html" target="_blank" rel="noopener">http://www.cnblogs.com/gaorong/p/11336834.html</a></li></ol></li><li><ol start="5"><li>Dark是如何在50毫秒内完成代码部署的？ <a href="https://mp.weixin.qq.com/s/Z8JWf5jvy5_LIZIP6V6k0w" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/Z8JWf5jvy5_LIZIP6V6k0w</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-08-14">gocn_news_2019-08-14</h2><ul><li><ol><li>1.12.8和1.11.13版本发布 <a href="https://groups.google.com/forum/#!topic/golang-nuts/fCQWxqxP8aA" target="_blank" rel="noopener">https://groups.google.com/forum/#!topic/golang-nuts/fCQWxqxP8aA</a></li></ol></li><li><ol start="2"><li>ECC加密解密入门  <a href="https://medium.com/asecuritysite-when-bob-met-alice/the-wizardry-of-elliptic-curve-cryptography-70fe4396aec2" target="_blank" rel="noopener">https://medium.com/asecuritysite-when-bob-met-alice/the-wizardry-of-elliptic-curve-cryptography-70fe4396aec2</a></li></ol></li><li><ol start="3"><li>借Go语言database/sql包谈数据库驱动和连接池设计 <a href="https://mp.weixin.qq.com/s/vSZpF55u4O343B4e0_TOvw" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/vSZpF55u4O343B4e0_TOvw</a></li></ol></li><li><ol start="4"><li>记一次golang程序CPU高的排查过程 <a href="https://juejin.im/post/5d5189446fb9a06b1a567e93" target="_blank" rel="noopener">https://juejin.im/post/5d5189446fb9a06b1a567e93</a></li></ol></li><li><ol start="5"><li>golang将数据库转换为gorm结构 <a href="https://mlog.club/topic/236" target="_blank" rel="noopener">https://mlog.club/topic/236</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-08-13">gocn_news_2019-08-13</h2><ul><li><ol><li>Go GC 算法真的比 Java 领先吗：<a href="https://mp.weixin.qq.com/s/eDd212DhjIRGpytBkgfzAg" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/eDd212DhjIRGpytBkgfzAg</a></li></ol></li><li><ol start="2"><li>Go 文件解压缩：<a href="https://medium.com/learning-the-go-programming-language/working-with-compressed-tar-files-in-go-e6fe9ce4f51d" target="_blank" rel="noopener">https://medium.com/learning-the-go-programming-language/working-with-compressed-tar-files-in-go-e6fe9ce4f51d</a></li></ol></li><li><ol start="3"><li>Go 开发者路线图：<a href="https://github.com/Alikhll/golang-developer-roadmap/blob/master/i18n/ReadMe-zh-CN.md" target="_blank" rel="noopener">https://github.com/Alikhll/golang-developer-roadmap/blob/master/i18n/ReadMe-zh-CN.md</a></li></ol></li><li><ol start="4"><li>云原生生态周报：<a href="https://mp.weixin.qq.com/s/fQzFwcd-rduqLWceJdrxyw" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/fQzFwcd-rduqLWceJdrxyw</a></li></ol></li><li><ol start="5"><li>DevOps 在唯品会的实践：<a href="https://mp.weixin.qq.com/s/OsVGhyUZfte1gRFLFhOd2Q" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/OsVGhyUZfte1gRFLFhOd2Q</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-08-12">gocn_news_2019-08-12</h2><ul><li><ol><li>基于hprose-golang创建RPC微服务 <a href="https://www.cnblogs.com/52fhy/p/11185895.html" target="_blank" rel="noopener">https://www.cnblogs.com/52fhy/p/11185895.html</a></li></ol></li><li><ol start="2"><li>Go 问答汇总篇 二 <a href="https://juejin.im/post/5d4f05565188250e42582a7d" target="_blank" rel="noopener">https://juejin.im/post/5d4f05565188250e42582a7d</a></li></ol></li><li><ol start="3"><li>Goroutine和Channel的的使用和一些坑以及案例分析 <a href="https://studygolang.com/articles/22681" target="_blank" rel="noopener">https://studygolang.com/articles/22681</a></li></ol></li><li><ol start="4"><li>Golang内存分配 <a href="https://mp.weixin.qq.com/s/izjdImIZGvfGaSO-N_aCUA" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/izjdImIZGvfGaSO-N_aCUA</a></li></ol></li><li><ol start="5"><li>一个监控 git 仓库更新，自动合并的工具 <a href="https://github.com/muesli/gitomatic" target="_blank" rel="noopener">https://github.com/muesli/gitomatic</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-08-11">gocn_news_2019-08-11</h2><ul><li><ol><li>Go 监视模式 <a href="https://medium.com/@blanchon.vincent/go-monitor-pattern-9decd26fb28" target="_blank" rel="noopener">https://medium.com/@blanchon.vincent/go-monitor-pattern-9decd26fb28</a></li></ol></li><li><ol start="2"><li>在 Go 中 Mock gRPC <a href="https://rogchap.com/2019/06/25/mocking-grpc-in-go/" target="_blank" rel="noopener">https://rogchap.com/2019/06/25/mocking-grpc-in-go/</a></li></ol></li><li><ol start="3"><li>优化过的 Go 压缩库 <a href="https://github.com/klauspost/compress" target="_blank" rel="noopener">https://github.com/klauspost/compress</a></li></ol></li><li><ol start="4"><li>理解分布式系统的可靠性 <a href="https://blog.empathybox.com/post/19574936361/getting-real-about-distributed-system-reliability" target="_blank" rel="noopener">https://blog.empathybox.com/post/19574936361/getting-real-about-distributed-system-reliability</a></li></ol></li><li><ol start="5"><li>异步、编排、分布式系统的容错性  <a href="https://medium.com/@mail_50938/fault-tolerance-in-asynchronous-choreographed-distributed-system-36b1cae037d1" target="_blank" rel="noopener">https://medium.com/@mail_50938/fault-tolerance-in-asynchronous-choreographed-distributed-system-36b1cae037d1</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-08-10">gocn_news_2019-08-10</h2><ul><li><ol><li>SOLID Go Design <a href="https://dave.cheney.net/2016/08/20/solid-go-design" target="_blank" rel="noopener">https://dave.cheney.net/2016/08/20/solid-go-design</a></li></ol></li><li><ol start="2"><li>Go-Spring : Another Go Style！ <a href="https://mp.weixin.qq.com/s/xW6-pkty0aygQN87i6rX_w" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/xW6-pkty0aygQN87i6rX_w</a></li></ol></li><li><ol start="3"><li>使用golang每分钟处理百万请求 <a href="http://marcio.io/2015/07/handling-1-million-requests-per-minute-with-golang" target="_blank" rel="noopener">http://marcio.io/2015/07/handling-1-million-requests-per-minute-with-golang</a></li></ol></li><li><ol start="4"><li>使用WebRTC流式传输远程屏幕 <a href="https://viscarra.dev/post/webrtc-remote-screen" target="_blank" rel="noopener">https://viscarra.dev/post/webrtc-remote-screen</a></li></ol></li><li><ol start="5"><li>简单易用灵活可配置的p2p框架 <a href="https://github.com/v-braun/go2p" target="_blank" rel="noopener">https://github.com/v-braun/go2p</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-08-09">gocn_news_2019-08-09</h2><ul><li><ol><li>Go提案处理流程：清晰&amp;透明  <a href="https://research.swtch.com/proposals-clarity" target="_blank" rel="noopener">https://research.swtch.com/proposals-clarity</a></li></ol></li><li><ol start="2"><li>来自百度的7层负载均衡器BFE <a href="https://github.com/baidu/bfe" target="_blank" rel="noopener">https://github.com/baidu/bfe</a><br>3.[译]TCP Socket 是如何工作的? <a href="https://colobu.com/2019/07/27/How-TCP-Sockets-Work/" target="_blank" rel="noopener">https://colobu.com/2019/07/27/How-TCP-Sockets-Work/</a></li></ol></li><li><ol start="3"><li>Dgraph中的Datetime索引 <a href="https://blog.dgraph.io/post/datetime-indexes-dgraph/" target="_blank" rel="noopener">https://blog.dgraph.io/post/datetime-indexes-dgraph/</a></li></ol></li><li><ol start="4"><li>连接跟踪模块导致的网络不可用 <a href="https://colobu.com/2019/07/30/network-issue-because-of-nf-conntrack/" target="_blank" rel="noopener">https://colobu.com/2019/07/30/network-issue-because-of-nf-conntrack/</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-08-08">gocn_news_2019-08-08</h2><ul><li><ol><li>通过在300行Golang编写简单的RPC框架来解释RPC <a href="https://github.com/ankur-anand/simple-go-rpc" target="_blank" rel="noopener">https://github.com/ankur-anand/simple-go-rpc</a></li></ol></li><li><ol start="2"><li>Golang的作用于健康检查的库go-sundheit <a href="https://medium.com/appsflyer/health-checks-like-a-pro-3fa362942883" target="_blank" rel="noopener">https://medium.com/appsflyer/health-checks-like-a-pro-3fa362942883</a></li></ol></li><li><ol start="3"><li>如何使用go mod测试本地改动 <a href="https://medium.com/@teivah/how-to-test-a-local-branch-with-go-mod-54df087fc9cc" target="_blank" rel="noopener">https://medium.com/@teivah/how-to-test-a-local-branch-with-go-mod-54df087fc9cc</a></li></ol></li><li><ol start="4"><li>在Go中检查字符的大小写，包括0和1 <a href="https://ervinbarta.com/2019/08/06/upcase-in-go-the-long-way-around/" target="_blank" rel="noopener">https://ervinbarta.com/2019/08/06/upcase-in-go-the-long-way-around/</a></li></ol></li><li><ol start="5"><li>vgo教程 <a href="https://research.swtch.com/vgo-tour" target="_blank" rel="noopener">https://research.swtch.com/vgo-tour</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-08-07">gocn_news_2019-08-07</h2><ul><li><ol><li>通过在300行Golang编写简单的RPC框架来解释RPC <a href="https://github.com/ankur-anand/simple-go-rpc" target="_blank" rel="noopener">https://github.com/ankur-anand/simple-go-rpc</a></li></ol></li><li><ol start="2"><li>Golang的作用于健康检查的库go-sundheit <a href="https://medium.com/appsflyer/health-checks-like-a-pro-3fa362942883" target="_blank" rel="noopener">https://medium.com/appsflyer/health-checks-like-a-pro-3fa362942883</a></li></ol></li><li><ol start="3"><li>如何使用go mod测试本地改动 <a href="https://medium.com/@teivah/how-to-test-a-local-branch-with-go-mod-54df087fc9cc" target="_blank" rel="noopener">https://medium.com/@teivah/how-to-test-a-local-branch-with-go-mod-54df087fc9cc</a></li></ol></li><li><ol start="4"><li>在Go中检查字符的大小写，包括0和1 <a href="https://ervinbarta.com/2019/08/06/upcase-in-go-the-long-way-around/" target="_blank" rel="noopener">https://ervinbarta.com/2019/08/06/upcase-in-go-the-long-way-around/</a></li></ol></li><li><ol start="5"><li>vgo教程 <a href="https://research.swtch.com/vgo-tour" target="_blank" rel="noopener">https://research.swtch.com/vgo-tour</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-08-06">gocn_news_2019-08-06</h2><ul><li><ol><li>请问sync.Pool有什么缺点？<a href="https://mp.weixin.qq.com/s/2ZC1BWTylIZMmuQ3HwrnUg" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/2ZC1BWTylIZMmuQ3HwrnUg</a></li></ol></li><li><ol start="2"><li>关于 Go Proposal 流程的想法 <a href="https://research.swtch.com/proposals-intro" target="_blank" rel="noopener">https://research.swtch.com/proposals-intro</a></li></ol></li><li><ol start="3"><li>Vuejs + Golang <a href="https://medium.com/@adeshg7/vuejs-golang-a-rare-combination-53538b6fb918" target="_blank" rel="noopener">https://medium.com/@adeshg7/vuejs-golang-a-rare-combination-53538b6fb918</a></li></ol></li><li><ol start="4"><li>详解Go语言的内存模型及堆的分配管理 <a href="https://juejin.im/post/5d47b1f16fb9a06aec2623ff" target="_blank" rel="noopener">https://juejin.im/post/5d47b1f16fb9a06aec2623ff</a></li></ol></li><li><ol start="5"><li>GopherCon 观后亮点 <a href="https://blog.process-one.net/gophercon-2019-highlights/" target="_blank" rel="noopener">https://blog.process-one.net/gophercon-2019-highlights/</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-08-05">gocn_news_2019-08-05</h2><ul><li><ol><li>Go Modules包管理务实手册 <a href="https://medium.com/@adiach3nko/package-management-with-go-modules-the-pragmatic-guide-c831b4eaaf31" target="_blank" rel="noopener">https://medium.com/@adiach3nko/package-management-with-go-modules-the-pragmatic-guide-c831b4eaaf31</a></li></ol></li><li><ol start="2"><li>Golang CI/CD 5条最佳实践 <a href="https://jfrog.com/blog/5-best-practices-for-golang-ci-cd/" target="_blank" rel="noopener">https://jfrog.com/blog/5-best-practices-for-golang-ci-cd/</a></li></ol></li><li><ol start="3"><li>利用git hooks优化你的Golang开发流程 <a href="https://tutorialedge.net/golang/improving-go-workflow-with-git-hooks/" target="_blank" rel="noopener">https://tutorialedge.net/golang/improving-go-workflow-with-git-hooks/</a></li></ol></li><li><ol start="4"><li>Go：为何带来泛型 <a href="https://github.com/llgoer/go-generics" target="_blank" rel="noopener">https://github.com/llgoer/go-generics</a></li></ol></li><li><ol start="5"><li>为什么你应该使用Go Module代理 <a href="https://arslan.io/2019/08/02/why-you-should-use-a-go-module-proxy/" target="_blank" rel="noopener">https://arslan.io/2019/08/02/why-you-should-use-a-go-module-proxy/</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-08-04">gocn_news_2019-08-04</h2><ul><li><ol><li>Golang文件上传下载 <a href="https://www.jianshu.com/p/fc5cf0a0bff5" target="_blank" rel="noopener">https://www.jianshu.com/p/fc5cf0a0bff5</a></li></ol></li><li><ol start="2"><li>Golang的REST API的单元测试 <a href="https://www.jianshu.com/p/1a0ce8ce062a" target="_blank" rel="noopener">https://www.jianshu.com/p/1a0ce8ce062a</a></li></ol></li><li><ol start="3"><li>Golang Context包详解 <a href="https://www.cnblogs.com/guangze/p/11296822.html" target="_blank" rel="noopener">https://www.cnblogs.com/guangze/p/11296822.html</a></li></ol></li><li><ol start="4"><li>fasthttp概述与Hello World <a href="https://studygolang.com/articles/22451" target="_blank" rel="noopener">https://studygolang.com/articles/22451</a></li></ol></li><li><ol start="5"><li>架构师知识图谱 <a href="https://github.com/toutiaoio/awesome-architecture" target="_blank" rel="noopener">https://github.com/toutiaoio/awesome-architecture</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-08-03">gocn_news_2019-08-03</h2><ul><li><ol><li>Go2试验、简化探索之路 <a href="https://blog.golang.org/experiment" target="_blank" rel="noopener">https://blog.golang.org/experiment</a></li></ol></li><li><ol start="2"><li>Go并发设计模式之 Half-Sync/Half-Async <a href="https://colobu.com/2019/07/21/concurrency-design-patterns-half-sync-half-async/" target="_blank" rel="noopener">https://colobu.com/2019/07/21/concurrency-design-patterns-half-sync-half-async/</a></li></ol></li><li><ol start="3"><li>通过profiling定位golang性能问题-内存篇 <a href="https://mp.weixin.qq.com/s/B8lJI_2BfMcz-Rd1bNjkyg" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/B8lJI_2BfMcz-Rd1bNjkyg</a></li></ol></li><li><ol start="4"><li>Go cond 源码学习 <a href="https://segmentfault.com/a/1190000019957459" target="_blank" rel="noopener">https://segmentfault.com/a/1190000019957459</a></li></ol></li><li><ol start="5"><li>Go安全编码实践指南 <a href="https://github.com/OWASP/Go-SCP" target="_blank" rel="noopener">https://github.com/OWASP/Go-SCP</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-08-02">gocn_news_2019-08-02</h2><ul><li><ol><li>Golang为什么需要泛型 <a href="https://blog.golang.org/why-generics" target="_blank" rel="noopener">https://blog.golang.org/why-generics</a></li></ol></li><li><ol start="2"><li>Go实现ORM及构建查询 <a href="https://mp.weixin.qq.com/s/XbtSamp7I6HwvRO_OweqJg" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/XbtSamp7I6HwvRO_OweqJg</a></li></ol></li><li><ol start="3"><li>链表-删除排序链表中的重复元素，你能想到几种解法？<a href="https://mp.weixin.qq.com/s/K4nQOvv0LKkgny-nIk6RNQ" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/K4nQOvv0LKkgny-nIk6RNQ</a></li></ol></li><li><ol start="4"><li>Golang：数据库ORM框架GoMybatis详解 <a href="https://studygolang.com/topics/9755" target="_blank" rel="noopener">https://studygolang.com/topics/9755</a></li></ol></li><li><ol start="5"><li>一文理解微服务高可用的常用手段 <a href="https://mp.weixin.qq.com/s/oky8g1Nisdr2T4kYG-DFhg" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/oky8g1Nisdr2T4kYG-DFhg</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-08-01">gocn_news_2019-08-01</h2><ul><li><ol><li>Go 语言面向对象编程系列教程（八） —— 接口篇：接口和类型查询及转化  <a href="https://laravelacademy.org/post/19858.html" target="_blank" rel="noopener">https://laravelacademy.org/post/19858.html</a><br>2.使用Elasticsearch(附Golang代码) <a href="https://strconv.com/posts/use-elastic/" target="_blank" rel="noopener">https://strconv.com/posts/use-elastic/</a></li></ol></li><li><ol start="2"><li>给 Golang 日志打印加点糖——sugar <a href="https://jingwei.link/2019/06/10/golang-logger-sugar.html" target="_blank" rel="noopener">https://jingwei.link/2019/06/10/golang-logger-sugar.html</a></li></ol></li><li><ol start="3"><li>Golang 是否有必要内存对齐？ <a href="https://ms2008.github.io/2019/08/01/golang-memory-alignment/" target="_blank" rel="noopener">https://ms2008.github.io/2019/08/01/golang-memory-alignment/</a></li></ol></li><li><ol start="4"><li>基于Istio的灰度平台实践 <a href="https://mp.weixin.qq.com/s/uDxC9QIj2fd783McHHWcLA" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/uDxC9QIj2fd783McHHWcLA</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-07-31">gocn_news_2019-07-31</h2><ul><li><ol><li>探索Go中字节解析 API <a href="https://mp.weixin.qq.com/s/g_-jIwCC2dAXmr3Ai3x4dA" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/g_-jIwCC2dAXmr3Ai3x4dA</a></li></ol></li><li><ol start="2"><li>fasthttp中运用哪些Go优化技巧？ <a href="https://mp.weixin.qq.com/s/7zNw3nEWozArJLFVmTjn0A" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/7zNw3nEWozArJLFVmTjn0A</a></li></ol></li><li><ol start="3"><li>Go HTTP api接口实现方法 <a href="https://medium.com/@govinda.attal/an-approach-to-simplify-http-api-implementation-in-go-c742923351af" target="_blank" rel="noopener">https://medium.com/@govinda.attal/an-approach-to-simplify-http-api-implementation-in-go-c742923351af</a></li></ol></li><li><ol start="4"><li>Go GraphQL教程 <a href="https://juejin.im/post/5d4051985188255d803f8234" target="_blank" rel="noopener">https://juejin.im/post/5d4051985188255d803f8234</a></li></ol></li><li><ol start="5"><li>Go gRPC Hello World <a href="https://juejin.im/post/5d3fa19c5188255d4d368ed1" target="_blank" rel="noopener">https://juejin.im/post/5d3fa19c5188255d4d368ed1</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-07-30">gocn_news_2019-07-30</h2><ul><li><ol><li>Go vs Rust：<a href="https://www.bizety.com/2019/04/03/summary-of-rust-vs-go/" target="_blank" rel="noopener">https://www.bizety.com/2019/04/03/summary-of-rust-vs-go/</a></li></ol></li><li><ol start="2"><li>Go 实现哈希算法：<a href="https://hub.packtpub.com/implementing-hashing-algorithms-in-golang-tutorial/" target="_blank" rel="noopener">https://hub.packtpub.com/implementing-hashing-algorithms-in-golang-tutorial/</a></li></ol></li><li><ol start="3"><li>Go 和 Rust 等语言的泛型和元编程的模型: <a href="http://thume.ca/2019/07/14/a-tour-of-metaprogramming-models-for-generics/" target="_blank" rel="noopener">http://thume.ca/2019/07/14/a-tour-of-metaprogramming-models-for-generics/</a></li></ol></li><li><ol start="4"><li>不可忽视云原生计算的三个原因：<a href="https://thenewstack.io/3-reasons-why-you-cant-afford-to-ignore-cloud-native-computing/" target="_blank" rel="noopener">https://thenewstack.io/3-reasons-why-you-cant-afford-to-ignore-cloud-native-computing/</a></li></ol></li><li><ol start="5"><li>混合云企业部署模式：<a href="https://medium.com/solutions-architecture-patterns/multi-cloud-enterprise-deployment-pattern-19571604e64b" target="_blank" rel="noopener">https://medium.com/solutions-architecture-patterns/multi-cloud-enterprise-deployment-pattern-19571604e64b</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-07-29">gocn_news_2019-07-29</h2><ul><li><ol><li>为什么值得学习 Golang <a href="https://medium.com/@leoneperdigao/why-it-is-worth-learning-golang-3a686e4448cf" target="_blank" rel="noopener">https://medium.com/@leoneperdigao/why-it-is-worth-learning-golang-3a686e4448cf</a></li></ol></li><li><ol start="2"><li>永远不要使用 (M**e) 作为密码 <a href="https://medium.com/@billatnapier/never-use-m-e-for-ciphers-a33a9bfb648e" target="_blank" rel="noopener">https://medium.com/@billatnapier/never-use-m-e-for-ciphers-a33a9bfb648e</a></li></ol></li><li><ol start="3"><li>Golang依赖注入框架wire全攻略 <a href="https://juejin.im/post/5ce574696fb9a07ef90c7121" target="_blank" rel="noopener">https://juejin.im/post/5ce574696fb9a07ef90c7121</a></li></ol></li><li><ol start="4"><li>基于gRPC+consul实现服务发现及RPC <a href="https://github.com/GrassInWind2019/gRPCwithConsul" target="_blank" rel="noopener">https://github.com/GrassInWind2019/gRPCwithConsul</a></li></ol></li><li><ol start="5"><li>一个功能齐全，配置简单的 Go 版本 SFTP 服务器 <a href="https://github.com/drakkan/sftpgo" target="_blank" rel="noopener">https://github.com/drakkan/sftpgo</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-07-28">gocn_news_2019-07-28</h2><ul><li><ol><li>Go2新特性建议之Contracts <a href="https://go.googlesource.com/proposal/+/4a54a00950b56dd0096482d0edae46969d7432a6/design/go2draft-contracts.md" target="_blank" rel="noopener">https://go.googlesource.com/proposal/+/4a54a00950b56dd0096482d0edae46969d7432a6/design/go2draft-contracts.md</a></li></ol></li><li><ol start="2"><li>我是如何在Go中嵌入资源文件 <a href="https://levelup.gitconnected.com/how-i-embedded-resources-in-go-514b72f6ef0a" target="_blank" rel="noopener">https://levelup.gitconnected.com/how-i-embedded-resources-in-go-514b72f6ef0a</a></li></ol></li><li><ol start="3"><li>GopherCon2019 - Go的泛型 <a href="https://about.sourcegraph.com/go/gophercon-2019-generics-in-go" target="_blank" rel="noopener">https://about.sourcegraph.com/go/gophercon-2019-generics-in-go</a></li></ol></li><li><ol start="4"><li>深挖Go Map的迭代器,range返回真的是随机的吗? <a href="https://medium.com/@i0exception/map-iteration-in-go-275abb76f721" target="_blank" rel="noopener">https://medium.com/@i0exception/map-iteration-in-go-275abb76f721</a></li></ol></li><li><ol start="5"><li>goptuna:用于黑盒函数的贝叶斯优化框架 <a href="https://github.com/c-bata/goptuna" target="_blank" rel="noopener">https://github.com/c-bata/goptuna</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-07-27">gocn_news_2019-07-27</h2><ul><li><ol><li>在内存中存储敏感信息的安全的软件包 <a href="https://github.com/awnumar/memguard" target="_blank" rel="noopener">https://github.com/awnumar/memguard</a></li></ol></li><li><ol start="2"><li>Pigo人脸检测库的全面概述 <a href="http://esimov.com/2019/07/pigo-face-detection-library" target="_blank" rel="noopener">http://esimov.com/2019/07/pigo-face-detection-library</a></li></ol></li><li><ol start="3"><li>casbin访问控制框架在GO中的基本使用方法 <a href="https://segmentfault.com/a/1190000019890975" target="_blank" rel="noopener">https://segmentfault.com/a/1190000019890975</a></li></ol></li><li><ol start="4"><li>8年后我如何编写HTTP Web服务 <a href="https://www.youtube.com/watch?v=8TLiGHJTlig" target="_blank" rel="noopener">https://www.youtube.com/watch?v=8TLiGHJTlig</a></li></ol></li><li><ol start="5"><li>Go 编程：tcpserver &amp; graceful shutdown <a href="https://www.gitdig.com/go-tcpserver-graceful-shutdown/" target="_blank" rel="noopener">https://www.gitdig.com/go-tcpserver-graceful-shutdown/</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-07-26">gocn_news_2019-07-26</h2><ul><li><ol><li>GopherCon2019 - 大步迈向Go2 <a href="https://about.sourcegraph.com/go/gophercon-2019-on-the-road-to-go-2" target="_blank" rel="noopener">https://about.sourcegraph.com/go/gophercon-2019-on-the-road-to-go-2</a></li></ol></li><li><ol start="2"><li>GopherCon2019 - Go在Uber的成长故事 <a href="https://about.sourcegraph.com/go/gophercon-2019-how-uber-go-es" target="_blank" rel="noopener">https://about.sourcegraph.com/go/gophercon-2019-how-uber-go-es</a></li></ol></li><li><ol start="3"><li>GopherCon2019 - 简单,轻便,高效的Go图形接口 <a href="https://about.sourcegraph.com/go/gophercon-2019-simple-portable-efficient-graphical-interfaces-in-go" target="_blank" rel="noopener">https://about.sourcegraph.com/go/gophercon-2019-simple-portable-efficient-graphical-interfaces-in-go</a></li></ol></li><li><ol start="4"><li>GopherCon2019 - 设计一个大伙喜欢的命令行工具 <a href="https://about.sourcegraph.com/go/gophercon-2019-design-command-line-tools-people-love" target="_blank" rel="noopener">https://about.sourcegraph.com/go/gophercon-2019-design-command-line-tools-people-love</a></li></ol></li><li><ol start="5"><li>GopherCon2019 - 着手开始WebAssembly <a href="https://about.sourcegraph.com/go/gophercon-2019-get-going-with-webassembly" target="_blank" rel="noopener">https://about.sourcegraph.com/go/gophercon-2019-get-going-with-webassembly</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-07-25">gocn_news_2019-07-25</h2><ul><li><ol><li>Go 语言十年而立，Go2 蓄势待发 <a href="https://mp.weixin.qq.com/s/wE_z7MxDJjIVDN16578tDw" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/wE_z7MxDJjIVDN16578tDw</a></li></ol></li><li><ol start="2"><li>Go Context 使用和源码分析 <a href="https://segmentfault.com/a/1190000019862527" target="_blank" rel="noopener">https://segmentfault.com/a/1190000019862527</a></li></ol></li><li><ol start="3"><li>[译] Go 代码诊断工具集合 <a href="https://cyningsun.github.io//07-21-2019/go-diagnostics-cn.html" target="_blank" rel="noopener">https://cyningsun.github.io//07-21-2019/go-diagnostics-cn.html</a></li></ol></li><li><ol start="4"><li>高性能高扩展golang http路由库erouter <a href="https://juejin.im/post/5d390a9f6fb9a07edb398b6d" target="_blank" rel="noopener">https://juejin.im/post/5d390a9f6fb9a07edb398b6d</a></li></ol></li><li><ol start="5"><li>Go 语言依赖管理的趋势：Go Module 以及 Go 仓库 <a href="https://mp.weixin.qq.com/s/NNUrVC6XFfUinshw5_4ehQ" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/NNUrVC6XFfUinshw5_4ehQ</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-07-24">gocn_news_2019-07-24</h2><ul><li><ol><li>在Go中编写令人愉快的HTTP中间件 <a href="https://doordash.engineering/2019/07/22/writing-delightful-http-middlewares-in-go/" target="_blank" rel="noopener">https://doordash.engineering/2019/07/22/writing-delightful-http-middlewares-in-go/</a></li></ol></li><li><ol start="2"><li>进一步了解go的append函数 <a href="https://dev.to/andyhaskell/a-closer-look-at-go-s-slice-append-function-3bhb" target="_blank" rel="noopener">https://dev.to/andyhaskell/a-closer-look-at-go-s-slice-append-function-3bhb</a></li></ol></li><li><ol start="3"><li>Go实现的HTTP缓存服务器 <a href="https://github.com/vicanso/pike" target="_blank" rel="noopener">https://github.com/vicanso/pike</a></li></ol></li><li><ol start="4"><li>通过在Golang中构建一个简单的RPC框架来学习RPC <a href="https://github.com/ankur-anand/simple-go-rpc" target="_blank" rel="noopener">https://github.com/ankur-anand/simple-go-rpc</a></li></ol></li><li><ol start="5"><li>Go中的Vanity导入路径 <a href="https://sagikazarmark.hu/blog/vanity-import-paths-in-go/" target="_blank" rel="noopener">https://sagikazarmark.hu/blog/vanity-import-paths-in-go/</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-07-23">gocn_news_2019-07-23</h2><ul><li><ol><li>深度解密Go语言之channel <a href="https://segmentfault.com/a/1190000019839546" target="_blank" rel="noopener">https://segmentfault.com/a/1190000019839546</a></li></ol></li><li><ol start="2"><li>Go: Finalizers <a href="https://medium.com/@blanchon.vincent/go-finalizers-786df8e17687" target="_blank" rel="noopener">https://medium.com/@blanchon.vincent/go-finalizers-786df8e17687</a></li></ol></li><li><ol start="3"><li>Go 结构体持久化库 <a href="https://golang.objectbox.io/" target="_blank" rel="noopener">https://golang.objectbox.io/</a></li></ol></li><li><ol start="4"><li>使用 Supervisor 运行 Go 程序 <a href="https://medium.com/@monirz/deploy-golang-app-in-5-minutes-ff354954fa8e" target="_blank" rel="noopener">https://medium.com/@monirz/deploy-golang-app-in-5-minutes-ff354954fa8e</a></li></ol></li><li><ol start="5"><li>Go 的 QML 绑定库 <a href="https://github.com/RadhiFadlillah/qamel" target="_blank" rel="noopener">https://github.com/RadhiFadlillah/qamel</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-07-22">gocn_news_2019-07-22</h2><ul><li><ol><li>Go中的ORM和Query Builder <a href="https://andrewpillar.com/programming/2019/07/13/orms-and-query-building-in-go" target="_blank" rel="noopener">https://andrewpillar.com/programming/2019/07/13/orms-and-query-building-in-go</a></li></ol></li><li><ol start="2"><li>ignite: 基于Firecracker实现微内核工具 <a href="https://github.com/weaveworks/ignite" target="_blank" rel="noopener">https://github.com/weaveworks/ignite</a></li></ol></li><li><ol start="3"><li>Monday工具如何使用Go的经验分享 <a href="https://vincent.composieux.fr/article/how-does-monday-use-go-and-how-does-it-work" target="_blank" rel="noopener">https://vincent.composieux.fr/article/how-does-monday-use-go-and-how-does-it-work</a></li></ol></li><li><ol start="4"><li>pike: Go实现的类varnish服务 <a href="https://github.com/vicanso/pike" target="_blank" rel="noopener">https://github.com/vicanso/pike</a></li></ol></li><li><ol start="5"><li>Go学习资料整理 <a href="https://barbra.io/collection/36cc5e8a-c094-47da-b8f7-8e01a2dc12aa" target="_blank" rel="noopener">https://barbra.io/collection/36cc5e8a-c094-47da-b8f7-8e01a2dc12aa</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-07-21">gocn_news_2019-07-21</h2><ul><li><ol><li>Go语言调度(一):系统调度 <a href="https://www.jianshu.com/p/db0aea4d60ed" target="_blank" rel="noopener">https://www.jianshu.com/p/db0aea4d60ed</a></li></ol></li><li><ol start="2"><li>Go译文之词法分析与解析(一) <a href="https://juejin.im/post/5d32ebec6fb9a07ef6401913" target="_blank" rel="noopener">https://juejin.im/post/5d32ebec6fb9a07ef6401913</a></li></ol></li><li><ol start="3"><li>深入研究Linux命名空间(一) <a href="http://ifeanyi.co/posts/linux-namespaces-part-1/" target="_blank" rel="noopener">http://ifeanyi.co/posts/linux-namespaces-part-1/</a></li></ol></li><li><ol start="4"><li>登陆月球的整个Apollo11计算机代码 <a href="https://github.com/chrislgarry/Apollo-11" target="_blank" rel="noopener">https://github.com/chrislgarry/Apollo-11</a></li></ol></li><li><ol start="5"><li>如何确定一个Go变量会被分配在哪里 <a href="http://russellluo.com/2019/07/how-to-confirm-where-a-go-variable-will-be-allocated.html" target="_blank" rel="noopener">http://russellluo.com/2019/07/how-to-confirm-where-a-go-variable-will-be-allocated.html</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-07-20">gocn_news_2019-07-20</h2><ul><li><ol><li>Go程序内存分配优化 <a href="https://blog.twitch.tv/go-memory-ballast-how-i-learnt-to-stop-worrying-and-love-the-heap-26c2462549a2" target="_blank" rel="noopener">https://blog.twitch.tv/go-memory-ballast-how-i-learnt-to-stop-worrying-and-love-the-heap-26c2462549a2</a></li></ol></li><li><ol start="2"><li>Go代码最常见的10个错误 <a href="https://itnext.io/the-top-10-most-common-mistakes-ive-seen-in-go-projects-4b79d4f6cd65" target="_blank" rel="noopener">https://itnext.io/the-top-10-most-common-mistakes-ive-seen-in-go-projects-4b79d4f6cd65</a></li></ol></li><li><ol start="3"><li>Golang中interface底层分析 <a href="https://juejin.im/post/5d31884af265da1baa1eae79" target="_blank" rel="noopener">https://juejin.im/post/5d31884af265da1baa1eae79</a></li></ol></li><li><ol start="4"><li>Go语言入门[翻译] <a href="https://juejin.im/post/5d316b69f265da1bb9701720" target="_blank" rel="noopener">https://juejin.im/post/5d316b69f265da1bb9701720</a></li></ol></li><li><ol start="5"><li>Go程序平滑重启 <a href="https://github.com/cloudflare/tableflip" target="_blank" rel="noopener">https://github.com/cloudflare/tableflip</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-07-19">gocn_news_2019-07-19</h2><ul><li><ol><li>Golang 中的垃圾回收（三）<a href="https://www.ardanlabs.com/blog/2019/07/garbage-collection-in-go-part3-gcpacing.html" target="_blank" rel="noopener">https://www.ardanlabs.com/blog/2019/07/garbage-collection-in-go-part3-gcpacing.html</a></li></ol></li><li><ol start="2"><li>golang中defer的执行过程是怎样的？<a href="https://juejin.im/post/5d303506f265da1b925412b9" target="_blank" rel="noopener">https://juejin.im/post/5d303506f265da1b925412b9</a></li></ol></li><li><ol start="3"><li>Vugu：Go + WebAssembly的现代UI库 <a href="https://www.vugu.org/" target="_blank" rel="noopener">https://www.vugu.org/</a></li></ol></li><li><ol start="4"><li>针对NAS设备的Go语言勒索软件已被破解 <a href="https://www.secrss.com/articles/12159" target="_blank" rel="noopener">https://www.secrss.com/articles/12159</a></li></ol></li><li><ol start="5"><li>TLS示例开发-golang版本 <a href="https://www.cnblogs.com/dust90/p/11207219.html" target="_blank" rel="noopener">https://www.cnblogs.com/dust90/p/11207219.html</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-07-18">gocn_news_2019-07-18</h2><ul><li><ol><li>Golang Modules学习  <a href="http://www.huamo.online/2019/07/08/Golang-Modules%E5%AD%A6%E4%B9%A0/" target="_blank" rel="noopener">http://www.huamo.online/2019/07/08/Golang-Modules学习/</a></li></ol></li><li><ol start="2"><li>Go Channel  <a href="https://taigacute.github.io/2019/07/14/Go-Channel/" target="_blank" rel="noopener">https://taigacute.github.io/2019/07/14/Go-Channel/</a></li></ol></li><li><ol start="3"><li>Go的Sync包  <a href="https://taigacute.github.io/2019/07/12/Go%E7%9A%84Sync%E5%8C%85/" target="_blank" rel="noopener">https://taigacute.github.io/2019/07/12/Go的Sync包/</a></li></ol></li><li><ol start="4"><li>深入研究goroutine栈  <a href="http://www.huamo.online/2019/06/25/%E6%B7%B1%E5%85%A5%E7%A0%94%E7%A9%B6goroutine%E6%A0%88/" target="_blank" rel="noopener">http://www.huamo.online/2019/06/25/深入研究goroutine栈/</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-07-17">gocn_news_2019-07-17</h2><ul><li><ol><li>Go try 提议被拒 <a href="https://github.com/golang/go/issues/32437#issuecomment-512035919" target="_blank" rel="noopener">https://github.com/golang/go/issues/32437#issuecomment-512035919</a></li></ol></li><li><ol start="2"><li>Go 编程：那些隐晦的操作符 <a href="https://www.gitdig.com/go-operators/" target="_blank" rel="noopener">https://www.gitdig.com/go-operators/</a></li></ol></li><li><ol start="3"><li>[译] 使用 Gomobile 和 Gopherjs 的动态二维码数据传输 <a href="https://juejin.im/post/5d2bfccef265da1bb77699e8" target="_blank" rel="noopener">https://juejin.im/post/5d2bfccef265da1bb77699e8</a></li></ol></li><li><ol start="4"><li>Go中句法糖的成本 <a href="https://medium.com/@asilvr/the-cost-of-syntactic-sugar-in-go-5aa9dc307fe0" target="_blank" rel="noopener">https://medium.com/@asilvr/the-cost-of-syntactic-sugar-in-go-5aa9dc307fe0</a></li></ol></li><li><ol start="5"><li>Go编写的高性能、自我托管的通讯及邮件列表管理器 <a href="https://github.com/knadh/listmonk" target="_blank" rel="noopener">https://github.com/knadh/listmonk</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-07-16">gocn_news_2019-07-16</h2><ul><li><ol><li>Go 并发算法：<a href="http://www.golangprograms.com/go-language/concurrency.html" target="_blank" rel="noopener">http://www.golangprograms.com/go-language/concurrency.html</a></li></ol></li><li><ol start="2"><li>Go websocket 框架：<a href="https://github.com/kataras/neffos" target="_blank" rel="noopener">https://github.com/kataras/neffos</a></li></ol></li><li><ol start="3"><li>Go 医学图像解析器: <a href="https://github.com/suyashkumar/dicom" target="_blank" rel="noopener">https://github.com/suyashkumar/dicom</a></li></ol></li><li><ol start="4"><li>使用服务网格简化微服务安全性问题：<a href="https://www.cncf.io/blog/2019/04/25/simplifying-microservices-security-with-a-service-mesh/" target="_blank" rel="noopener">https://www.cncf.io/blog/2019/04/25/simplifying-microservices-security-with-a-service-mesh/</a></li></ol></li><li><ol start="5"><li>MongoDB 4.2 特性预览：<a href="https://www.mongodb.com/blog/post/mongodb-42-previewed-at-mongodb-world" target="_blank" rel="noopener">https://www.mongodb.com/blog/post/mongodb-42-previewed-at-mongodb-world</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-07-15">gocn_news_2019-07-15</h2><ul><li><ol><li>Go 逃逸分析 <a href="https://github.com/WilburXu/blog/blob/master/Golang/Go%20%E9%80%83%E9%80%B8%E5%88%86%E6%9E%90.md" target="_blank" rel="noopener">https://github.com/WilburXu/blog/blob/master/Golang/Go 逃逸分析.md</a></li></ol></li><li><ol start="2"><li>Go 编程：图解反射 <a href="https://www.gitdig.com/go-reflect" target="_blank" rel="noopener">https://www.gitdig.com/go-reflect</a></li></ol></li><li><ol start="3"><li>Go Micro Register 源码分析 <a href="https://segmentfault.com/a/1190000019758939" target="_blank" rel="noopener">https://segmentfault.com/a/1190000019758939</a></li></ol></li><li><ol start="4"><li>文件分享中继服务器 <a href="https://github.com/schollz/hostyoself" target="_blank" rel="noopener">https://github.com/schollz/hostyoself</a></li></ol></li><li><ol start="5"><li>为微服务开发者打造的开发工具 <a href="https://github.com/eko/monday" target="_blank" rel="noopener">https://github.com/eko/monday</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-07-14">gocn_news_2019-07-14</h2><ul><li><ol><li>如何使用 try <a href="https://faiface.github.io/post/how-to-use-try/" target="_blank" rel="noopener">https://faiface.github.io/post/how-to-use-try/</a></li></ol></li><li><ol start="2"><li>Go程序是怎样跑起来的 <a href="https://mp.weixin.qq.com/s/Rewl0DKnq6CY53m5D3G2qw" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/Rewl0DKnq6CY53m5D3G2qw</a></li></ol></li><li><ol start="3"><li>可编程的HTTP/S代理工具martian <a href="https://github.com/google/martian" target="_blank" rel="noopener">https://github.com/google/martian</a></li></ol></li><li><ol start="4"><li>cockroachdb出品的errors库 <a href="https://github.com/cockroachdb/errors" target="_blank" rel="noopener">https://github.com/cockroachdb/errors</a></li></ol></li><li><ol start="5"><li>Go可视化调用工具gocyto <a href="https://github.com/protolambda/gocyto" target="_blank" rel="noopener">https://github.com/protolambda/gocyto</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-07-13">gocn_news_2019-07-13</h2><ul><li><ol><li>Go 1.13 中 Modules 的标准特性 <a href="https://mp.weixin.qq.com/s/SGGV3tWEg5AAJ7I_FcK0cg" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/SGGV3tWEg5AAJ7I_FcK0cg</a></li></ol></li><li><ol start="2"><li>Golang 并发编程与定时器 <a href="https://draveness.me/golang/concurrency/golang-timer.html" target="_blank" rel="noopener">https://draveness.me/golang/concurrency/golang-timer.html</a></li></ol></li><li><ol start="3"><li>Golang语言defer特性详解 <a href="https://www.jianshu.com/p/57acdbc8b30a" target="_blank" rel="noopener">https://www.jianshu.com/p/57acdbc8b30a</a></li></ol></li><li><ol start="4"><li>Golang time.After内存泄露问题分析 <a href="https://www.cnblogs.com/luoming1224/p/11174927.html" target="_blank" rel="noopener">https://www.cnblogs.com/luoming1224/p/11174927.html</a></li></ol></li><li><ol start="5"><li>Go 编程：图解反射 <a href="https://www.gitdig.com/go-reflect" target="_blank" rel="noopener">https://www.gitdig.com/go-reflect</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-07-12">gocn_news_2019-07-12</h2><ul><li><ol><li>Golang 大杀器之跟踪剖析 trace <a href="https://juejin.im/post/5d27400151882530af139a85" target="_blank" rel="noopener">https://juejin.im/post/5d27400151882530af139a85</a></li></ol></li><li><ol start="2"><li>Go语言的微服务开发工具 <a href="https://www.bugsnag.com/blog/microservice-developer-tools-for-gophers" target="_blank" rel="noopener">https://www.bugsnag.com/blog/microservice-developer-tools-for-gophers</a></li></ol></li><li><ol start="3"><li>[译]思考实践:用Go实现Flutter <a href="https://juejin.im/post/5d215b8df265da1b7b31ac8f" target="_blank" rel="noopener">https://juejin.im/post/5d215b8df265da1b7b31ac8f</a></li></ol></li><li><ol start="4"><li>Goch:Go语言编写的在线聊天服务 <a href="https://github.com/ribice/goch" target="_blank" rel="noopener">https://github.com/ribice/goch</a></li></ol></li><li><ol start="5"><li>orbital:一个端对端测试框架 <a href="https://github.com/segmentio/orbital" target="_blank" rel="noopener">https://github.com/segmentio/orbital</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-07-11">gocn_news_2019-07-11</h2><ul><li><ol><li>Go Modules讲解 <a href="https://www.youtube.com/watch?v=UbP0CFMKIJM" target="_blank" rel="noopener">https://www.youtube.com/watch?v=UbP0CFMKIJM</a></li></ol></li><li><ol start="2"><li>为WASM编译的Go编译器，在浏览器中运行 <a href="https://github.com/ccbrown/wasm-go-playground" target="_blank" rel="noopener">https://github.com/ccbrown/wasm-go-playground</a></li></ol></li><li><ol start="3"><li>Uprobes 和 BPF <a href="https://wat.io/posts/uprobes-and-bpf/" target="_blank" rel="noopener">https://wat.io/posts/uprobes-and-bpf/</a></li></ol></li><li><ol start="4"><li>Go实现的用于验证Kubernetes配置的命令行工具ccheck <a href="https://github.com/brendanjryan/ccheck" target="_blank" rel="noopener">https://github.com/brendanjryan/ccheck</a></li></ol></li><li><ol start="5"><li>GO语言的基本LDAP功能 <a href="https://github.com/go-ldap/ldap" target="_blank" rel="noopener">https://github.com/go-ldap/ldap</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-07-10">gocn_news_2019-07-10</h2><ul><li><ol><li>Dave Cheney: 清晰比聪明更重要 <a href="https://dave.cheney.net/2019/07/09/clear-is-better-than-clever" target="_blank" rel="noopener">https://dave.cheney.net/2019/07/09/clear-is-better-than-clever</a></li></ol></li><li><ol start="2"><li>istio 最佳实践: Service Mesh 性能测试 <a href="https://istio.io/blog/2019/performance-best-practices/" target="_blank" rel="noopener">https://istio.io/blog/2019/performance-best-practices/</a></li></ol></li><li><ol start="3"><li>GO语言变量逃逸分析 <a href="https://www.jianshu.com/p/7571d3d0c12d" target="_blank" rel="noopener">https://www.jianshu.com/p/7571d3d0c12d</a></li></ol></li><li><ol start="4"><li>使用Go和TLS 加密链接GRPC <a href="https://medium.com/@nleiva/practical-guide-to-securing-grpc-connections-with-go-and-tls-part-1-f63058e9d6d1" target="_blank" rel="noopener">https://medium.com/@nleiva/practical-guide-to-securing-grpc-connections-with-go-and-tls-part-1-f63058e9d6d1</a></li></ol></li><li><ol start="5"><li>[译] Go语言如何使用条件编译 <a href="https://pengrl.com/p/41852/" target="_blank" rel="noopener">https://pengrl.com/p/41852/</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-07-09">gocn_news_2019-07-09</h2><ul><li><ol><li>Go内存分配那些事，就这么简单！<a href="https://mp.weixin.qq.com/s/3gGbJaeuvx4klqcv34hmmw" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/3gGbJaeuvx4klqcv34hmmw</a></li></ol></li><li><ol start="2"><li>Golang rate无法延迟重排的BUG <a href="http://xiaorui.cc/2019/06/28/golang-rate%E6%97%A0%E6%B3%95%E5%BB%B6%E8%BF%9F%E9%87%8D%E6%8E%92%E7%9A%84bug/" target="_blank" rel="noopener">http://xiaorui.cc/2019/06/28/golang-rate无法延迟重排的bug/</a></li></ol></li><li><ol start="3"><li>Go 编程:交叉编译 vs 条件编译  <a href="https://www.gitdig.com/go-compatible/" target="_blank" rel="noopener">https://www.gitdig.com/go-compatible/</a></li></ol></li><li><ol start="4"><li>Golang解决TCP粘包拆包问题 <a href="https://juejin.im/post/5d220f7b6fb9a07ec7553da4" target="_blank" rel="noopener">https://juejin.im/post/5d220f7b6fb9a07ec7553da4</a></li></ol></li><li><ol start="5"><li>调研: GoMobile SDK 在 iOS 与 Android 上的集成与边界 <a href="https://juejin.im/post/5d233abae51d45772a49adbf" target="_blank" rel="noopener">https://juejin.im/post/5d233abae51d45772a49adbf</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-07-08">gocn_news_2019-07-08</h2><ul><li><ol><li>Go测试包不为人知的功能 <a href="https://medium.com/@blanchon.vincent/go-unknown-parts-of-the-test-package-df8988b2ef7f" target="_blank" rel="noopener">https://medium.com/@blanchon.vincent/go-unknown-parts-of-the-test-package-df8988b2ef7f</a></li></ol></li><li><ol start="2"><li>在Go中实现链式调用方式 <a href="https://preslav.me/2019/07/07/implementing-a-functional-style-builder-in-go/%E3%80%81" target="_blank" rel="noopener">https://preslav.me/2019/07/07/implementing-a-functional-style-builder-in-go/、</a></li></ol></li><li><ol start="3"><li>goebpf：Go语言eBPF开发库 <a href="https://github.com/dropbox/goebpf" target="_blank" rel="noopener">https://github.com/dropbox/goebpf</a></li></ol></li><li><ol start="4"><li>使用GraphQL和dataloader查询数据库 <a href="https://medium.com/@mikaelino/querying-a-database-with-graphql-and-dataloader-an-introduction-in-go-d8d2609bc635" target="_blank" rel="noopener">https://medium.com/@mikaelino/querying-a-database-with-graphql-and-dataloader-an-introduction-in-go-d8d2609bc635</a></li></ol></li><li><ol start="5"><li>利用TinyGo将你的WebAssembly体积缩减72% <a href="https://dev.to/sendilkumarn/reduce-your-webassembly-binaries-72-from-56kb-to-26kb-to-16kb-40mi" target="_blank" rel="noopener">https://dev.to/sendilkumarn/reduce-your-webassembly-binaries-72-from-56kb-to-26kb-to-16kb-40mi</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-07-07">gocn_news_2019-07-07</h2><ul><li><ol><li>打造最快的go模板引擎gorazor2.0 <a href="https://zhuanlan.zhihu.com/p/72522371" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/72522371</a></li></ol></li><li><ol start="2"><li>一个commit引发的思考 <a href="https://www.cnblogs.com/apocelipes/p/11143899.html" target="_blank" rel="noopener">https://www.cnblogs.com/apocelipes/p/11143899.html</a></li></ol></li><li><ol start="3"><li>cache2go源码阅读 <a href="https://segmentfault.com/a/1190000019682392" target="_blank" rel="noopener">https://segmentfault.com/a/1190000019682392</a></li></ol></li><li><ol start="4"><li>MySQL锁机制之表锁 <a href="https://www.jianshu.com/p/4688719c2dcd" target="_blank" rel="noopener">https://www.jianshu.com/p/4688719c2dcd</a></li></ol></li><li><ol start="5"><li>RedisRDB持久化详解 <a href="https://mp.weixin.qq.com/s/NpUV-7bvXTD3iu0_2aRssQ" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/NpUV-7bvXTD3iu0_2aRssQ</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-07-06">gocn_news_2019-07-06</h2><ul><li><ol><li>Go 程序是怎样跑起来的 <a href="https://juejin.im/post/5d1c087af265da1bb5651356" target="_blank" rel="noopener">https://juejin.im/post/5d1c087af265da1bb5651356</a></li></ol></li><li><ol start="2"><li>Go Slices are Fat Pointers <a href="https://nullprogram.com/blog/2019/06/30/" target="_blank" rel="noopener">https://nullprogram.com/blog/2019/06/30/</a></li></ol></li><li><ol start="3"><li>Golang轻量级RBAC鉴权库 <a href="https://juejin.im/post/5d1daa34f265da1b7e105514" target="_blank" rel="noopener">https://juejin.im/post/5d1daa34f265da1b7e105514</a></li></ol></li><li><ol start="4"><li>通过例子了解Go Map设计 <a href="https://medium.com/@blanchon.vincent/go-map-design-by-example-part-i-3f78a064a352" target="_blank" rel="noopener">https://medium.com/@blanchon.vincent/go-map-design-by-example-part-i-3f78a064a352</a></li></ol></li><li><ol start="5"><li>Go Subtests使用介绍 <a href="https://gochronicles.dev/posts/datastructures/list/singlylinkedlist/part-ii/" target="_blank" rel="noopener">https://gochronicles.dev/posts/datastructures/list/singlylinkedlist/part-ii/</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-07-05">gocn_news_2019-07-05</h2><ul><li><ol><li>关于 Go ‘Try’ 的一封公开信：<a href="https://www.ardanlabs.com/blog/2019/07/an-open-letter-to-the-go-team-about-try.html" target="_blank" rel="noopener">https://www.ardanlabs.com/blog/2019/07/an-open-letter-to-the-go-team-about-try.html</a></li></ol></li><li><ol start="2"><li>使在 Go 编写类似 shell 的脚本: <a href="https://github.com/bitfield/script" target="_blank" rel="noopener">https://github.com/bitfield/script</a></li></ol></li><li><ol start="3"><li>Go Map 常见操作: <a href="http://www.golangprograms.com/go-language/golang-maps.html" target="_blank" rel="noopener">http://www.golangprograms.com/go-language/golang-maps.html</a></li></ol></li><li><ol start="4"><li>微服务架构和设计模式：<a href="https://medium.com/@madhukaudantha/microservice-architecture-and-design-patterns-for-microservices-e0e5013fd58a" target="_blank" rel="noopener">https://medium.com/@madhukaudantha/microservice-architecture-and-design-patterns-for-microservices-e0e5013fd58a</a></li></ol></li><li><ol start="5"><li>你真的需要微服务吗：<a href="https://itnext.io/do-you-really-need-microservices-e85d7711c78b" target="_blank" rel="noopener">https://itnext.io/do-you-really-need-microservices-e85d7711c78b</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-07-04">gocn_news_2019-07-04</h2><ul><li><ol><li>基于gin构建企业级golang web脚手架 <a href="https://github.com/e421083458/gin_scaffold" target="_blank" rel="noopener">https://github.com/e421083458/gin_scaffold</a></li></ol></li><li><ol start="2"><li>Istio多集群管理方案详解 <a href="https://mp.weixin.qq.com/s/Hwp62XMBvMT0NAk3RM928w" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/Hwp62XMBvMT0NAk3RM928w</a></li></ol></li><li><ol start="3"><li>使用Elasticsearch Operator 快速部署Elasticsearch集群 <a href="https://mp.weixin.qq.com/s/Zmxdvv_zkTnSY3lP7CtzoQ" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/Zmxdvv_zkTnSY3lP7CtzoQ</a></li></ol></li><li><ol start="4"><li>向GO内部编译器添加新语句 <a href="https://eli.thegreenplace.net/2019/go-compiler-internals-adding-a-new-statement-to-go-part-1/" target="_blank" rel="noopener">https://eli.thegreenplace.net/2019/go-compiler-internals-adding-a-new-statement-to-go-part-1/</a></li></ol></li><li><ol start="5"><li>专注于web应用的Golang模板引擎 <a href="https://github.com/gobuffalo/plush" target="_blank" rel="noopener">https://github.com/gobuffalo/plush</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-07-03">gocn_news_2019-07-03</h2><ul><li><ol><li>Go并发编程与同步原语 <a href="https://draveness.me/golang-sync-primitives.html" target="_blank" rel="noopener">https://draveness.me/golang-sync-primitives.html</a></li></ol></li><li><ol start="2"><li>Go Modules踩坑总结 <a href="https://juejin.im/post/5d1ae1b2f265da1b8466fecb" target="_blank" rel="noopener">https://juejin.im/post/5d1ae1b2f265da1b8466fecb</a></li></ol></li><li><ol start="3"><li>彻底弄懂return和defer的微妙关系 <a href="https://juejin.im/post/5d173ce16fb9a07ea803df75" target="_blank" rel="noopener">https://juejin.im/post/5d173ce16fb9a07ea803df75</a></li></ol></li><li><ol start="4"><li>net/http输出context引起的map panic <a href="http://xiaorui.cc/?p=5919" target="_blank" rel="noopener">http://xiaorui.cc/?p=5919</a></li></ol></li><li><ol start="5"><li>[]byte和string类型相互转换时的性能分析和优化 <a href="https://www.pengrl.com/p/31544/" target="_blank" rel="noopener">https://www.pengrl.com/p/31544/</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-07-02">gocn_news_2019-07-02</h2><ul><li><ol><li>Go 实现的广告拦截工具：<a href="https://github.com/kaepora/resilience" target="_blank" rel="noopener">https://github.com/kaepora/resilience</a></li></ol></li><li><ol start="2"><li>Go 压缩/解压缩文件: <a href="https://github.com/mholt/archiver" target="_blank" rel="noopener">https://github.com/mholt/archiver</a></li></ol></li><li><ol start="3"><li>Go vs Python: 选择适合你的语言 <a href="https://medium.com/swlh/python-vs-golang-select-the-best-one-to-level-up-your-business-1a6d0fb32991" target="_blank" rel="noopener">https://medium.com/swlh/python-vs-golang-select-the-best-one-to-level-up-your-business-1a6d0fb32991</a></li></ol></li><li><ol start="4"><li>企业构建 Serverless 团队的五个建议：<a href="https://thenewstack.io/five-tips-building-serverless-teams-enterprise" target="_blank" rel="noopener">https://thenewstack.io/five-tips-building-serverless-teams-enterprise</a></li></ol></li><li><ol start="5"><li>使用 AWS Lambda 构建 PDF 生成器：<a href="https://medium.com/@_rich/richard-keller-61d9cb0f430" target="_blank" rel="noopener">https://medium.com/@_rich/richard-keller-61d9cb0f430</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-07-01">gocn_news_2019-07-01</h2><ul><li><ol><li>微服务系列(一)：Go Rpc 源码解读 <a href="https://juejin.im/post/5d1760455188255cfc1a019f" target="_blank" rel="noopener">https://juejin.im/post/5d1760455188255cfc1a019f</a></li></ol></li><li><ol start="2"><li>记一次 goroutine 泄漏问题查找原因与解决 <a href="https://github.com/cdongyang/note/blob/master/go/goroutine-leak.md" target="_blank" rel="noopener">https://github.com/cdongyang/note/blob/master/go/goroutine-leak.md</a></li></ol></li><li><ol start="3"><li>使用git操作svn仓库 <a href="https://tonybai.com/2019/06/25/using-git-with-svn-repo" target="_blank" rel="noopener">https://tonybai.com/2019/06/25/using-git-with-svn-repo</a></li></ol></li><li><ol start="4"><li>Excelize发布2.0.1版本, Go语言最受欢迎的Excel基础库 <a href="https://mp.weixin.qq.com/s/LmIBHOEjAK7N9oru6TeT5A" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/LmIBHOEjAK7N9oru6TeT5A</a></li></ol></li><li><ol start="5"><li>开源项目之个人视频流服务器 tube <a href="https://github.com/wybiral/tube" target="_blank" rel="noopener">https://github.com/wybiral/tube</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-06-30">gocn_news_2019-06-30</h2><ul><li><ol><li>关于改进 “if err != nil” 的讨论 <a href="https://github.com/golang/go/issues/32825" target="_blank" rel="noopener">https://github.com/golang/go/issues/32825</a></li></ol></li><li><ol start="2"><li>为 Go 开发者准备的 Makefiles 教程 <a href="https://www.youtube.com/watch?v=QztvWSCbQLU" target="_blank" rel="noopener">https://www.youtube.com/watch?v=QztvWSCbQLU</a></li></ol></li><li><ol start="3"><li>gRPC+gRPC Gateway 能不能不用证书？<a href="https://github.com/EDDYCJY/blog/blob/master/golang/2019-06-22-grpc-gateway-tls.md" target="_blank" rel="noopener">https://github.com/EDDYCJY/blog/blob/master/golang/2019-06-22-grpc-gateway-tls.md</a></li></ol></li><li><ol start="4"><li>还原 panic 时的函数信息 <a href="https://lekstu.ga/posts/pclntab-function-recovery/" target="_blank" rel="noopener">https://lekstu.ga/posts/pclntab-function-recovery/</a></li></ol></li><li><ol start="5"><li>性能持续测试工具 performabot <a href="https://github.com/saschagrunert/performabot" target="_blank" rel="noopener">https://github.com/saschagrunert/performabot</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-06-29">gocn_news_2019-06-29</h2><ul><li><ol><li>提案：内置的Go错误检查 <a href="https://go.googlesource.com/proposal/+/master/design/32437-try-builtin.md" target="_blank" rel="noopener">https://go.googlesource.com/proposal/+/master/design/32437-try-builtin.md</a></li></ol></li><li><ol start="2"><li>Go Modules 语义版本控制的问题 <a href="https://blog.dgraph.io/post/serialization-versioning" target="_blank" rel="noopener">https://blog.dgraph.io/post/serialization-versioning</a></li></ol></li><li><ol start="3"><li>尝试更严格的gofmt <a href="https://www.reddit.com/r/golang/comments/c66cz2/experimenting_with_a_stricter_gofmt" target="_blank" rel="noopener">https://www.reddit.com/r/golang/comments/c66cz2/experimenting_with_a_stricter_gofmt</a></li></ol></li><li><ol start="4"><li>减少类型层次 <a href="https://www.ardanlabs.com/blog/2016/10/reducing-type-hierarchies.html" target="_blank" rel="noopener">https://www.ardanlabs.com/blog/2016/10/reducing-type-hierarchies.html</a></li></ol></li><li><ol start="5"><li>分布式时序数据库 LinDB <a href="https://zhuanlan.zhihu.com/p/35998778" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/35998778</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-06-28">gocn_news_2019-06-28</h2><ul><li><ol><li>关于内置catch函数捕获错误的讨论 <a href="https://github.com/golang/go/issues/32811" target="_blank" rel="noopener">https://github.com/golang/go/issues/32811</a></li></ol></li><li><ol start="2"><li>Go单元测试 <a href="https://levelup.gitconnected.com/unit-testing-in-go-205ada2b9d7c" target="_blank" rel="noopener">https://levelup.gitconnected.com/unit-testing-in-go-205ada2b9d7c</a></li></ol></li><li><ol start="3"><li>Go defer 会有性能损耗，尽量不要用？<a href="https://github.com/EDDYCJY/blog/blob/master/golang/pkg/2019-06-16-Go-defer-loss.md" target="_blank" rel="noopener">https://github.com/EDDYCJY/blog/blob/master/golang/pkg/2019-06-16-Go-defer-loss.md</a></li></ol></li><li><ol start="4"><li>如何快速提升 Go 程序性能？ <a href="https://mp.weixin.qq.com/s/rta0Prdc5xq7Zd7mLzvcWA" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/rta0Prdc5xq7Zd7mLzvcWA</a></li></ol></li><li><ol start="5"><li>Go Modules踩坑总结 <a href="https://mp.weixin.qq.com/s/2v8kGm8T9BQFmpLfQE7-wg" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/2v8kGm8T9BQFmpLfQE7-wg</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-06-27">gocn_news_2019-06-27</h2><ul><li><ol><li>走向Go 2的下一步 <a href="https://blog.golang.org/go2-next-steps" target="_blank" rel="noopener">https://blog.golang.org/go2-next-steps</a></li></ol></li><li><ol start="2"><li>使用Go构建数据库密集型应用程序的终极指南 <a href="http://t.cn/AipRdZir" target="_blank" rel="noopener">http://t.cn/AipRdZir</a></li></ol></li><li><ol start="3"><li>关于在gRPC中使用TLS的 <a href="http://gophersre.com/2019/06/21/grpc-dont-supply-a-client-cert/" target="_blank" rel="noopener">http://gophersre.com/2019/06/21/grpc-dont-supply-a-client-cert/</a></li></ol></li><li><ol start="4"><li>经典并发模式 <a href="https://www.youtube.com/watch?v=5zXAHh5tJqQ" target="_blank" rel="noopener">https://www.youtube.com/watch?v=5zXAHh5tJqQ</a></li></ol></li><li><ol start="5"><li>内存泄漏优化 <a href="https://segmentfault.com/a/1190000019591222" target="_blank" rel="noopener">https://segmentfault.com/a/1190000019591222</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-06-26">gocn_news_2019-06-26</h2><ul><li><ol><li>Go AES加解密性能测试 <a href="https://medium.com/@gerritjvv/aes-golang-encryption-performance-benchmarks-473e54ba304" target="_blank" rel="noopener">https://medium.com/@gerritjvv/aes-golang-encryption-performance-benchmarks-473e54ba304</a></li></ol></li><li><ol start="2"><li>使用unsafe包操作结构体中的私有成员 <a href="https://itnext.io/manipulating-private-fields-in-go-4da4ca525717" target="_blank" rel="noopener">https://itnext.io/manipulating-private-fields-in-go-4da4ca525717</a></li></ol></li><li><ol start="3"><li>使用binary包进行数据编码 <a href="https://medium.com/learning-the-go-programming-language/encoding-data-with-the-go-binary-package-42c7c0eb3e73" target="_blank" rel="noopener">https://medium.com/learning-the-go-programming-language/encoding-data-with-the-go-binary-package-42c7c0eb3e73</a></li></ol></li><li><ol start="4"><li>带你理解Go结构体 <a href="https://medium.com/@victorsteven/understanding-data-structures-in-golang-f55205afdcaa" target="_blank" rel="noopener">https://medium.com/@victorsteven/understanding-data-structures-in-golang-f55205afdcaa</a></li></ol></li><li><ol start="5"><li>bettercap:一款强大的网络抓包器 <a href="https://github.com/bettercap/bettercap" target="_blank" rel="noopener">https://github.com/bettercap/bettercap</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-06-25">gocn_news_2019-06-25</h2><ul><li><ol><li>理解 Go 的 Array 和 Slice <a href="https://www.sohamkamani.com/blog/golang/arrays-vs-slices/" target="_blank" rel="noopener">https://www.sohamkamani.com/blog/golang/arrays-vs-slices/</a></li></ol></li><li><ol start="2"><li>Docker on RISC-V 部署 Go <a href="https://medium.com/@carlosedp/docker-containers-on-risc-v-architecture-5bc45725624b" target="_blank" rel="noopener">https://medium.com/@carlosedp/docker-containers-on-risc-v-architecture-5bc45725624b</a></li></ol></li><li><ol start="3"><li>encoding/json 真的慢吗？<a href="https://medium.com/@blanchon.vincent/go-is-the-encoding-json-package-really-slow-62b64d54b148" target="_blank" rel="noopener">https://medium.com/@blanchon.vincent/go-is-the-encoding-json-package-really-slow-62b64d54b148</a></li></ol></li><li><ol start="4"><li>Go 和 WebRTC <a href="https://viscarra.dev/post/webrtc-gspeech/" target="_blank" rel="noopener">https://viscarra.dev/post/webrtc-gspeech/</a></li></ol></li><li><ol start="5"><li>Go 简略体验 <a href="https://www.tbray.org/ongoing/When/201x/2019/06/12/Go-Creeping-In" target="_blank" rel="noopener">https://www.tbray.org/ongoing/When/201x/2019/06/12/Go-Creeping-In</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-06-24">gocn_news_2019-06-24</h2><ul><li><ol><li>Go与Python/R语言通讯 <a href="https://opendatagroup.github.io/development/2019/06/13/go-ffi.html" target="_blank" rel="noopener">https://opendatagroup.github.io/development/2019/06/13/go-ffi.html</a></li></ol></li><li><ol start="2"><li>利用Go实现gRPC拦截器 <a href="https://davidsbond.github.io/2019/06/14/creating-grpc-interceptors-in-go.html" target="_blank" rel="noopener">https://davidsbond.github.io/2019/06/14/creating-grpc-interceptors-in-go.html</a></li></ol></li><li><ol start="3"><li>circl: Cloudflare开源的加密库 <a href="https://blog.cloudflare.com/introducing-circl/" target="_blank" rel="noopener">https://blog.cloudflare.com/introducing-circl/</a></li></ol></li><li><ol start="4"><li>go-xmpp: Go实现的XMPP库 <a href="https://github.com/FluuxIO/go-xmpp" target="_blank" rel="noopener">https://github.com/FluuxIO/go-xmpp</a></li></ol></li><li><ol start="5"><li>如果在Go中使用context.Context <a href="https://medium.com/the-polyglot-programmer/how-to-use-the-context-context-package-with-the-go-language-7114878bbed9" target="_blank" rel="noopener">https://medium.com/the-polyglot-programmer/how-to-use-the-context-context-package-with-the-go-language-7114878bbed9</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-06-23">gocn_news_2019-06-23</h2><ul><li><ol><li>Golang手把手实现tcp内网穿透代理 <a href="https://www.jianshu.com/p/e79fe205f3e0" target="_blank" rel="noopener">https://www.jianshu.com/p/e79fe205f3e0</a></li></ol></li><li><ol start="2"><li>gRPC调试和开发工具套件 <a href="https://github.com/bradleyjkemp/grpc-tools" target="_blank" rel="noopener">https://github.com/bradleyjkemp/grpc-tools</a></li></ol></li><li><ol start="3"><li>Flink最锋利的武器：FlinkSQL入门和实战 <a href="https://mp.weixin.qq.com/s/d-zJ2ZGElARsfxTWb7VW-Q" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/d-zJ2ZGElARsfxTWb7VW-Q</a></li></ol></li><li><ol start="4"><li>Golang性能提高技术----基础编码原则 <a href="https://www.jianshu.com/p/0dafe1059fdc" target="_blank" rel="noopener">https://www.jianshu.com/p/0dafe1059fdc</a></li></ol></li><li><ol start="5"><li>每秒千万级的实时数据处理是怎么实现的？<a href="https://mp.weixin.qq.com/s/6IXi9DnYclurBmrwSNOCSQ" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/6IXi9DnYclurBmrwSNOCSQ</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-06-22">gocn_news_2019-06-22</h2><ul><li><ol><li>内存屏障介绍 <a href="https://github.com/cch123/golang-notes/blob/master/memory_barrier.md" target="_blank" rel="noopener">https://github.com/cch123/golang-notes/blob/master/memory_barrier.md</a></li></ol></li><li><ol start="2"><li>使用树莓派和Golang开发实时地图 <a href="https://developer.here.com/blog/real-time-maps-with-a-raspberry-pi-golang-and-here-xyz" target="_blank" rel="noopener">https://developer.here.com/blog/real-time-maps-with-a-raspberry-pi-golang-and-here-xyz</a></li></ol></li><li><ol start="3"><li>编写更干净的Go代码 <a href="https://github.com/Pungyeon/clean-go-article" target="_blank" rel="noopener">https://github.com/Pungyeon/clean-go-article</a></li></ol></li><li><ol start="4"><li>Go Web 新手教程 <a href="https://juejin.im/post/5d0bb02ae51d455070226fb2" target="_blank" rel="noopener">https://juejin.im/post/5d0bb02ae51d455070226fb2</a></li></ol></li><li><ol start="5"><li>编译和部署Go程序到k8s <a href="https://github.com/google/ko" target="_blank" rel="noopener">https://github.com/google/ko</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-06-21">gocn_news_2019-06-21</h2><ul><li><ol><li>Kubernetes1.15发布：可扩展性与持续性改进 <a href="https://mp.weixin.qq.com/s/Qb8AcKE0NHnWlYo905M-SA" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/Qb8AcKE0NHnWlYo905M-SA</a></li></ol></li><li><ol start="2"><li>用Go构建一个SQL解析器 <a href="https://mp.weixin.qq.com/s/F9z5oPk-mSauliOHk3FJEA" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/F9z5oPk-mSauliOHk3FJEA</a></li></ol></li><li><ol start="3"><li>Go runtime源码分析之memory barrier <a href="https://github.com/cch123/golang-notes/blob/master/memory_barrier.md" target="_blank" rel="noopener">https://github.com/cch123/golang-notes/blob/master/memory_barrier.md</a></li></ol></li><li><ol start="4"><li>go中设计模式之结构型模式 <a href="https://blog.51cto.com/14378068/2411614" target="_blank" rel="noopener">https://blog.51cto.com/14378068/2411614</a></li></ol></li><li><ol start="5"><li>Go Modules 详解 <a href="https://studygolang.com/articles/21328" target="_blank" rel="noopener">https://studygolang.com/articles/21328</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-06-20">gocn_news_2019-06-20</h2><ul><li><ol><li>GopherChina 2019 所有视频全部发布了: <a href="https://www.bilibili.com/video/av56099952" target="_blank" rel="noopener">https://www.bilibili.com/video/av56099952</a></li></ol></li><li><ol start="2"><li>go/Java 国密sm2签名验签：  <a href="https://segmentfault.com/a/1190000019528217" target="_blank" rel="noopener">https://segmentfault.com/a/1190000019528217</a></li></ol></li><li><ol start="3"><li>深入理解defer（上）defer基础：<a href="https://www.cnblogs.com/abozhang/p/11049304.html" target="_blank" rel="noopener">https://www.cnblogs.com/abozhang/p/11049304.html</a><br>4.银行业中台系统建设思路：<a href="https://mp.weixin.qq.com/s/QEic_WcpmBcwSdM1sIjIYg" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/QEic_WcpmBcwSdM1sIjIYg</a></li></ol></li><li><ol start="4"><li>容器、微服务与服务网格: <a href="https://mp.weixin.qq.com/s/nCeFHO857C_0TzC4xeJdvg" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/nCeFHO857C_0TzC4xeJdvg</a></li></ol></li><li><ol start="5"><li>GopherChina 2019 所有视频全部发布了: <a href="https://www.bilibili.com/video/av56099952" target="_blank" rel="noopener">https://www.bilibili.com/video/av56099952</a></li></ol></li><li><ol start="6"><li>go/Java 国密sm2签名验签：  <a href="https://segmentfault.com/a/1190000019528217" target="_blank" rel="noopener">https://segmentfault.com/a/1190000019528217</a></li></ol></li><li><ol start="7"><li>深入理解defer（上）defer基础：<a href="https://www.cnblogs.com/abozhang/p/11049304.html" target="_blank" rel="noopener">https://www.cnblogs.com/abozhang/p/11049304.html</a><br>4.银行业中台系统建设思路：<a href="https://mp.weixin.qq.com/s/QEic_WcpmBcwSdM1sIjIYg" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/QEic_WcpmBcwSdM1sIjIYg</a></li></ol></li><li><ol start="8"><li>容器、微服务与服务网格: <a href="https://mp.weixin.qq.com/s/nCeFHO857C_0TzC4xeJdvg" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/nCeFHO857C_0TzC4xeJdvg</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-06-19">gocn_news_2019-06-19</h2><ul><li><ol><li>Go 中 Defer, Panic 和 Recover: <a href="https://medium.com/rungo/defer-panic-and-recover-in-go-689dfa7f8802" target="_blank" rel="noopener">https://medium.com/rungo/defer-panic-and-recover-in-go-689dfa7f8802</a></li></ol></li><li><ol start="2"><li>Go 错误处理：<a href="https://medium.com/rungo/error-handling-in-go-f0125de052f0" target="_blank" rel="noopener">https://medium.com/rungo/error-handling-in-go-f0125de052f0</a></li></ol></li><li><ol start="3"><li>优化 Go 程序的简单技巧：<a href="https://stephen.sh/posts/quick-go-performance-improvements" target="_blank" rel="noopener">https://stephen.sh/posts/quick-go-performance-improvements</a></li></ol></li><li><ol start="4"><li>Service Mesh 简介：<a href="https://medium.com/@arjunrc143/introduction-to-service-mesh-4fc2b872d4f9" target="_blank" rel="noopener">https://medium.com/@arjunrc143/introduction-to-service-mesh-4fc2b872d4f9</a></li></ol></li><li><ol start="5"><li>系统架构系列（一）：如何用公式定义该概念? <a href="https://www.infoq.cn/article/fwhQ-dIN2xTUH6zNLYZp" target="_blank" rel="noopener">https://www.infoq.cn/article/fwhQ-dIN2xTUH6zNLYZp</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-06-18">gocn_news_2019-06-18</h2><ul><li><ol><li>曹大谈内存重排 <a href="https://mp.weixin.qq.com/s/r9yC78exkDbXs7Et2pC5PA" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/r9yC78exkDbXs7Et2pC5PA</a></li></ol></li><li><ol start="2"><li>Go语言调度器[译] <a href="https://pengrl.com/p/22729" target="_blank" rel="noopener">https://pengrl.com/p/22729</a></li></ol></li><li><ol start="3"><li>Go面向对象编程（译） <a href="https://juejin.im/post/5d065cad51882523be6a92f2" target="_blank" rel="noopener">https://juejin.im/post/5d065cad51882523be6a92f2</a></li></ol></li><li><ol start="4"><li>什么是缓存false sharing以及如何解决(Go示例)[译] <a href="https://juejin.im/post/5d0519e05188257a78764d5d" target="_blank" rel="noopener">https://juejin.im/post/5d0519e05188257a78764d5d</a></li></ol></li><li><ol start="5"><li>Go增删改查TCP服务器 <a href="https://medium.com/xxxvenom/go-tcp-crud-server-61fc34469640" target="_blank" rel="noopener">https://medium.com/xxxvenom/go-tcp-crud-server-61fc34469640</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-06-17">gocn_news_2019-06-17</h2><ul><li><ol><li>又一个 MongoDB Golang 教程 <a href="https://blog.eduardohitek.com/posts/ya-mongodb-tutorial" target="_blank" rel="noopener">https://blog.eduardohitek.com/posts/ya-mongodb-tutorial</a></li></ol></li><li><ol start="2"><li>Golang RabbitMQ 故障排查一例 <a href="https://ms2008.github.io/2019/06/16/golang-rabbitmq" target="_blank" rel="noopener">https://ms2008.github.io/2019/06/16/golang-rabbitmq</a></li></ol></li><li><ol start="3"><li>造轮子 | golang | 简易 http2 拨测工具 <a href="https://www.jianshu.com/p/b61aaeecb895" target="_blank" rel="noopener">https://www.jianshu.com/p/b61aaeecb895</a></li></ol></li><li><ol start="4"><li>Go defer 会有性能损耗，尽量不要用？ <a href="https://segmentfault.com/a/1190000019490834" target="_blank" rel="noopener">https://segmentfault.com/a/1190000019490834</a></li></ol></li><li><ol start="5"><li>轻量级 go 业务框架 sniper <a href="https://github.com/bilibili/sniper" target="_blank" rel="noopener">https://github.com/bilibili/sniper</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-06-16">gocn_news_2019-06-16</h2><ul><li><ol><li>Go 代码简洁之道 <a href="https://github.com/Pungyeon/clean-go" target="_blank" rel="noopener">https://github.com/Pungyeon/clean-go</a></li></ol></li><li><ol start="2"><li>Go 流处理库 <a href="https://github.com/reugn/go-streams" target="_blank" rel="noopener">https://github.com/reugn/go-streams</a></li></ol></li><li><ol start="3"><li>基于 Envoy、Cilium 和 eBPF 实现透明的混沌测试 <a href="https://arthurchiao.github.io/blog/transparent-chaos-testing-with-envoy-cilium-ebpf-zh/" target="_blank" rel="noopener">https://arthurchiao.github.io/blog/transparent-chaos-testing-with-envoy-cilium-ebpf-zh/</a></li></ol></li><li><ol start="4"><li>Go 对象健美操 <a href="https://dev.to/eminetto/object-calisthenics-in-golang-1h75" target="_blank" rel="noopener">https://dev.to/eminetto/object-calisthenics-in-golang-1h75</a></li></ol></li><li><ol start="5"><li>类型系统的数学之美 <a href="https://mp.weixin.qq.com/s/ieEewizkN7H-11z-PexkGw" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/ieEewizkN7H-11z-PexkGw</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-06-15">gocn_news_2019-06-15</h2><ul><li><ol><li>Golang 详解 defer <a href="https://juejin.im/post/5d034fabf265da1b971a716f" target="_blank" rel="noopener">https://juejin.im/post/5d034fabf265da1b971a716f</a></li></ol></li><li><ol start="2"><li>你是否犯了Go编码错误？ <a href="https://yourbasic.org/golang/gotcha" target="_blank" rel="noopener">https://yourbasic.org/golang/gotcha</a></li></ol></li><li><ol start="3"><li>使用互斥锁进行单元测试代码 <a href="https://www.reddit.com/r/golang/comments/c0pav8/unit_testing_code_with_mutexes/" target="_blank" rel="noopener">https://www.reddit.com/r/golang/comments/c0pav8/unit_testing_code_with_mutexes/</a></li></ol></li><li><ol start="4"><li>仔细研究Go (golang)类型系统 <a href="https://blog.ankuranand.com/2018/11/29/a-closer-look-at-go-golang-type-system/" target="_blank" rel="noopener">https://blog.ankuranand.com/2018/11/29/a-closer-look-at-go-golang-type-system/</a></li></ol></li><li><ol start="5"><li>服务端高并发分布式架构演进之路 <a href="https://segmentfault.com/a/1190000018626163" target="_blank" rel="noopener">https://segmentfault.com/a/1190000018626163</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-06-14">gocn_news_2019-06-14</h2><ul><li><ol><li>使用pprof优化http2服务 <a href="http://morsmachine.dk/http2-causalprof" target="_blank" rel="noopener">http://morsmachine.dk/http2-causalprof</a></li></ol></li><li><ol start="2"><li>Go并发模型之双重检查锁定 <a href="https://turtledev.in/posts/go-concurrency-patterns-double-checked-locking/" target="_blank" rel="noopener">https://turtledev.in/posts/go-concurrency-patterns-double-checked-locking/</a></li></ol></li><li><ol start="3"><li>使用go/analysis包徒手编写一个自定义的linter <a href="https://arslan.io/2019/06/13/using-go-analysis-to-write-a-custom-linter/" target="_blank" rel="noopener">https://arslan.io/2019/06/13/using-go-analysis-to-write-a-custom-linter/</a></li></ol></li><li><ol start="4"><li>生成go test的时序图 <a href="https://engineering.infinityworks.com/sequence-diagrams/" target="_blank" rel="noopener">https://engineering.infinityworks.com/sequence-diagrams/</a></li></ol></li><li><ol start="5"><li>geziyor:一款高效的web爬虫框架 <a href="https://github.com/geziyor/geziyor" target="_blank" rel="noopener">https://github.com/geziyor/geziyor</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-06-13">gocn_news_2019-06-13</h2><ul><li><ol><li>Go Unsafe包解析 <a href="https://medium.com/@blanchon.vincent/go-what-is-the-unsafe-package-d2443da36350" target="_blank" rel="noopener">https://medium.com/@blanchon.vincent/go-what-is-the-unsafe-package-d2443da36350</a></li></ol></li><li><ol start="2"><li>Go 结构体中指针的使用 <a href="https://medium.com/@blanchon.vincent/go-should-i-use-a-pointer-instead-of-a-copy-of-my-struct-44b43b104963" target="_blank" rel="noopener">https://medium.com/@blanchon.vincent/go-should-i-use-a-pointer-instead-of-a-copy-of-my-struct-44b43b104963</a></li></ol></li><li><ol start="3"><li>Go 1.12.6 和 Go 1.11.11 发布了 <a href="https://groups.google.com/forum/#!topic/golang-nuts/Rp1RUOu330Q" target="_blank" rel="noopener">https://groups.google.com/forum/#!topic/golang-nuts/Rp1RUOu330Q</a></li></ol></li><li><ol start="4"><li>构建Go代码的三种方法 <a href="https://www.perimeterx.com/blog/ok-lets-go/" target="_blank" rel="noopener">https://www.perimeterx.com/blog/ok-lets-go/</a></li></ol></li><li><ol start="5"><li>在Go中实现可恢复的异常系统 <a href="https://rauhl.com/2019/06/implementing-a-resumable-exception-system-in-go/" target="_blank" rel="noopener">https://rauhl.com/2019/06/implementing-a-resumable-exception-system-in-go/</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-06-12">gocn_news_2019-06-12</h2><ul><li><ol><li>[译] Go 内存分配器可视化指南 <a href="https://www.linuxzen.com/go-memory-allocator-visual-guide.html" target="_blank" rel="noopener">https://www.linuxzen.com/go-memory-allocator-visual-guide.html</a></li></ol></li><li><ol start="2"><li>Sugar：给 Go 项目的日志打印工具加点糖 <a href="https://github.com/chalvern/sugar/blob/master/README_zh.md" target="_blank" rel="noopener">https://github.com/chalvern/sugar/blob/master/README_zh.md</a></li></ol></li><li><ol start="3"><li>简析Go与Java内存管理的差异  <a href="https://mp.weixin.qq.com/s/0-2HW3oBIQqSOFnV1J87nQ" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/0-2HW3oBIQqSOFnV1J87nQ</a></li></ol></li><li><ol start="4"><li>Go HTML TO PDF转换工具 <a href="https://github.com/Mindinventory/Golang-HTMLTOPDF-Converter" target="_blank" rel="noopener">https://github.com/Mindinventory/Golang-HTMLTOPDF-Converter</a></li></ol></li><li><ol start="5"><li>[译] Go语言使用TCP keepalive <a href="https://www.pengrl.com/p/62417/" target="_blank" rel="noopener">https://www.pengrl.com/p/62417/</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-06-11">gocn_news_2019-06-11</h2><ul><li><ol><li>Go 的常量 <a href="https://dave.cheney.net/2019/06/10/constant-time" target="_blank" rel="noopener">https://dave.cheney.net/2019/06/10/constant-time</a></li></ol></li><li><ol start="2"><li>Go2错误处理提案：try还是check？ <a href="https://mp.weixin.qq.com/s/fpTM4zXCmGe2c03LhNbFRw" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/fpTM4zXCmGe2c03LhNbFRw</a></li></ol></li><li><ol start="3"><li>Go 配置文件热加载 <a href="https://segmentfault.com/a/1190000019436438" target="_blank" rel="noopener">https://segmentfault.com/a/1190000019436438</a></li></ol></li><li><ol start="4"><li>Rabbit 轻量级 Go 编译平台 <a href="https://github.com/Clivern/Rabbit" target="_blank" rel="noopener">https://github.com/Clivern/Rabbit</a></li></ol></li><li><ol start="5"><li>Go 操作 CSV 数据 <a href="https://medium.com/@barunthapa/working-with-csv-in-go-50a4f540e623" target="_blank" rel="noopener">https://medium.com/@barunthapa/working-with-csv-in-go-50a4f540e623</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-06-10">gocn_news_2019-06-10</h2><ul><li><ol><li>理解Go sync.Pool设计 <a href="https://medium.com/@blanchon.vincent/go-understand-the-design-of-sync-pool-2dde3024e277" target="_blank" rel="noopener">https://medium.com/@blanchon.vincent/go-understand-the-design-of-sync-pool-2dde3024e277</a></li></ol></li><li><ol start="2"><li>Go语言之美 <a href="https://telescope.ac/battlefield/the-beauty-of-go-1" target="_blank" rel="noopener">https://telescope.ac/battlefield/the-beauty-of-go-1</a></li></ol></li><li><ol start="3"><li>一种新的在Go中实现DI的方式 <a href="https://medium.com/@elliotchance/a-new-simpler-way-to-do-dependency-injection-in-go-9e191bef50d5" target="_blank" rel="noopener">https://medium.com/@elliotchance/a-new-simpler-way-to-do-dependency-injection-in-go-9e191bef50d5</a></li></ol></li><li><ol start="4"><li>在Go中实现高效位图索引 <a href="https://badootech.badoo.com/bitmap-indexes-in-go-unbelievable-search-speed-bb4a6b00851" target="_blank" rel="noopener">https://badootech.badoo.com/bitmap-indexes-in-go-unbelievable-search-speed-bb4a6b00851</a></li></ol></li><li><ol start="5"><li>Klog: 受Google Stadia启发的Go云游戏引擎 <a href="https://github.com/giongto35/cloud-game" target="_blank" rel="noopener">https://github.com/giongto35/cloud-game</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-06-08">gocn_news_2019-06-08</h2><ul><li><ol><li>利用gopackage进行包的捕获、注入和分析 <a href="https://colobu.com/2019/06/01/packet-capture-injection-and-analysis-gopacket/" target="_blank" rel="noopener">https://colobu.com/2019/06/01/packet-capture-injection-and-analysis-gopacket/</a></li></ol></li><li><ol start="2"><li>配置sql.DB获得更好的性能 <a href="https://colobu.com/2019/05/27/configuring-sql-DB-for-better-performance/" target="_blank" rel="noopener">https://colobu.com/2019/05/27/configuring-sql-DB-for-better-performance/</a></li></ol></li><li><ol start="3"><li>如何写出优雅的Golang代码 <a href="https://draveness.me/golang-101" target="_blank" rel="noopener">https://draveness.me/golang-101</a></li></ol></li><li><ol start="4"><li>Go中实现Flutter <a href="https://divan.dev/tags/dart/" target="_blank" rel="noopener">https://divan.dev/tags/dart/</a></li></ol></li><li><ol start="5"><li>2019年最火热的Golang项目 <a href="https://juejin.im/post/5cfa2cfef265da1bcc19333e" target="_blank" rel="noopener">https://juejin.im/post/5cfa2cfef265da1bcc19333e</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-06-07">gocn_news_2019-06-07</h2><ul><li><ol><li>从0到10亿，微信后台架构及基础设施设计与实践！<a href="https://mp.weixin.qq.com/s/vDhDa9PD_wu0lYvaDff8vw" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/vDhDa9PD_wu0lYvaDff8vw</a></li></ol></li><li><ol start="2"><li>Go 1.13带来什么新特性 <a href="https://docs.google.com/presentation/d/e/2PACX-1vRo5urog_B76BcnQbIo7I391MZUKFj7l3gku6hypJ-WK1KCFw40A7BiM6NOVsqD17sA9jS7GyzCfnN4/pub" target="_blank" rel="noopener">https://docs.google.com/presentation/d/e/2PACX-1vRo5urog_B76BcnQbIo7I391MZUKFj7l3gku6hypJ-WK1KCFw40A7BiM6NOVsqD17sA9jS7GyzCfnN4/pub</a></li></ol></li><li><ol start="3"><li>一起用Go写一个SQL解析器 <a href="https://marianogappa.github.io/software/2019/06/05/lets-build-a-sql-parser-in-go/" target="_blank" rel="noopener">https://marianogappa.github.io/software/2019/06/05/lets-build-a-sql-parser-in-go/</a></li></ol></li><li><ol start="4"><li>当我们在谈论高并发的时候究竟在谈什么? <a href="https://segmentfault.com/a/1190000019360335" target="_blank" rel="noopener">https://segmentfault.com/a/1190000019360335</a></li></ol></li><li><ol start="5"><li>做数据分析不得不看的书有哪些？<a href="https://www.zhihu.com/question/19640095/answer/585334541" target="_blank" rel="noopener">https://www.zhihu.com/question/19640095/answer/585334541</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-06-06">gocn_news_2019-06-06</h2><ul><li><ol><li>Go语言开发-过程式编程-Panic和Recover <a href="https://plumwine.me/programming-in-go-procedural-programming-panic-recover/" target="_blank" rel="noopener">https://plumwine.me/programming-in-go-procedural-programming-panic-recover/</a></li></ol></li><li><ol start="2"><li>基于Go SDK操作京东云对象存储OSS的入门指南  <a href="http://mp.weixin.qq.com/s?__biz=MzU1OTgxMTg2Nw==&amp;mid=2247484967&amp;idx=1&amp;sn=b85abe2d4162c77cd527d18bd4f6d235" target="_blank" rel="noopener">http://mp.weixin.qq.com/s?__biz=MzU1OTgxMTg2Nw==&amp;mid=2247484967&amp;idx=1&amp;sn=b85abe2d4162c77cd527d18bd4f6d235</a></li></ol></li><li><ol start="3"><li>Goroutine 泄露排查  <a href="https://ms2008.github.io/2019/06/02/golang-goroutine-leak/" target="_blank" rel="noopener">https://ms2008.github.io/2019/06/02/golang-goroutine-leak/</a></li></ol></li><li><ol start="4"><li>golang cobra的一些笔记  <a href="https://zhangguanzhang.github.io/2019/06/02/cobra/" target="_blank" rel="noopener">https://zhangguanzhang.github.io/2019/06/02/cobra/</a></li></ol></li><li><ol start="5"><li>从 GFS 失败的架构设计来看一致性的重要性 <a href="https://mp.weixin.qq.com/s/GuJ6VqZJy3ONaVOWvQT9kg" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/GuJ6VqZJy3ONaVOWvQT9kg</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-06-05">gocn_news_2019-06-05</h2><ul><li><ol><li>东南亚的超级APP是如何用Go打造Grab的路径规划和ETA引擎 <a href="https://mp.weixin.qq.com/s/AH3CmxnL-bploROCXu5KBQ" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/AH3CmxnL-bploROCXu5KBQ</a></li></ol></li><li><ol start="2"><li>Apache Dubbo Go 语言实现 <a href="https://mp.weixin.qq.com/s/UmPfo0sqTTRGaT3kMh2biw" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/UmPfo0sqTTRGaT3kMh2biw</a></li></ol></li><li><ol start="3"><li>深度解密Go语言之unsafe <a href="https://mp.weixin.qq.com/s/OO-kwB4Fp_FnCaNXwGJoEw" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/OO-kwB4Fp_FnCaNXwGJoEw</a></li></ol></li><li><ol start="4"><li>Golang 闭包内的外部变量 <a href="https://jingwei.link/2019/06/01/golang-outer-variable-in-clousure.html" target="_blank" rel="noopener">https://jingwei.link/2019/06/01/golang-outer-variable-in-clousure.html</a></li></ol></li><li><ol start="5"><li>MySQL 索引的原理与应用：索引类型，存储结构与锁 <a href="https://zhuanlan.zhihu.com/p/67832788" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/67832788</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-06-04">gocn_news_2019-06-04</h2><ul><li><ol><li>Go module机制下升级major版本号的实践：<a href="https://tonybai.com/2019/06/03/the-practice-of-upgrading-major-version-under-go-module/" target="_blank" rel="noopener">https://tonybai.com/2019/06/03/the-practice-of-upgrading-major-version-under-go-module/</a></li></ol></li><li><ol start="2"><li>Go 代码可视化：<a href="https://divan.dev/posts/visual_programming_go/" target="_blank" rel="noopener">https://divan.dev/posts/visual_programming_go/</a></li></ol></li><li><ol start="3"><li>Go 错误处理：<a href="http://blogs.remotepanda.com/error-handling-in-golang/" target="_blank" rel="noopener">http://blogs.remotepanda.com/error-handling-in-golang/</a></li></ol></li><li><ol start="4"><li>边缘计算能给银行带来什么改变？：<a href="https://www.raconteur.net/finance/edge-computing-banking" target="_blank" rel="noopener">https://www.raconteur.net/finance/edge-computing-banking</a></li></ol></li><li><ol start="5"><li>MongoDB 十分钟入门教程：<a href="https://medium.com/free-code-camp/learn-mongodb-a4ce205e7739" target="_blank" rel="noopener">https://medium.com/free-code-camp/learn-mongodb-a4ce205e7739</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-06-03">gocn_news_2019-06-03</h2><ul><li><ol><li>TDD 基础：红绿重构模式 <a href="https://medium.com/@syukri.mullia/basic-tdd-red-green-refactor-pattern-4046381b95a6" target="_blank" rel="noopener">https://medium.com/@syukri.mullia/basic-tdd-red-green-refactor-pattern-4046381b95a6</a></li></ol></li><li><ol start="2"><li>红黑树原理详解及 Golang 实现 <a href="https://www.cnblogs.com/ailumiyana/p/10963658.html" target="_blank" rel="noopener">https://www.cnblogs.com/ailumiyana/p/10963658.html</a></li></ol></li><li><ol start="3"><li>如何在 Go 中优雅关闭子进程 <a href="http://www.songjiayang.com/posts/go-zhong-you-ya-guan-bi-zi-jin-cheng" target="_blank" rel="noopener">http://www.songjiayang.com/posts/go-zhong-you-ya-guan-bi-zi-jin-cheng</a></li></ol></li><li><ol start="4"><li>结合自己的经历谈谈怎么更好地学习Go语言 <a href="https://juejin.im/post/5cf0cce8e51d45777b1a3d2d" target="_blank" rel="noopener">https://juejin.im/post/5cf0cce8e51d45777b1a3d2d</a></li></ol></li><li><ol start="5"><li>k8s 环境部署镜像回滚工具 <a href="https://github.com/Trendyol/easy-rollback" target="_blank" rel="noopener">https://github.com/Trendyol/easy-rollback</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-06-02">gocn_news_2019-06-02</h2><ul><li><ol><li>Go 栈管理 <a href="https://medium.com/@blanchon.vincent/go-how-does-the-goroutine-stack-size-evolve-447fc02085e5" target="_blank" rel="noopener">https://medium.com/@blanchon.vincent/go-how-does-the-goroutine-stack-size-evolve-447fc02085e5</a></li></ol></li><li><ol start="2"><li>Go 中的 TCP Keepalive <a href="https://thenotexpert.com/golang-tcp-keepalive" target="_blank" rel="noopener">https://thenotexpert.com/golang-tcp-keepalive</a></li></ol></li><li><ol start="3"><li>那些偶尔失败的测试 <a href="https://samsaffron.com/archive/2019/05/15/tests-that-sometimes-fail" target="_blank" rel="noopener">https://samsaffron.com/archive/2019/05/15/tests-that-sometimes-fail</a></li></ol></li><li><ol start="4"><li>Go 是不是只属于 Google <a href="https://developers.slashdot.org/story/19/05/24/2349236/is-go-googles-programming-language-not-ours" target="_blank" rel="noopener">https://developers.slashdot.org/story/19/05/24/2349236/is-go-googles-programming-language-not-ours</a></li></ol></li><li><ol start="5"><li>SSH Web 管理工具 felix <a href="https://github.com/dejavuzhou/felix" target="_blank" rel="noopener">https://github.com/dejavuzhou/felix</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-06-01">gocn_news_2019-06-01</h2><ul><li><ol><li>Golang Configor 配置文件工具 <a href="https://www.jianshu.com/p/f826d2cc361b" target="_blank" rel="noopener">https://www.jianshu.com/p/f826d2cc361b</a></li></ol></li><li><ol start="2"><li>Go 小知识之 Go 中如何使用 set <a href="https://juejin.im/post/5ceffeddf265da1bc8540df5" target="_blank" rel="noopener">https://juejin.im/post/5ceffeddf265da1bc8540df5</a></li></ol></li><li><ol start="3"><li>如何使用运算符进行数学运算 <a href="https://www.digitalocean.com/community/tutorials/how-to-do-math-in-go-with-operators" target="_blank" rel="noopener">https://www.digitalocean.com/community/tutorials/how-to-do-math-in-go-with-operators</a></li></ol></li><li><ol start="4"><li>在OKD中创建Source-to-Image构建管道 <a href="https://opensource.com/article/19/5/creating-source-image-build-pipeline-okd" target="_blank" rel="noopener">https://opensource.com/article/19/5/creating-source-image-build-pipeline-okd</a></li></ol></li><li><ol start="5"><li>我不知道cpu是如何工作的，所以我用代码模拟了一个 <a href="https://djhworld.github.io/post/2019/05/21/i-dont-know-how-cpus-work-so-i-simulated-one-in-code/" target="_blank" rel="noopener">https://djhworld.github.io/post/2019/05/21/i-dont-know-how-cpus-work-so-i-simulated-one-in-code/</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-05-31">gocn_news_2019-05-31</h2><ul><li><ol><li>500字内让你搞明白Go的指针 <a href="https://medium.com/@hiepnguyen_2315/understand-go-pointers-in-less-than-500-words-db2d4e5ad918" target="_blank" rel="noopener">https://medium.com/@hiepnguyen_2315/understand-go-pointers-in-less-than-500-words-db2d4e5ad918</a></li></ol></li><li><ol start="2"><li>理解Go的内存分配:栈和堆 <a href="https://www.youtube.com/watch?v=ZMZpH4yT7M0" target="_blank" rel="noopener">https://www.youtube.com/watch?v=ZMZpH4yT7M0</a></li></ol></li><li><ol start="3"><li>channel广播的新玩法 <a href="https://science.mroman.ch/gobroadcastchannels.html" target="_blank" rel="noopener">https://science.mroman.ch/gobroadcastchannels.html</a></li></ol></li><li><ol start="4"><li>unioffice: office三大件操作库 <a href="https://github.com/unidoc/unioffice" target="_blank" rel="noopener">https://github.com/unidoc/unioffice</a></li></ol></li><li><ol start="5"><li>wasmer:最快的WebAssembly运行库 <a href="https://medium.com/wasmer/announcing-the-fastest-webassembly-runtime-for-go-wasmer-19832d77c050" target="_blank" rel="noopener">https://medium.com/wasmer/announcing-the-fastest-webassembly-runtime-for-go-wasmer-19832d77c050</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-05-30">gocn_news_2019-05-30</h2><ul><li><ol><li>Go，Google Functions和Gitlab-ci完美结合 <a href="https://dev.to/renatosuero/go-google-functions-and-gitlab-ci-a-perfect-combination-4lao" target="_blank" rel="noopener">https://dev.to/renatosuero/go-google-functions-and-gitlab-ci-a-perfect-combination-4lao</a></li></ol></li><li><ol start="2"><li>Go实现的编译和计算表达式的引擎 <a href="https://github.com/antonmedv/expr" target="_blank" rel="noopener">https://github.com/antonmedv/expr</a></li></ol></li><li><ol start="3"><li>Go的内存管理 <a href="https://povilasv.me/go-memory-management-part-2/" target="_blank" rel="noopener">https://povilasv.me/go-memory-management-part-2/</a></li></ol></li><li><ol start="4"><li>Go中结构体的标记字段 <a href="https://itnext.io/creating-your-own-struct-field-tags-in-go-c6c86727eff" target="_blank" rel="noopener">https://itnext.io/creating-your-own-struct-field-tags-in-go-c6c86727eff</a></li></ol></li><li><ol start="5"><li>Golang并发中犯的错误 <a href="https://dev.to/dannypsnl/the-go-concurrency-bug-i-made-3dma" target="_blank" rel="noopener">https://dev.to/dannypsnl/the-go-concurrency-bug-i-made-3dma</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-05-29">gocn_news_2019-05-29</h2><ul><li><ol><li>[译]Go如何优雅的处理异常 <a href="https://mp.weixin.qq.com/s/GEWy8AQg5WmlX3POearpZQ" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/GEWy8AQg5WmlX3POearpZQ</a></li></ol></li><li><ol start="2"><li>Micro源码系列 - Go-Micro服务的构造过程 <a href="https://gocn.vip/question/3379" target="_blank" rel="noopener">https://gocn.vip/question/3379</a></li></ol></li><li><ol start="3"><li>Go内存管理 <a href="https://povilasv.me/go-memory-management-part-2/" target="_blank" rel="noopener">https://povilasv.me/go-memory-management-part-2/</a></li></ol></li><li><ol start="4"><li>gobox中的异常定义和杂项工具 <a href="https://mp.weixin.qq.com/s/F-T9aoo3-DMAEr8-dzsenQ" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/F-T9aoo3-DMAEr8-dzsenQ</a></li></ol></li><li><ol start="5"><li>Go 1.12 移植到 RISC-V 的进展 <a href="https://www.reddit.com/r/golang/comments/bu4l0p/progress_on_the_go_112_port_to_riscv/" target="_blank" rel="noopener">https://www.reddit.com/r/golang/comments/bu4l0p/progress_on_the_go_112_port_to_riscv/</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-05-28">gocn_news_2019-05-28</h2><ul><li><ol><li>是否使用 ORM  <a href="https://eli.thegreenplace.net/2019/to-orm-or-not-to-orm/" target="_blank" rel="noopener">https://eli.thegreenplace.net/2019/to-orm-or-not-to-orm/</a></li></ol></li><li><ol start="2"><li>谈谈 Golang 中的 Data Race（续）<a href="https://ms2008.github.io/2019/05/22/golang-data-race-cont/" target="_blank" rel="noopener">https://ms2008.github.io/2019/05/22/golang-data-race-cont/</a></li></ol></li><li><ol start="3"><li>GO小知识之如何做JSON美化 <a href="https://juejin.im/post/5ceb3f6df265da1b7401da5e" target="_blank" rel="noopener">https://juejin.im/post/5ceb3f6df265da1b7401da5e</a></li></ol></li><li><ol start="4"><li>go-micro之源码剖析: Registry <a href="https://juejin.im/post/5cebafe6f265da1bb80c0cc7" target="_blank" rel="noopener">https://juejin.im/post/5cebafe6f265da1bb80c0cc7</a></li></ol></li><li><ol start="5"><li>Go 的 PDF 处理库 <a href="https://github.com/unidoc/unipdf" target="_blank" rel="noopener">https://github.com/unidoc/unipdf</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-05-27">gocn_news_2019-05-27</h2><ul><li><ol><li>《Go 同步和并发设计模式》培训会后整理 <a href="https://mp.weixin.qq.com/s/LSWICPpGcRaKUBtLzgOz_Q" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/LSWICPpGcRaKUBtLzgOz_Q</a></li></ol></li><li><ol start="2"><li>VictoriaMetrics高效时序数据库 <a href="https://github.com/VictoriaMetrics/VictoriaMetrics" target="_blank" rel="noopener">https://github.com/VictoriaMetrics/VictoriaMetrics</a></li></ol></li><li><ol start="3"><li>meshRPC: 一个面向Go语言的Service Mesh RPC框架 <a href="https://github.com/astranet/meshRPC" target="_blank" rel="noopener">https://github.com/astranet/meshRPC</a></li></ol></li><li><ol start="4"><li>gotree: 一个垂直分布式框架 <a href="https://github.com/8treenet/gotree" target="_blank" rel="noopener">https://github.com/8treenet/gotree</a></li></ol></li><li><ol start="5"><li>深入Go并发编程研讨课Workshop <a href="https://github.com/smallnest/dive-to-gosync-workshop" target="_blank" rel="noopener">https://github.com/smallnest/dive-to-gosync-workshop</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-05-26">gocn_news_2019-05-26</h2><ul><li><ol><li>搞定Go单元测试(一)——基础原理 <a href="https://juejin.im/post/5ce93447e51d45775746b8b0" target="_blank" rel="noopener">https://juejin.im/post/5ce93447e51d45775746b8b0</a></li></ol></li><li><ol start="2"><li>Golang 读写锁RWMutex 互斥锁Mutex 源码详解 <a href="https://www.cnblogs.com/linkstar/p/10913502.html" target="_blank" rel="noopener">https://www.cnblogs.com/linkstar/p/10913502.html</a></li></ol></li><li><ol start="3"><li>Go语言中使用切片(slice)实现一个Vector容器 <a href="https://www.cnblogs.com/aiandbigdata/p/10913336.html" target="_blank" rel="noopener">https://www.cnblogs.com/aiandbigdata/p/10913336.html</a></li></ol></li><li><ol start="4"><li>gopl 反射2 <a href="https://blog.51cto.com/steed/2398744" target="_blank" rel="noopener">https://blog.51cto.com/steed/2398744</a></li></ol></li><li><ol start="5"><li>知乎千万级高性能长连接网关揭秘 <a href="https://mp.weixin.qq.com/s/DVsH9rNQS4DQHuXoRixalQ" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/DVsH9rNQS4DQHuXoRixalQ</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-05-25">gocn_news_2019-05-25</h2><ul><li><ol><li>近期一个Golang项目的测试实践全记录 <a href="https://mp.weixin.qq.com/s/3Sngh1Y_HPpttp64Pxm6uw" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/3Sngh1Y_HPpttp64Pxm6uw</a></li></ol></li><li><ol start="2"><li>理解Go中的布尔类型 <a href="https://www.digitalocean.com/community/tutorials/understanding-boolean-logic-in-go" target="_blank" rel="noopener">https://www.digitalocean.com/community/tutorials/understanding-boolean-logic-in-go</a></li></ol></li><li><ol start="3"><li>开源代码protoactor-go源码分析-async schedule <a href="https://mp.weixin.qq.com/s/aHJScjcrrJyYlIDcA00P0g" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/aHJScjcrrJyYlIDcA00P0g</a></li></ol></li><li><ol start="4"><li>深入理解Go中panic和recover <a href="http://t.cn/E9d04Bm" target="_blank" rel="noopener">http://t.cn/E9d04Bm</a></li></ol></li><li><ol start="5"><li>Go字符串格式教程 <a href="https://medium.com/rungo/string-formatting-in-go-dd752ff7f60" target="_blank" rel="noopener">https://medium.com/rungo/string-formatting-in-go-dd752ff7f60</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-05-24">gocn_news_2019-05-24</h2><ul><li><ol><li>Go正朝着成为下一种企业编程语言的方向发展 <a href="https://hackernoon.com/go-is-on-a-trajectory-to-become-the-next-enterprise-programming-language-3b75d70544e" target="_blank" rel="noopener">https://hackernoon.com/go-is-on-a-trajectory-to-become-the-next-enterprise-programming-language-3b75d70544e</a></li></ol></li><li><ol start="2"><li>小米开源数据库中间件gaea <a href="https://mp.weixin.qq.com/s/krA3cqvpOgPkte3PBM3e-Q" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/krA3cqvpOgPkte3PBM3e-Q</a></li></ol></li><li><ol start="3"><li>Rancher发布Rio：为Kubernetes打造极简MicroPaaS平台 <a href="https://mp.weixin.qq.com/s/xsFvPLH_6kP3_ukj3Rf2xg" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/xsFvPLH_6kP3_ukj3Rf2xg</a></li></ol></li><li><ol start="4"><li>HTTP/2 in GO(五)–大结局 <a href="https://mp.weixin.qq.com/s/qaqN4Eqndjg95TPBOC4d_g" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/qaqN4Eqndjg95TPBOC4d_g</a></li></ol></li><li><ol start="5"><li>Istio 庖丁解牛四：pilot discovery  <a href="https://mp.weixin.qq.com/s/navKSzbQnkN8r0GZSPM7aQ" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/navKSzbQnkN8r0GZSPM7aQ</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-05-23">gocn_news_2019-05-23</h2><ul><li><ol><li>Wide时隔2年发布新版 <a href="https://www.oschina.net/news/106912/wide-1-6-0-released" target="_blank" rel="noopener">https://www.oschina.net/news/106912/wide-1-6-0-released</a></li></ol></li><li><ol start="2"><li>zinx：基于Golang的轻量级TCP并发服务器框架 <a href="https://www.jianshu.com/p/23d07c0a28e5" target="_blank" rel="noopener">https://www.jianshu.com/p/23d07c0a28e5</a></li></ol></li><li><ol start="3"><li>Golang项目的测试实践 <a href="https://studygolang.com/articles/20602" target="_blank" rel="noopener">https://studygolang.com/articles/20602</a></li></ol></li><li><ol start="4"><li>GIN的TIMEOUT MIDDLEWARE实现(续) <a href="http://vearne.cc/archives/39135" target="_blank" rel="noopener">http://vearne.cc/archives/39135</a></li></ol></li><li><ol start="5"><li>到处是map、flatMap，啥意思？ <a href="https://mp.weixin.qq.com/s/sOAq_QNgVSsZ2nvikiMFBA" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/sOAq_QNgVSsZ2nvikiMFBA</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-05-22">gocn_news_2019-05-22</h2><ul><li><ol><li>深度解密Go语言之map <a href="https://mp.weixin.qq.com/s/2CDpE5wfoiNXm1agMAq4wA" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/2CDpE5wfoiNXm1agMAq4wA</a></li></ol></li><li><ol start="2"><li>[译] 我是如何在大型代码库上使用 pprof 调查 Go 中的内存泄漏 <a href="https://juejin.im/post/5ce11d1ee51d4510601117fd" target="_blank" rel="noopener">https://juejin.im/post/5ce11d1ee51d4510601117fd</a></li></ol></li><li><ol start="3"><li>Golang 多版本管理器 <a href="https://github.com/voidint/g" target="_blank" rel="noopener">https://github.com/voidint/g</a></li></ol></li><li><ol start="4"><li>Go面试必考题目之method篇 <a href="https://mp.weixin.qq.com/s/US7MnIJfekJRazioxyWQhg" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/US7MnIJfekJRazioxyWQhg</a></li></ol></li><li><ol start="5"><li>异常检测的N种方法，阿里工程师都盘出来了 <a href="https://mp.weixin.qq.com/s/w7SbAHxZsmHqFtTG8ZAXNg" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/w7SbAHxZsmHqFtTG8ZAXNg</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-05-21">gocn_news_2019-05-21</h2><ul><li><ol><li>golang http/transport 代码分析 <a href="http://www.cnblogs.com/gaorong/p/10887021.html" target="_blank" rel="noopener">http://www.cnblogs.com/gaorong/p/10887021.html</a></li></ol></li><li><ol start="2"><li>Kafka两级调度实现分布式协调微服务任务分配Golang版 <a href="https://segmentfault.com/a/1190000019244065" target="_blank" rel="noopener">https://segmentfault.com/a/1190000019244065</a></li></ol></li><li><ol start="3"><li>如何在 Go 中读取配置文件和环境变量 <a href="https://medium.com/@bnprashanth256/reading-configuration-files-and-environment-variables-in-go-golang-c2607f912b63" target="_blank" rel="noopener">https://medium.com/@bnprashanth256/reading-configuration-files-and-environment-variables-in-go-golang-c2607f912b63</a></li></ol></li><li><ol start="4"><li>mongoDB wiredTiger存储引擎总结 <a href="https://juejin.im/post/5ce29166f265da1bac3fe945" target="_blank" rel="noopener">https://juejin.im/post/5ce29166f265da1bac3fe945</a></li></ol></li><li><ol start="5"><li>使用 Flagger，istio 和 GitOps Pipeline 自动管理 Kubernetes  <a href="https://www.weave.works/blog/automated-canary-management-to-kubernetes-with-flagger-istio-and-gitops-pipelines" target="_blank" rel="noopener">https://www.weave.works/blog/automated-canary-management-to-kubernetes-with-flagger-istio-and-gitops-pipelines</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-05-19">gocn_news_2019-05-19</h2><ul><li><ol><li>Go有什么，没有什么 <a href="https://medium.com/@amritpandey/what-go-programming-language-does-and-does-not-have-ed6a9f83ab2d" target="_blank" rel="noopener">https://medium.com/@amritpandey/what-go-programming-language-does-and-does-not-have-ed6a9f83ab2d</a></li></ol></li><li><ol start="2"><li>理解 Go map <a href="https://www.digitalocean.com/community/tutorials/understanding-maps-in-go" target="_blank" rel="noopener">https://www.digitalocean.com/community/tutorials/understanding-maps-in-go</a></li></ol></li><li><ol start="3"><li>我应该使用指针而不是结构体的拷贝吗 <a href="https://medium.com/@blanchon.vincent/go-should-i-use-a-pointer-instead-of-a-copy-of-my-struct-44b43b104963" target="_blank" rel="noopener">https://medium.com/@blanchon.vincent/go-should-i-use-a-pointer-instead-of-a-copy-of-my-struct-44b43b104963</a></li></ol></li><li><ol start="4"><li>goss:快速和简单的服务器测试/验证工具 <a href="https://github.com/SimonBaeumer/goss" target="_blank" rel="noopener">https://github.com/SimonBaeumer/goss</a></li></ol></li><li><ol start="5"><li>2019 InfluxDB 权威指南 <a href="https://medium.com/schkn/the-definitive-guide-to-influxdb-in-2019-devconnected-23f5661002c8" target="_blank" rel="noopener">https://medium.com/schkn/the-definitive-guide-to-influxdb-in-2019-devconnected-23f5661002c8</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-05-18">gocn_news_2019-05-18</h2><ul><li><ol><li>谈谈Go语言字符串 <a href="https://mp.weixin.qq.com/s/pjv1FNl0bxl3dwk6hYhzBg" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/pjv1FNl0bxl3dwk6hYhzBg</a></li></ol></li><li><ol start="2"><li>了解Go中的实际并发错误 <a href="https://blog.acolyer.org/2019/05/17/understanding-real-world-concurrency-bugs-in-go/" target="_blank" rel="noopener">https://blog.acolyer.org/2019/05/17/understanding-real-world-concurrency-bugs-in-go/</a></li></ol></li><li><ol start="3"><li>实战Go内存泄露 <a href="https://mp.weixin.qq.com/s/d0olIiZgZNyZsO-OZDiEoA" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/d0olIiZgZNyZsO-OZDiEoA</a></li></ol></li><li><ol start="4"><li>微服务工具包 <a href="https://github.com/Clivern/Hippo" target="_blank" rel="noopener">https://github.com/Clivern/Hippo</a></li></ol></li><li><ol start="5"><li>一个mysql死锁场景分析 <a href="https://segmentfault.com/a/1190000019221604" target="_blank" rel="noopener">https://segmentfault.com/a/1190000019221604</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-05-17">gocn_news_2019-05-17</h2><ul><li><ol><li>快速测试:包装*testing.T以提高效率 <a href="https://rogpeppe.wordpress.com/2019/05/15/quicktest-wrap-testing-t-for-fun-and-profit/" target="_blank" rel="noopener">https://rogpeppe.wordpress.com/2019/05/15/quicktest-wrap-testing-t-for-fun-and-profit/</a></li></ol></li><li><ol start="2"><li>基于2PC和延迟更新完成分布式消息队列多条事务 <a href="https://juejin.im/post/5cde20f3f265da7e7b3c91aa" target="_blank" rel="noopener">https://juejin.im/post/5cde20f3f265da7e7b3c91aa</a></li></ol></li><li><ol start="3"><li>谈一谈 Go 和 Syscall <a href="https://juejin.im/post/5cdd56f6e51d456e8b07de5e" target="_blank" rel="noopener">https://juejin.im/post/5cdd56f6e51d456e8b07de5e</a></li></ol></li><li><ol start="4"><li>Go 模糊测试 <a href="https://docs.google.com/document/d/1N-12_6YBPpF9o4_Zys_E_ZQndmD06wQVAM_0y9nZUIE/edit" target="_blank" rel="noopener">https://docs.google.com/document/d/1N-12_6YBPpF9o4_Zys_E_ZQndmD06wQVAM_0y9nZUIE/edit</a></li></ol></li><li><ol start="5"><li>GO小知识之如何做JSON美化 <a href="https://zhuanlan.zhihu.com/p/65905512" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/65905512</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-05-16">gocn_news_2019-05-16</h2><ul><li><ol><li>高可用分布式存储etcd的实现原理 <a href="https://draveness.me/etcd-introduction" target="_blank" rel="noopener">https://draveness.me/etcd-introduction</a></li></ol></li><li><ol start="2"><li>Go中的HTTP请求处理概述 <a href="https://www.alexedwards.net/blog/a-recap-of-request-handling" target="_blank" rel="noopener">https://www.alexedwards.net/blog/a-recap-of-request-handling</a></li></ol></li><li><ol start="3"><li>Go和TensorFlow实现的个人照片管理工具 <a href="https://dev.to/lastzero/photoprism-personal-photo-management-powered-by-go-tensorflow-vuetify-3pl4" target="_blank" rel="noopener">https://dev.to/lastzero/photoprism-personal-photo-management-powered-by-go-tensorflow-vuetify-3pl4</a></li></ol></li><li><ol start="4"><li>Go中类型断言的错误处理 <a href="https://golang.works-hub.com/learn/rest-api-error-handling-in-go-behavioural-type-assertion-b13f8" target="_blank" rel="noopener">https://golang.works-hub.com/learn/rest-api-error-handling-in-go-behavioural-type-assertion-b13f8</a></li></ol></li><li><ol start="5"><li>深入理解mysql-innodb_ruby工具 <a href="https://juejin.im/post/5cd3cbfb518825358f3e5914" target="_blank" rel="noopener">https://juejin.im/post/5cd3cbfb518825358f3e5914</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-05-15">gocn_news_2019-05-15</h2><ul><li><ol><li>ConnectLoop模型 <a href="https://alex.dzyoba.com/blog/go-connect-loop/" target="_blank" rel="noopener">https://alex.dzyoba.com/blog/go-connect-loop/</a></li></ol></li><li><ol start="2"><li>在Go中使用PostgreSQL的JSONB <a href="https://www.alexedwards.net/blog/using-postgresql-jsonb" target="_blank" rel="noopener">https://www.alexedwards.net/blog/using-postgresql-jsonb</a></li></ol></li><li><ol start="3"><li>性能优化之罪 <a href="http://t.cn/EKKhpYY" target="_blank" rel="noopener">http://t.cn/EKKhpYY</a></li></ol></li><li><ol start="4"><li>ktop: Kubernetes可视化监控工具 <a href="https://github.com/ynqa/ktop" target="_blank" rel="noopener">https://github.com/ynqa/ktop</a></li></ol></li><li><ol start="5"><li>radix:高性能字符串排序库 <a href="https://github.com/yourbasic/radix" target="_blank" rel="noopener">https://github.com/yourbasic/radix</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-05-14">gocn_news_2019-05-14</h2><ul><li><ol><li>Go playground 支持第三方引用包 <a href="https://github.com/golang/go/issues/31944" target="_blank" rel="noopener">https://github.com/golang/go/issues/31944</a></li></ol></li><li><ol start="2"><li>Go 垃圾回收: GC Traces <a href="https://www.ardanlabs.com/blog/2019/05/garbage-collection-in-go-part2-gctraces.html" target="_blank" rel="noopener">https://www.ardanlabs.com/blog/2019/05/garbage-collection-in-go-part2-gctraces.html</a></li></ol></li><li><ol start="3"><li>Go generate and AST <a href="https://lailin.xyz/post/41140.html" target="_blank" rel="noopener">https://lailin.xyz/post/41140.html</a></li></ol></li><li><ol start="4"><li>Go Channel 实现原理 <a href="https://segmentfault.com/a/1190000019172554" target="_blank" rel="noopener">https://segmentfault.com/a/1190000019172554</a></li></ol></li><li><ol start="5"><li>纯 Go 实现 WebRTC 库 <a href="https://github.com/pion/webrtc" target="_blank" rel="noopener">https://github.com/pion/webrtc</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-05-13">gocn_news_2019-05-13</h2><ul><li><ol><li>Go工具之编译器：汇编语言与Go <a href="https://medium.com/martinomburajr/go-tools-the-compiler-part-1-assembly-language-and-go-ffc42cbf579d" target="_blank" rel="noopener">https://medium.com/martinomburajr/go-tools-the-compiler-part-1-assembly-language-and-go-ffc42cbf579d</a></li></ol></li><li><ol start="2"><li>学习Go语言测试 <a href="https://medium.com/rungo/unit-testing-made-easy-in-go-25077669318" target="_blank" rel="noopener">https://medium.com/rungo/unit-testing-made-easy-in-go-25077669318</a></li></ol></li><li><ol start="3"><li>理解Go中的数据类型 <a href="https://www.digitalocean.com/community/tutorials/understanding-data-types-in-go" target="_blank" rel="noopener">https://www.digitalocean.com/community/tutorials/understanding-data-types-in-go</a></li></ol></li><li><ol start="4"><li>Go语言性能工具快速教程 <a href="https://github.com/samonzeweb/profilinggo" target="_blank" rel="noopener">https://github.com/samonzeweb/profilinggo</a></li></ol></li><li><ol start="5"><li>配置基于Windows WSL+VSCode的开发环境 <a href="https://medium.com/@betakuang/setup-go-development-environment-with-vs-code-and-wsl-on-windows-62bd4625c6a7" target="_blank" rel="noopener">https://medium.com/@betakuang/setup-go-development-environment-with-vs-code-and-wsl-on-windows-62bd4625c6a7</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-05-12">gocn_news_2019-05-12</h2><ul><li><ol><li>浅谈 Golang 中数据的并发同步问题（三）<a href="https://jingwei.link/2019/05/12/golang-concurrency-03-map.html" target="_blank" rel="noopener">https://jingwei.link/2019/05/12/golang-concurrency-03-map.html</a></li></ol></li><li><ol start="2"><li>API设计最佳实践的思考 <a href="https://mp.weixin.qq.com/s/qWrSyzJ54YEw8sLCxAEKlA" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/qWrSyzJ54YEw8sLCxAEKlA</a></li></ol></li><li><ol start="3"><li>引入Go风格的C版并发库 <a href="http://libmill.org" target="_blank" rel="noopener">http://libmill.org</a></li></ol></li><li><ol start="4"><li>《Go 101》发布 <a href="https://github.com/go101/go101/releases/tag/v1.12.c" target="_blank" rel="noopener">https://github.com/go101/go101/releases/tag/v1.12.c</a></li></ol></li><li><ol start="5"><li>一个真实的现网mySql死锁问题处理 <a href="https://mp.weixin.qq.com/s/rLdHuwEb7gKjgpbsh1ioSA" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/rLdHuwEb7gKjgpbsh1ioSA</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-05-11">gocn_news_2019-05-11</h2><ul><li><ol><li>从并发模型看 Go 的语言设计 <a href="https://mp.weixin.qq.com/s/vBUBkecD6TxSHhZja9Ww7g" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/vBUBkecD6TxSHhZja9Ww7g</a></li></ol></li><li><ol start="2"><li>深度解密Go语言之反射 <a href="https://mp.weixin.qq.com/s/Hke0mSCEa4ga_GS_LUp78A" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/Hke0mSCEa4ga_GS_LUp78A</a></li></ol></li><li><ol start="3"><li>开源代码学习-nsq（v0.1.5版本）源码分析 <a href="https://mp.weixin.qq.com/s/Hke0mSCEa4ga_GS_LUp78A" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/Hke0mSCEa4ga_GS_LUp78A</a></li></ol></li><li><ol start="4"><li>Go驱动测试 <a href="https://dave.cheney.net/2019/05/07/prefer-table-driven-tests" target="_blank" rel="noopener">https://dave.cheney.net/2019/05/07/prefer-table-driven-tests</a></li></ol></li><li><ol start="5"><li>Go与Java、Python相比的优势 <a href="https://yourbasic.org/golang/advantages-over-java-python/" target="_blank" rel="noopener">https://yourbasic.org/golang/advantages-over-java-python/</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-05-10">gocn_news_2019-05-10</h2><ul><li><ol><li>进程、线程、协程和goroutine <a href="https://www.jianshu.com/p/4739d2cd72d7" target="_blank" rel="noopener">https://www.jianshu.com/p/4739d2cd72d7</a></li></ol></li><li><ol start="2"><li>golang modules问题的理解与踩坑记 <a href="https://daozhao.goflytoday.com/2019/05/golang-modules/" target="_blank" rel="noopener">https://daozhao.goflytoday.com/2019/05/golang-modules/</a></li></ol></li><li><ol start="3"><li>golang的熔断包hystrix的用例 <a href="http://baixiaoustc.com/2019/05/09/2019-05-09-golang-hystrix-examples" target="_blank" rel="noopener">http://baixiaoustc.com/2019/05/09/2019-05-09-golang-hystrix-examples</a></li></ol></li><li><ol start="4"><li>Go 处理 JSON 教程 - 如何创建和解析 JSON 数据 <a href="https://bingohuang.com/go-json" target="_blank" rel="noopener">https://bingohuang.com/go-json</a></li></ol></li><li><ol start="5"><li>高效管理 Elasticsearch 中基于时间的索引 <a href="https://mp.weixin.qq.com/s/TfbYmvxsi1Jegl6phBXl9A" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/TfbYmvxsi1Jegl6phBXl9A</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-05-09">gocn_news_2019-05-09</h2><ul><li><ol><li>协程初步讨论  <a href="https://segmentfault.com/a/1190000019114754" target="_blank" rel="noopener">https://segmentfault.com/a/1190000019114754</a></li></ol></li><li><ol start="2"><li>go框架-beego基础 <a href="https://c.isme.pub/2019/03/25/go-beego/" target="_blank" rel="noopener">https://c.isme.pub/2019/03/25/go-beego/</a></li></ol></li><li><ol start="3"><li>在 struct 內的 pointers 跟 values 差异 <a href="https://blog.wu-boy.com/2019/05/what-is-different-between-pointer-and-value-in-golang/" target="_blank" rel="noopener">https://blog.wu-boy.com/2019/05/what-is-different-between-pointer-and-value-in-golang/</a></li></ol></li><li><ol start="4"><li>从零开始搭建创业公司后台技术栈 <a href="https://mp.weixin.qq.com/s/jQ0X66DK1DDW9DFlyd9bdw" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/jQ0X66DK1DDW9DFlyd9bdw</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-05-08">gocn_news_2019-05-08</h2><ul><li><ol><li>活动精彩回顾｜GopherChina 2019干货回顾！ <a href="https://mp.weixin.qq.com/s/C87kVwPcIGiR4bUlYxdz0A" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/C87kVwPcIGiR4bUlYxdz0A</a></li></ol></li><li><ol start="2"><li>蚂蚁金服开源的机器学习工具 SQLFlow，有何特别之处？ <a href="https://mp.weixin.qq.com/s/O1DtzCcAj8Ior9MfRQ6WWg" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/O1DtzCcAj8Ior9MfRQ6WWg</a></li></ol></li><li><ol start="3"><li>Go中的加密流 <a href="https://medium.com/blend-engineering/encrypting-streams-in-go-6cff6062a107" target="_blank" rel="noopener">https://medium.com/blend-engineering/encrypting-streams-in-go-6cff6062a107</a></li></ol></li><li><ol start="4"><li>一个让业务开发效率提高10倍的golang库 <a href="https://mp.weixin.qq.com/s/rdzICm4JxpJ5MUrz9brA_w" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/rdzICm4JxpJ5MUrz9brA_w</a></li></ol></li><li><ol start="5"><li>Go语言中关于断行规则的一个细节 <a href="https://mp.weixin.qq.com/s/H2isNMJ2FezZPtGT67tUNA" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/H2isNMJ2FezZPtGT67tUNA</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-05-07">gocn_news_2019-05-07</h2><ul><li><ol><li>Go语言设计的优劣 <a href="https://zhuanlan.zhihu.com/p/64823525" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/64823525</a></li></ol></li><li><ol start="2"><li>深度解密Go语言之反射 <a href="https://zhuanlan.zhihu.com/p/64884660" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/64884660</a></li></ol></li><li><ol start="3"><li>STUN 的 Go 实现版本：<a href="https://github.com/gortc/stun" target="_blank" rel="noopener">https://github.com/gortc/stun</a></li></ol></li><li><ol start="4"><li>Dave Cheney：清晰比聪明更重要  <a href="https://dave.cheney.net/paste/clear-is-better-than-clever.pdf" target="_blank" rel="noopener">https://dave.cheney.net/paste/clear-is-better-than-clever.pdf</a></li></ol></li><li><ol start="5"><li>PostgreSQL “Don’t Do This” 清单 <a href="https://wiki.postgresql.org/wiki/Don%27t_Do_This" target="_blank" rel="noopener">https://wiki.postgresql.org/wiki/Don’t_Do_This</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-05-06">gocn_news_2019-05-06</h2><ul><li><ol><li>Go Modules 剖析 <a href="https://medium.com/rungo/anatomy-of-modules-in-go-c8274d215c16" target="_blank" rel="noopener">https://medium.com/rungo/anatomy-of-modules-in-go-c8274d215c16</a></li></ol></li><li><ol start="2"><li>Golang 与 HTTP 之编写 HTTP/1.1、HTTP/2 客户端和服务器 <a href="https://medium.com/@ldclakmal/how-to-play-go-lang-with-http-5f3628e81001" target="_blank" rel="noopener">https://medium.com/@ldclakmal/how-to-play-go-lang-with-http-5f3628e81001</a></li></ol></li><li><ol start="3"><li>Golang: flag 包简介 <a href="http://www.cnblogs.com/sparkdev/p/10812422.html" target="_blank" rel="noopener">http://www.cnblogs.com/sparkdev/p/10812422.html</a></li></ol></li><li><ol start="4"><li>Golang Failpoint 的设计与实现 <a href="https://mp.weixin.qq.com/s/PpAW1a-sx1yf2rzKbmYCAQ" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/PpAW1a-sx1yf2rzKbmYCAQ</a></li></ol></li><li><ol start="5"><li>一个使用标记语言美化命令行终端输出的轻量级库 <a href="https://github.com/liamg/tml" target="_blank" rel="noopener">https://github.com/liamg/tml</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-05-05">gocn_news_2019-05-05</h2><ul><li><ol><li>Go正走在成为下一个企业级编程语言的轨道上 <a href="https://tonybai.com/2019/05/03/go-is-on-a-trajectory-to-become-the-next-enterprise-programming-language/" target="_blank" rel="noopener">https://tonybai.com/2019/05/03/go-is-on-a-trajectory-to-become-the-next-enterprise-programming-language/</a></li></ol></li><li><ol start="2"><li>Go 项目任务运行工具 gilbert <a href="https://github.com/go-gilbert/gilbert" target="_blank" rel="noopener">https://github.com/go-gilbert/gilbert</a></li></ol></li><li><ol start="3"><li>ebay 开源的图存储系统 beam <a href="https://github.com/eBay/beam" target="_blank" rel="noopener">https://github.com/eBay/beam</a></li></ol></li><li><ol start="4"><li>知乎部署系统演进 <a href="https://zhuanlan.zhihu.com/p/60627311" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/60627311</a></li></ol></li><li><ol start="5"><li>Google Cloud Run 一瞥 <a href="https://blog.fleeto.us/post/a-first-look-at-google-cloud-run/" target="_blank" rel="noopener">https://blog.fleeto.us/post/a-first-look-at-google-cloud-run/</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-05-04">gocn_news_2019-05-04</h2><ul><li><ol><li>如何掌握并用好defer（延迟执行） <a href="https://segmentfault.com/a/1190000019063371" target="_blank" rel="noopener">https://segmentfault.com/a/1190000019063371</a></li></ol></li><li><ol start="2"><li>GO: sync.Mutex 的实现与演进 <a href="https://www.jianshu.com/p/ce1553cc5b4f" target="_blank" rel="noopener">https://www.jianshu.com/p/ce1553cc5b4f</a></li></ol></li><li><ol start="3"><li>Golang的map并发安全 <a href="https://www.jianshu.com/p/f2e7650da938" target="_blank" rel="noopener">https://www.jianshu.com/p/f2e7650da938</a></li></ol></li><li><ol start="4"><li>Go中的垃圾收集：第一部分 - 语义 <a href="https://www.ardanlabs.com/blog/2018/12/garbage-collection-in-go-part1-semantics.html" target="_blank" rel="noopener">https://www.ardanlabs.com/blog/2018/12/garbage-collection-in-go-part1-semantics.html</a></li></ol></li><li><ol start="5"><li>1万属性，100亿数据，每秒10万吞吐，架构如何设计？ <a href="https://juejin.im/post/5ccc3a1af265da03a436dfde" target="_blank" rel="noopener">https://juejin.im/post/5ccc3a1af265da03a436dfde</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-05-03">gocn_news_2019-05-03</h2><ul><li><ol><li>使用Github+TravisCI+DockerHub实现Go项目的持续集成 <a href="https://medium.com/@kainlite_32799/go-continuous-integration-with-travis-ci-and-docker-4b26379e54b7" target="_blank" rel="noopener">https://medium.com/@kainlite_32799/go-continuous-integration-with-travis-ci-and-docker-4b26379e54b7</a></li></ol></li><li><ol start="2"><li>部署一个gobuffalo应用到Google应用引擎 <a href="https://golangtesting.com/posts/gobuffalo-app-engine" target="_blank" rel="noopener">https://golangtesting.com/posts/gobuffalo-app-engine</a></li></ol></li><li><ol start="3"><li>使用IntellJ或Goland加速Go代码开发的5个tips <a href="https://medium.com/@keperry/5-tips-to-speed-up-golang-development-with-intellij-or-goland-6646110e9c5e" target="_blank" rel="noopener">https://medium.com/@keperry/5-tips-to-speed-up-golang-development-with-intellij-or-goland-6646110e9c5e</a></li></ol></li><li><ol start="4"><li>Go m3u8库 <a href="https://github.com/grafov/m3u8" target="_blank" rel="noopener">https://github.com/grafov/m3u8</a></li></ol></li><li><ol start="5"><li>Go 指定类型SyncMap代码生成器: <a href="https://github.com/a8m/syncmap" target="_blank" rel="noopener">https://github.com/a8m/syncmap</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-05-02">gocn_news_2019-05-02</h2><ul><li><ol><li>GoLang中的单链表 <a href="https://medium.com/@michael.ginalick/singly-linked-lists-in-golang-5ae8c61e5e2e" target="_blank" rel="noopener">https://medium.com/@michael.ginalick/singly-linked-lists-in-golang-5ae8c61e5e2e</a></li></ol></li><li><ol start="2"><li>Go的测试 <a href="https://jimmyislive.dev/posts/testing/" target="_blank" rel="noopener">https://jimmyislive.dev/posts/testing/</a></li></ol></li><li><ol start="3"><li>一个基本的游戏模拟器，支持终端“云游戏 <a href="https://github.com/HFO4/gameboy.live" target="_blank" rel="noopener">https://github.com/HFO4/gameboy.live</a></li></ol></li><li><ol start="4"><li>Go中的string包解析 <a href="https://www.digitalocean.com/community/tutorials/an-introduction-to-the-strings-package-in-go" target="_blank" rel="noopener">https://www.digitalocean.com/community/tutorials/an-introduction-to-the-strings-package-in-go</a></li></ol></li><li><ol start="5"><li>Go的基础库，用于命令行程序的管道 <a href="https://academic.oup.com/gigascience/article/8/5/giz044/5480570" target="_blank" rel="noopener">https://academic.oup.com/gigascience/article/8/5/giz044/5480570</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-05-01">gocn_news_2019-05-01</h2><ul><li><ol><li>C++/Golang的数组类型异同 <a href="https://www.jianshu.com/p/12ec17408836" target="_blank" rel="noopener">https://www.jianshu.com/p/12ec17408836</a></li></ol></li><li><ol start="2"><li>如何分析golang程序的内存使用情况 <a href="https://www.jianshu.com/p/43b0e12043b9" target="_blank" rel="noopener">https://www.jianshu.com/p/43b0e12043b9</a></li></ol></li><li><ol start="3"><li>编译时依赖注入与运行时依赖注入 <a href="https://dimes.github.io/blog/compile-time-di-vs-run-time-di" target="_blank" rel="noopener">https://dimes.github.io/blog/compile-time-di-vs-run-time-di</a></li></ol></li><li><ol start="4"><li>从Go的角度看LLVM <a href="https://aykevl.nl/2019/04/llvm-from-go" target="_blank" rel="noopener">https://aykevl.nl/2019/04/llvm-from-go</a></li></ol></li><li><ol start="5"><li>helm chart 模板开发技巧 <a href="https://mp.weixin.qq.com/s/-W3ekLSNmSsbVUjP55JQZw" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/-W3ekLSNmSsbVUjP55JQZw</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-04-30">gocn_news_2019-04-30</h2><ul><li><ol><li>Go 官方 proxy 进入 Alpha 阶段 <a href="https://proxy.golang.org/" target="_blank" rel="noopener">https://proxy.golang.org/</a></li></ol></li><li><ol start="2"><li>Go 1.13: xerrors <a href="https://crawshaw.io/blog/xerrors" target="_blank" rel="noopener">https://crawshaw.io/blog/xerrors</a></li></ol></li><li><ol start="3"><li>微服务开发中的数据架构设计分析 <a href="https://juejin.im/post/5cc702ab6fb9a03204595660" target="_blank" rel="noopener">https://juejin.im/post/5cc702ab6fb9a03204595660</a></li></ol></li><li><ol start="4"><li>Go 个人博客系统 <a href="https://github.com/broqiang/mdblog" target="_blank" rel="noopener">https://github.com/broqiang/mdblog</a></li></ol></li><li><ol start="5"><li>使用 WebAssembly 运行 Go 命令行程序 <a href="https://github.com/wcchoi/go-wasm-pdfcpu/blob/master/article.md" target="_blank" rel="noopener">https://github.com/wcchoi/go-wasm-pdfcpu/blob/master/article.md</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-04-29">gocn_news_2019-04-29</h2><ul><li><ol><li>GopherChina 2019 北京大会PPT下载 <a href="https://mp.weixin.qq.com/s/_oVpIcBMVIKVzQn6YrkAJw" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/_oVpIcBMVIKVzQn6YrkAJw</a></li></ol></li><li><ol start="2"><li>GopherChina 2019 Workshop: 高性能Go语言 <a href="https://dave.cheney.net/high-performance-go-workshop/gopherchina-2019.html" target="_blank" rel="noopener">https://dave.cheney.net/high-performance-go-workshop/gopherchina-2019.html</a></li></ol></li><li><ol start="3"><li>如何组织你的goroutine和channel <a href="https://medium.com/@owlwalks/how-would-you-organize-your-goroutine-and-channel-p1-e6e3c698f90c" target="_blank" rel="noopener">https://medium.com/@owlwalks/how-would-you-organize-your-goroutine-and-channel-p1-e6e3c698f90c</a></li></ol></li><li><ol start="4"><li>一个简单、符合使用习惯的Websocket库 <a href="https://github.com/nhooyr/websocket" target="_blank" rel="noopener">https://github.com/nhooyr/websocket</a></li></ol></li><li><ol start="5"><li>Go并发编程小测验： 你能答对几道题？ <a href="https://colobu.com/2019/04/28/go-concurrency-quizzes/" target="_blank" rel="noopener">https://colobu.com/2019/04/28/go-concurrency-quizzes/</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-04-28">gocn_news_2019-04-28</h2><ul><li><ol><li>Go并发编程@gopherchina2019 <a href="https://colobu.com/2019/04/28/gopher-2019-concurrent-in-action/" target="_blank" rel="noopener">https://colobu.com/2019/04/28/gopher-2019-concurrent-in-action/</a></li></ol></li><li><ol start="2"><li>Go Testing@gopherchina2019 <a href="https://dave.cheney.net/paste/gopherchina-2019-testing-talk.pdf" target="_blank" rel="noopener">https://dave.cheney.net/paste/gopherchina-2019-testing-talk.pdf</a></li></ol></li><li><ol start="3"><li>Golang使用高阶函数实现依赖注入 <a href="https://www.hexiangyu.me/2019/04/28/go-dependency-injection-md/" target="_blank" rel="noopener">https://www.hexiangyu.me/2019/04/28/go-dependency-injection-md/</a></li></ol></li><li><ol start="4"><li>GopherChina第一天小结 <a href="https://mp.weixin.qq.com/s/nHcj2yxscD5WA2mOuTCnzw" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/nHcj2yxscD5WA2mOuTCnzw</a></li></ol></li><li><ol start="5"><li>Golang中实现枚举类型 <a href="https://www.hexiangyu.me/2019/04/14/go-enums-md/" target="_blank" rel="noopener">https://www.hexiangyu.me/2019/04/14/go-enums-md/</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-04-27">gocn_news_2019-04-27</h2><ul><li><ol><li>在 Go 中发现竞态条件 (Race Conditions) <a href="https://mp.weixin.qq.com/s/RPdtslg2L-SuhU0fdi3QQg" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/RPdtslg2L-SuhU0fdi3QQg</a></li></ol></li><li><ol start="2"><li>用 Go 和Consul构建一个简单的分布式系统  <a href="https://medium.com/@didil/building-a-simple-distributed-system-with-go-consul-39b08ffc5d2c" target="_blank" rel="noopener">https://medium.com/@didil/building-a-simple-distributed-system-with-go-consul-39b08ffc5d2c</a></li></ol></li><li><ol start="3"><li>Go 语言 Excel 类库 Excelize 2.0.0 版本发布 <a href="https://gocn.vip/article/1716" target="_blank" rel="noopener">https://gocn.vip/article/1716</a></li></ol></li><li><ol start="4"><li>Go 高级测试模型 <a href="https://scene-si.org/2019/04/15/next-level-go-testing/" target="_blank" rel="noopener">https://scene-si.org/2019/04/15/next-level-go-testing/</a></li></ol></li><li><ol start="5"><li>使用Istio的可观察性工具来监控Go开发的微服务 <a href="https://itnext.io/istio-observability-with-go-grpc-and-protocol-buffers-based-microservices-d09e34c1255a" target="_blank" rel="noopener">https://itnext.io/istio-observability-with-go-grpc-and-protocol-buffers-based-microservices-d09e34c1255a</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-04-26">gocn_news_2019-04-26</h2><ul><li><ol><li>ChanBroker goroutine实现类似Kafka的消息队列 <a href="https://github.com/myself659/chanbroker" target="_blank" rel="noopener">https://github.com/myself659/chanbroker</a></li></ol></li><li><ol start="2"><li>为 Envoy 构建控制面指南第4部分：构建的可扩展性 <a href="https://mp.weixin.qq.com/s/nPy47R2zjgVU_3YUg2pHbA" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/nPy47R2zjgVU_3YUg2pHbA</a></li></ol></li><li><ol start="3"><li>php swoole 协程 与 go 的协程比较 <a href="https://studygolang.com/articles/20036" target="_blank" rel="noopener">https://studygolang.com/articles/20036</a></li></ol></li><li><ol start="4"><li>Heroku上部署原生go二进制应用 <a href="https://preslav.me/2019/04/20/deploying-native-go-binary-on-heroku/" target="_blank" rel="noopener">https://preslav.me/2019/04/20/deploying-native-go-binary-on-heroku/</a></li></ol></li><li><ol start="5"><li>sonarqube SonarGo 搭建和golang代码检视的使用教程 <a href="https://studygolang.com/articles/20028" target="_blank" rel="noopener">https://studygolang.com/articles/20028</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-04-25">gocn_news_2019-04-25</h2><ul><li><ol><li>深入分析Go语言之关于interface的10个问题 <a href="https://www.cnblogs.com/qcrao-2018/p/10766091.html" target="_blank" rel="noopener">https://www.cnblogs.com/qcrao-2018/p/10766091.html</a></li></ol></li><li><ol start="2"><li>Go 并发 – 信道 <a href="https://juejin.im/post/5cbd05f95188250a7a67ab11" target="_blank" rel="noopener">https://juejin.im/post/5cbd05f95188250a7a67ab11</a></li></ol></li><li><ol start="3"><li>Go语言的奇特语法，你怎么看？ <a href="http://developer.51cto.com/art/201904/595470.htm" target="_blank" rel="noopener">http://developer.51cto.com/art/201904/595470.htm</a></li></ol></li><li><ol start="4"><li>part 7: golang 包 <a href="https://juejin.im/post/5cbdf9076fb9a0321141ae0b" target="_blank" rel="noopener">https://juejin.im/post/5cbdf9076fb9a0321141ae0b</a></li></ol></li><li><ol start="5"><li>Docker开发者现在可以在自己的桌面上构建Arm容器 <a href="https://mp.weixin.qq.com/s/AOfUwCTD5X1su4VSTJIHGw" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/AOfUwCTD5X1su4VSTJIHGw</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-04-24">gocn_news_2019-04-24</h2><ul><li><ol><li>bilibili开源的微服务框架kratos <a href="https://github.com/bilibili/kratos" target="_blank" rel="noopener">https://github.com/bilibili/kratos</a></li></ol></li><li><ol start="2"><li>Golang 1.x版本泛型编程 <a href="https://mp.weixin.qq.com/s/omh3CmItJiOQ7i-dE0dUxA" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/omh3CmItJiOQ7i-dE0dUxA</a></li></ol></li><li><ol start="3"><li>从goim定制, 浅谈 golang 的 interface 解耦合与gRPC <a href="https://juejin.im/post/5cbd380c5188250a97133649" target="_blank" rel="noopener">https://juejin.im/post/5cbd380c5188250a97133649</a></li></ol></li><li><ol start="4"><li>命令行界面的Wireshark <a href="https://github.com/gcla/termshark" target="_blank" rel="noopener">https://github.com/gcla/termshark</a></li></ol></li><li><ol start="5"><li>并发编程导论 <a href="https://juejin.im/post/5cbd7e6a5188250a7c4c8b0d" target="_blank" rel="noopener">https://juejin.im/post/5cbd7e6a5188250a7c4c8b0d</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-04-23">gocn_news_2019-04-23</h2><ul><li><ol><li>Go Module: 项目配置不再需要 GOPATH  <a href="https://blog.francium.tech/go-modules-go-project-set-up-without-gopath-1ae601a4e868" target="_blank" rel="noopener">https://blog.francium.tech/go-modules-go-project-set-up-without-gopath-1ae601a4e868</a></li></ol></li><li><ol start="2"><li>Go REST API 单元测试：<a href="https://codeburst.io/unit-testing-for-rest-apis-in-go-86c70dada52d" target="_blank" rel="noopener">https://codeburst.io/unit-testing-for-rest-apis-in-go-86c70dada52d</a></li></ol></li><li><ol start="3"><li>深入理解 Go channel：<a href="https://itnext.io/diving-into-golang-channels-e9e610d586e8" target="_blank" rel="noopener">https://itnext.io/diving-into-golang-channels-e9e610d586e8</a></li></ol></li><li><ol start="4"><li>深入理解 Go 语言 defer <a href="https://mp.weixin.qq.com/s/e2t3CMUqtIcEq-OhbWy5Hw" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/e2t3CMUqtIcEq-OhbWy5Hw</a></li></ol></li><li><ol start="5"><li>StackOverflow 2019 程序员调查：<a href="https://coolshell.cn/articles/19307.html" target="_blank" rel="noopener">https://coolshell.cn/articles/19307.html</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-04-22">gocn_news_2019-04-22</h2><ul><li><ol><li>如何在应用实例中实现数据同步 <a href="https://medium.com/@Mnwa/how-to-syncing-data-between-application-instances-easy-fbe929f131e2" target="_blank" rel="noopener">https://medium.com/@Mnwa/how-to-syncing-data-between-application-instances-easy-fbe929f131e2</a></li></ol></li><li><ol start="2"><li>一个奇怪的 Golang 对切片的竞争检测问题 <a href="https://mp.weixin.qq.com/s/-hY8AqMJ0bhKkQn2s03SsA" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/-hY8AqMJ0bhKkQn2s03SsA</a></li></ol></li><li><ol start="3"><li>Golang 实现 ForkJoin 小文 <a href="https://juejin.im/post/5cbc0b3051882532be1bf63c" target="_blank" rel="noopener">https://juejin.im/post/5cbc0b3051882532be1bf63c</a></li></ol></li><li><ol start="4"><li>什么是 Protobuf? <a href="https://medium.com/@Mnwa/what-the-hell-is-protobuf-4aff084c5db4" target="_blank" rel="noopener">https://medium.com/@Mnwa/what-the-hell-is-protobuf-4aff084c5db4</a></li></ol></li><li><ol start="5"><li>一个可以通过 SSH 远程运行 VS Code 的工具 <a href="https://github.com/codercom/sshcode" target="_blank" rel="noopener">https://github.com/codercom/sshcode</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-04-21">gocn_news_2019-04-21</h2><ul><li><ol><li>并发陷阱之未完成的工作 <a href="https://www.ardanlabs.com/blog/2019/04/concurrency-trap-2-incomplete-work.html" target="_blank" rel="noopener">https://www.ardanlabs.com/blog/2019/04/concurrency-trap-2-incomplete-work.html</a></li></ol></li><li><ol start="2"><li>为什么你应该喜欢 sync.Pool <a href="https://medium.com/@Mnwa/why-you-should-like-sync-pool-2c7960c023ba" target="_blank" rel="noopener">https://medium.com/@Mnwa/why-you-should-like-sync-pool-2c7960c023ba</a></li></ol></li><li><ol start="3"><li>为Go模拟枚举类型 <a href="https://stein.wtf/posts/2019-04-16/enums/" target="_blank" rel="noopener">https://stein.wtf/posts/2019-04-16/enums/</a></li></ol></li><li><ol start="4"><li>[译]使用Go语言读写Redis协议  <a href="https://colobu.com/2019/04/16/Reading-and-Writing-Redis-Protocol-in-Go/" target="_blank" rel="noopener">https://colobu.com/2019/04/16/Reading-and-Writing-Redis-Protocol-in-Go/</a></li></ol></li><li><ol start="5"><li>使用nomad在weave网络中部署工作负载 <a href="https://tonybai.com/2019/04/20/deploy-workload-in-weave-network-using-nomad/" target="_blank" rel="noopener">https://tonybai.com/2019/04/20/deploy-workload-in-weave-network-using-nomad/</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-04-20">gocn_news_2019-04-20</h2><ul><li><ol><li>如何客观评价 Go 语言 <a href="https://mp.weixin.qq.com/s/WOvjEQc6Tr3hcZlCu5aLkA" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/WOvjEQc6Tr3hcZlCu5aLkA</a></li></ol></li><li><ol start="2"><li>依赖注入的美 <a href="https://dimes.github.io/blog/the-beauty-of-di" target="_blank" rel="noopener">https://dimes.github.io/blog/the-beauty-of-di</a></li></ol></li><li><ol start="3"><li>使用GoReleaser发送Rust二进制文件 <a href="https://medium.com/@jondot/shipping-rust-binaries-with-goreleaser-d5aa42a46be0" target="_blank" rel="noopener">https://medium.com/@jondot/shipping-rust-binaries-with-goreleaser-d5aa42a46be0</a></li></ol></li><li><ol start="4"><li>查找Go项目过时依赖项的简便方法 <a href="https://github.com/psampaz/go-mod-outdated" target="_blank" rel="noopener">https://github.com/psampaz/go-mod-outdated</a></li></ol></li><li><ol start="5"><li>高性能可扩展 HTTP 路由 httprouter <a href="https://www.flysnow.org/2019/01/07/golang-classic-libs-httprouter.html" target="_blank" rel="noopener">https://www.flysnow.org/2019/01/07/golang-classic-libs-httprouter.html</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-04-19">gocn_news_2019-04-19</h2><ul><li><ol><li>Uber M3存储优化实践 <a href="https://eng.uber.com/optimizing-m3/" target="_blank" rel="noopener">https://eng.uber.com/optimizing-m3/</a></li></ol></li><li><ol start="2"><li>从头开始学习go的并发 <a href="http://www.doxsey.net/blog/go-concurrency-from-the-ground-up" target="_blank" rel="noopener">http://www.doxsey.net/blog/go-concurrency-from-the-ground-up</a></li></ol></li><li><ol start="3"><li>bet365开源更快的json序列化库jingo <a href="https://bet365techblog.com/open-sourcing-jingo-a-faster-json-encoder-for-go" target="_blank" rel="noopener">https://bet365techblog.com/open-sourcing-jingo-a-faster-json-encoder-for-go</a></li></ol></li><li><ol start="4"><li>利用二分法思想找出Go性能退化原因 <a href="https://medium.com/@fzambia/bisecting-go-performance-degradation-4d4a7ee83a63" target="_blank" rel="noopener">https://medium.com/@fzambia/bisecting-go-performance-degradation-4d4a7ee83a63</a></li></ol></li><li><ol start="5"><li>SQLite网络查询服务器 <a href="https://github.com/assafmo/SQLiteQueryServer" target="_blank" rel="noopener">https://github.com/assafmo/SQLiteQueryServer</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-04-18">gocn_news_2019-04-18</h2><ul><li><ol><li>Go 2和Go的未来 <a href="https://changelog.com/gotime/80" target="_blank" rel="noopener">https://changelog.com/gotime/80</a></li></ol></li><li><ol start="2"><li>如何在Windows 10上安装Go并设置本地编程环境 <a href="https://www.digitalocean.com/community/tutorials/how-to-install-go-and-set-up-a-local-programming-environment-on-windows-10" target="_blank" rel="noopener">https://www.digitalocean.com/community/tutorials/how-to-install-go-and-set-up-a-local-programming-environment-on-windows-10</a></li></ol></li><li><ol start="3"><li>Go实现的Web服务器Space Cloud 可以提供即时Realtime API <a href="https://github.com/spaceuptech/space-cloud" target="_blank" rel="noopener">https://github.com/spaceuptech/space-cloud</a></li></ol></li><li><ol start="4"><li>基于HA LDAP的键/值解决方案，用于存储具有多主复制支持的项目配置 <a href="https://github.com/Mnwa/Recon" target="_blank" rel="noopener">https://github.com/Mnwa/Recon</a></li></ol></li><li><ol start="5"><li>可恢复文件上传器系列文章 <a href="https://golangbot.com/resumable-file-uploader/" target="_blank" rel="noopener">https://golangbot.com/resumable-file-uploader/</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-04-17">gocn_news_2019-04-17</h2><ul><li><ol><li>结构化日志提高生产力 <a href="https://www.youtube.com/watch?v=YlrwDN7_vHw" target="_blank" rel="noopener">https://www.youtube.com/watch?v=YlrwDN7_vHw</a></li></ol></li><li><ol start="2"><li>Go 快速测试 <a href="https://itnext.io/quickcheck-testing-in-golang-772e820f0bd5?sk=6673487a1583d2b1ae4ea6c4522190bb" target="_blank" rel="noopener">https://itnext.io/quickcheck-testing-in-golang-772e820f0bd5?sk=6673487a1583d2b1ae4ea6c4522190bb</a></li></ol></li><li><ol start="3"><li>Golang 之 Context 的迷思 <a href="https://mp.weixin.qq.com/s/MV7aPBgU0WayK-is78AFdg" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/MV7aPBgU0WayK-is78AFdg</a></li></ol></li><li><ol start="4"><li>如何使用Go和go-kit做微服务开发 <a href="https://dev.to/napolux/how-to-write-a-microservice-in-go-with-go-kit-a66" target="_blank" rel="noopener">https://dev.to/napolux/how-to-write-a-microservice-in-go-with-go-kit-a66</a></li></ol></li><li><ol start="5"><li>我在系统设计上犯过的 14 个错 <a href="https://mp.weixin.qq.com/s/f0jvsyjHkcGNoncszNKfkg" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/f0jvsyjHkcGNoncszNKfkg</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-04-16">gocn_news_2019-04-16</h2><ul><li><ol><li>Micro 构建微服务 <a href="https://github.com/micro-in-cn/tutorials/tree/master/microservice-in-micro" target="_blank" rel="noopener">https://github.com/micro-in-cn/tutorials/tree/master/microservice-in-micro</a></li></ol></li><li><ol start="2"><li>Go 工具链概述 <a href="https://www.alexedwards.net/blog/an-overview-of-go-tooling" target="_blank" rel="noopener">https://www.alexedwards.net/blog/an-overview-of-go-tooling</a></li></ol></li><li><ol start="3"><li>Goroutine 使代码变慢 <a href="https://appliedgo.net/concurrencyslower/" target="_blank" rel="noopener">https://appliedgo.net/concurrencyslower/</a></li></ol></li><li><ol start="4"><li>Gomobile 系列文章 <a href="https://blog.koundinya.xyz/series/gomobile/" target="_blank" rel="noopener">https://blog.koundinya.xyz/series/gomobile/</a></li></ol></li><li><ol start="5"><li>聊一聊 golang 结构体标签 <a href="https://mp.weixin.qq.com/s/ueaxNjSmIPZRsqjMCRrJ5w" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/ueaxNjSmIPZRsqjMCRrJ5w</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-04-15">gocn_news_2019-04-15</h2><ul><li><ol><li>图解Go的channel底层原理 <a href="https://mp.weixin.qq.com/s/40uxAPdubIk0lU321LmfRg" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/40uxAPdubIk0lU321LmfRg</a></li></ol></li><li><ol start="2"><li>Github开源vulcanizer：一个操作ElasticSearch的工具 <a href="https://githubengineering.com/vulcanizer-a-library-for-elasticsearch/" target="_blank" rel="noopener">https://githubengineering.com/vulcanizer-a-library-for-elasticsearch/</a></li></ol></li><li><ol start="3"><li>如何在Go中实现一个Logger <a href="https://medium.com/@bnprashanth256/implementing-logger-in-go-golang-176a260b6b08" target="_blank" rel="noopener">https://medium.com/@bnprashanth256/implementing-logger-in-go-golang-176a260b6b08</a></li></ol></li><li><ol start="4"><li>dihedral：另一个编译时依赖注入框架 <a href="https://github.com/dimes/dihedral" target="_blank" rel="noopener">https://github.com/dimes/dihedral</a></li></ol></li><li><ol start="5"><li>Cloud Next’19的Go语言作者访谈 <a href="https://www.youtube.com/watch?v=3yghHvvZQmA" target="_blank" rel="noopener">https://www.youtube.com/watch?v=3yghHvvZQmA</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-04-14">gocn_news_2019-04-14</h2><ul><li><ol><li>Raycasting引擎转换为Go <a href="https://www.reddit.com/r/golang/comments/bcpeyc/raycasting_engine_converted_to_go/" target="_blank" rel="noopener">https://www.reddit.com/r/golang/comments/bcpeyc/raycasting_engine_converted_to_go/</a></li></ol></li><li><ol start="2"><li>GOLANG API中避免内存泄露 <a href="http://www.gaoxuan1989.com/2019/04/13/avoiding-memory-leak-in-golang-ap" target="_blank" rel="noopener">http://www.gaoxuan1989.com/2019/04/13/avoiding-memory-leak-in-golang-ap</a></li></ol></li><li><ol start="3"><li>谈谈panic和recover的原理 <a href="https://draveness.me/golang-panic-recover" target="_blank" rel="noopener">https://draveness.me/golang-panic-recover</a></li></ol></li><li><ol start="4"><li>分布式系统关注点—缓存背后的“毁灭种子” <a href="https://mp.weixin.qq.com/s/okI71mBjwmt85OtHYVC1Hw" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/okI71mBjwmt85OtHYVC1Hw</a></li></ol></li><li><ol start="5"><li>你是否需要区块链：多种决策模型  <a href="https://medium.com/@sbmeunier/when-do-you-need-blockchain-decision-models-a5c40e7c9ba1" target="_blank" rel="noopener">https://medium.com/@sbmeunier/when-do-you-need-blockchain-decision-models-a5c40e7c9ba1</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-04-13">gocn_news_2019-04-13</h2><ul><li><ol><li>使用tus协议实现http断点续传文件功能 <a href="https://golangbot.com/resumable-file-uploader/" target="_blank" rel="noopener">https://golangbot.com/resumable-file-uploader/</a></li></ol></li><li><ol start="2"><li>如何利用pprof在大量代码库中定位内存泄漏 <a href="https://medium.freecodecamp.org/how-i-investigated-memory-leaks-in-go-using-pprof-on-a-large-codebase-4bec4325e192" target="_blank" rel="noopener">https://medium.freecodecamp.org/how-i-investigated-memory-leaks-in-go-using-pprof-on-a-large-codebase-4bec4325e192</a></li></ol></li><li><ol start="3"><li>源码剖析golang中sync.Mutex <a href="https://purewhite.io/2019/03/28/golang-mutex-source/" target="_blank" rel="noopener">https://purewhite.io/2019/03/28/golang-mutex-source/</a></li></ol></li><li><ol start="4"><li>开源api网关tyk性能调优 <a href="https://medium.com/@ahmet_19567/performance-tuning-your-open-source-tyk-api-gateway-d48505c205a1" target="_blank" rel="noopener">https://medium.com/@ahmet_19567/performance-tuning-your-open-source-tyk-api-gateway-d48505c205a1</a></li></ol></li><li><ol start="5"><li>Go 1.12.4和1.11.9版本发布 <a href="https://groups.google.com/forum/#!topic/golang-nuts/bMutB64oDi8" target="_blank" rel="noopener">https://groups.google.com/forum/#!topic/golang-nuts/bMutB64oDi8</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-04-12">gocn_news_2019-04-12</h2><ul><li><ol><li>Go的Heap深入分析 <a href="https://blog.twitch.tv/go-memory-ballast-how-i-learnt-to-stop-worrying-and-love-the-heap-26c2462549a2" target="_blank" rel="noopener">https://blog.twitch.tv/go-memory-ballast-how-i-learnt-to-stop-worrying-and-love-the-heap-26c2462549a2</a></li></ol></li><li><ol start="2"><li>Stack Overflow调研Go薪资全世界排名第二 <a href="https://insights.stackoverflow.com/survey/2019" target="_blank" rel="noopener">https://insights.stackoverflow.com/survey/2019</a></li></ol></li><li><ol start="3"><li>sync.RWMutex - 解决并发读写问题 <a href="https://mp.weixin.qq.com/s/kQEHt37Tr7x5CIfre9-Jbw" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/kQEHt37Tr7x5CIfre9-Jbw</a></li></ol></li><li><ol start="4"><li>高并发编程知识体系 <a href="https://mp.weixin.qq.com/s/qaj37YYxz7afD-WfAZeN8Q" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/qaj37YYxz7afD-WfAZeN8Q</a></li></ol></li><li><ol start="5"><li>Golang实现requests库 <a href="https://www.cnblogs.com/bener/p/10688294.html" target="_blank" rel="noopener">https://www.cnblogs.com/bener/p/10688294.html</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-04-11">gocn_news_2019-04-11</h2><ul><li><ol><li>如何优化Golang中重复的错误处理 <a href="https://huoding.com/2019/04/11/728" target="_blank" rel="noopener">https://huoding.com/2019/04/11/728</a></li></ol></li><li><ol start="2"><li>Go 的依赖注入https://mp.weixin.qq.com/s/xWP28BIto-UI8GwwN4_WCg</li></ol></li><li><ol start="3"><li>Golang Slice技巧 <a href="https://juejin.im/post/5cad91956fb9a0687e3900c1" target="_blank" rel="noopener">https://juejin.im/post/5cad91956fb9a0687e3900c1</a></li></ol></li><li><ol start="4"><li>Eureka-Client(Golang实现）<a href="http://www.cnblogs.com/bener/p/10683404.html" target="_blank" rel="noopener">http://www.cnblogs.com/bener/p/10683404.html</a></li></ol></li><li><ol start="5"><li>你真的需要用Kubernetes吗？ <a href="https://mp.weixin.qq.com/s/MNX7QG-TbHXe0OMOun5eWA" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/MNX7QG-TbHXe0OMOun5eWA</a> <a href="https://mp.weixin.qq.com/s/1co_fK8wyEgrbIUtcymhLw" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/1co_fK8wyEgrbIUtcymhLw</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-04-10">gocn_news_2019-04-10</h2><ul><li><ol><li>用一句话描述Go语言的命令 <a href="https://juejin.im/post/5cab0e885188250b251e5152" target="_blank" rel="noopener">https://juejin.im/post/5cab0e885188250b251e5152</a></li></ol></li><li><ol start="2"><li>编写一个多态引擎 <a href="https://medium.com/syscall59/writing-a-polymorphic-engine-73ec56a2353e" target="_blank" rel="noopener">https://medium.com/syscall59/writing-a-polymorphic-engine-73ec56a2353e</a></li></ol></li><li><ol start="3"><li>Go编写的现代文本索引库 <a href="https://github.com/blevesearch/bleve" target="_blank" rel="noopener">https://github.com/blevesearch/bleve</a></li></ol></li><li><ol start="4"><li>缓存慢数据库查询 <a href="https://medium.com/@rocketlaunchr.cloud/caching-slow-database-queries-1085d308a0c9" target="_blank" rel="noopener">https://medium.com/@rocketlaunchr.cloud/caching-slow-database-queries-1085d308a0c9</a></li></ol></li><li><ol start="5"><li>理解Go语言defer关键字的原理 <a href="https://draveness.me/golang-defer" target="_blank" rel="noopener">https://draveness.me/golang-defer</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-04-09">gocn_news_2019-04-09</h2><ul><li><ol><li>使用 Ginkgo 写单元测试：<a href="https://medium.com/boldly-going/unit-testing-in-go-with-ginkgo-part-1-ce6ff06eb17f" target="_blank" rel="noopener">https://medium.com/boldly-going/unit-testing-in-go-with-ginkgo-part-1-ce6ff06eb17f</a></li></ol></li><li><ol start="2"><li>用 Go 写一个 twitter 机器人： <a href="https://medium.freecodecamp.org/creating-a-twitter-bot-from-scratch-with-golang-e1f37a66741" target="_blank" rel="noopener">https://medium.freecodecamp.org/creating-a-twitter-bot-from-scratch-with-golang-e1f37a66741</a></li></ol></li><li><ol start="3"><li>Hugo 0.55.0 发布：<a href="https://gohugo.io/news/0.55.0-relnotes/" target="_blank" rel="noopener">https://gohugo.io/news/0.55.0-relnotes/</a></li></ol></li><li><ol start="4"><li>边缘计算和云计算到底是什么关系？<a href="https://mp.weixin.qq.com/s/eOzeL5785rdUDDy_ta0QoQ" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/eOzeL5785rdUDDy_ta0QoQ</a></li></ol></li><li><ol start="5"><li>云原生（cloud native）方式指的是什么： <a href="https://medium.com/@sonujose993/what-it-means-to-be-cloud-native-approach-the-cncf-way-9e8ab99d4923" target="_blank" rel="noopener">https://medium.com/@sonujose993/what-it-means-to-be-cloud-native-approach-the-cncf-way-9e8ab99d4923</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-04-08">gocn_news_2019-04-08</h2><ul><li><ol><li>使用 Go 手动创建容器 <a href="https://medium.com/@ssttehrani/containers-from-scratch-with-golang-5276576f9909" target="_blank" rel="noopener">https://medium.com/@ssttehrani/containers-from-scratch-with-golang-5276576f9909</a></li></ol></li><li><ol start="2"><li>Go 中的匿名函数和闭包 <a href="https://medium.com/@dreissenzahn/anonymous-functions-and-closures-in-go-e53ccccad352" target="_blank" rel="noopener">https://medium.com/@dreissenzahn/anonymous-functions-and-closures-in-go-e53ccccad352</a></li></ol></li><li><ol start="3"><li>Go Struct 超详细讲解 <a href="https://juejin.im/post/5ca2f37ce51d4502a27f0539" target="_blank" rel="noopener">https://juejin.im/post/5ca2f37ce51d4502a27f0539</a></li></ol></li><li><ol start="4"><li>为什么遍历 Go map 是无序的？ <a href="https://segmentfault.com/a/1190000018782278" target="_blank" rel="noopener">https://segmentfault.com/a/1190000018782278</a></li></ol></li><li><ol start="5"><li>来自 Dave Cheney 单元测试分享 <a href="https://dave.cheney.net/2019/04/03/absolute-unit-test" target="_blank" rel="noopener">https://dave.cheney.net/2019/04/03/absolute-unit-test</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-04-07">gocn_news_2019-04-07</h2><ul><li><ol><li>Go 语言 Channel 实现原理精要 <a href="https://draveness.me/golang-channel" target="_blank" rel="noopener">https://draveness.me/golang-channel</a></li></ol></li><li><ol start="2"><li>记一次go panic问题的解决过程  <a href="https://tonybai.com/2019/04/04/notes-about-fixing-a-go-panic-problem/" target="_blank" rel="noopener">https://tonybai.com/2019/04/04/notes-about-fixing-a-go-panic-problem/</a></li></ol></li><li><ol start="3"><li>从 Java 迁移 50K 行代码到 Go 学到的经验 <a href="https://blog.kowalczyk.info/article/19f2fe97f06a47c3b1f118fd06851fad/lessons-learned-porting-50k-loc-from-java-to-go.html" target="_blank" rel="noopener">https://blog.kowalczyk.info/article/19f2fe97f06a47c3b1f118fd06851fad/lessons-learned-porting-50k-loc-from-java-to-go.html</a></li></ol></li><li><ol start="4"><li>HTTP 与 TCP 连接用法分析器 bodyclose  <a href="https://github.com/timakin/bodyclose" target="_blank" rel="noopener">https://github.com/timakin/bodyclose</a></li></ol></li><li><ol start="5"><li>正确性：可持续软件开发的范例 <a href="http://nonullpointers.com/posts/2019-03-27-correctness-the-paradigm-for-sustainable-software-development.html" target="_blank" rel="noopener">http://nonullpointers.com/posts/2019-03-27-correctness-the-paradigm-for-sustainable-software-development.html</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-04-06">gocn_news_2019-04-06</h2><ul><li><ol><li>Go 1.12.2 和 Go 1.11.7 发布 <a href="https://groups.google.com/forum/#!msg/golang-announce/z9eTD34GEIs/Z_XmhTrVAwAJ" target="_blank" rel="noopener">https://groups.google.com/forum/#!msg/golang-announce/z9eTD34GEIs/Z_XmhTrVAwAJ</a></li></ol></li><li><ol start="2"><li>Golang的分代GC(Garbage Collection) <a href="https://www.jianshu.com/p/2383743edb7b" target="_blank" rel="noopener">https://www.jianshu.com/p/2383743edb7b</a></li></ol></li><li><ol start="3"><li>结构化日志:当事情出错时你想要的最好的朋友 <a href="https://engineering.grab.com/structured-logging" target="_blank" rel="noopener">https://engineering.grab.com/structured-logging</a></li></ol></li><li><ol start="4"><li>Ghost Bridge: React Native 与 Go直接通讯 <a href="https://medium.com/interplanetary-social-network/ghost-bridge-react-native-to-go-19a69473f8e" target="_blank" rel="noopener">https://medium.com/interplanetary-social-network/ghost-bridge-react-native-to-go-19a69473f8e</a></li></ol></li><li><ol start="5"><li>我们是如何管理一个 1w+ stars 的开源仓库的 <a href="https://juejin.im/post/5ca2d01651882544136e923b" target="_blank" rel="noopener">https://juejin.im/post/5ca2d01651882544136e923b</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-04-05">gocn_news_2019-04-05</h2><ul><li><ol><li>Netramesh:轻量级的ServiceMesh <a href="https://medium.com/avitotech/introducing-netramesh-lightweight-service-mesh-13f60162feb6" target="_blank" rel="noopener">https://medium.com/avitotech/introducing-netramesh-lightweight-service-mesh-13f60162feb6</a></li></ol></li><li><ol start="2"><li>使用Google Cloud Build构建我们的Go语言CI平台 <a href="https://medium.com/@jake_mok_nelson/building-a-robust-ci-pipeline-for-golang-with-google-cloud-build-4b5029617bc9" target="_blank" rel="noopener">https://medium.com/@jake_mok_nelson/building-a-robust-ci-pipeline-for-golang-with-google-cloud-build-4b5029617bc9</a></li></ol></li><li><ol start="3"><li>更详细的Go代码性能测试 <a href="https://medium.com/@egonelbre/benchmarking-with-details-1cf3e61d459d" target="_blank" rel="noopener">https://medium.com/@egonelbre/benchmarking-with-details-1cf3e61d459d</a></li></ol></li><li><ol start="4"><li>go-tagexpr：用于结构体字段校验的标签表达式语法库 <a href="https://github.com/bytedance/go-tagexpr" target="_blank" rel="noopener">https://github.com/bytedance/go-tagexpr</a></li></ol></li><li><ol start="5"><li>core: 轻量级CMS系统 <a href="https://github.com/backpulse/core" target="_blank" rel="noopener">https://github.com/backpulse/core</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-04-04">gocn_news_2019-04-04</h2><ul><li><ol><li>使用Drone和GoReleaser自动化发布到Github <a href="https://dev.to/mstrsobserver/painless-github-releases-with-drone-and-goreleaser-45b7" target="_blank" rel="noopener">https://dev.to/mstrsobserver/painless-github-releases-with-drone-and-goreleaser-45b7</a></li></ol></li><li><ol start="2"><li>Golang中使用sql.Rows错误的诊断来帮助发现错误 <a href="https://github.com/gostaticanalysis/sqlrows" target="_blank" rel="noopener">https://github.com/gostaticanalysis/sqlrows</a></li></ol></li><li><ol start="3"><li>企业级持续交付和DevOps自动化开源平台 <a href="https://github.com/ovh/cds" target="_blank" rel="noopener">https://github.com/ovh/cds</a></li></ol></li><li><ol start="4"><li>使用chrome和docker从HTML页面创建PDF <a href="https://github.com/FireFart/gochro" target="_blank" rel="noopener">https://github.com/FireFart/gochro</a></li></ol></li><li><ol start="5"><li>Golang中的方法 <a href="https://go101.org/article/method.html" target="_blank" rel="noopener">https://go101.org/article/method.html</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-04-03">gocn_news_2019-04-03</h2><ul><li><ol><li>高性能 Go 服务的内存优化(译) <a href="https://www.jianshu.com/p/63404461e520" target="_blank" rel="noopener">https://www.jianshu.com/p/63404461e520</a></li></ol></li><li><ol start="2"><li>使用chi编写rest api <a href="https://www.youtube.com/watch?v=zeme_TmXyBk&amp;feature=youtu.be" target="_blank" rel="noopener">https://www.youtube.com/watch?v=zeme_TmXyBk&amp;feature=youtu.be</a></li></ol></li><li><ol start="3"><li>Go troubleshoot工具 <a href="https://github.com/jondot/goweight" target="_blank" rel="noopener">https://github.com/jondot/goweight</a></li></ol></li><li><ol start="4"><li>一个示例阐述 Go 应用的优雅中止 <a href="https://jingwei.link/2019/03/31/golang-graceful-ending.html" target="_blank" rel="noopener">https://jingwei.link/2019/03/31/golang-graceful-ending.html</a></li></ol></li><li><ol start="5"><li>使用 Goroutines 池来处理基于任务的操作 <a href="https://mp.weixin.qq.com/s/lPB4k9npnpb7RVYn_tvsyA" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/lPB4k9npnpb7RVYn_tvsyA</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-04-02">gocn_news_2019-04-02</h2><ul><li><ol><li>为什么 Go 程序那么大？<a href="https://science.raphael.poss.name/go-executable-size-visualization-with-d3.html" target="_blank" rel="noopener">https://science.raphael.poss.name/go-executable-size-visualization-with-d3.html</a></li></ol></li><li><ol start="2"><li>Go 并发设计模式 <a href="https://blogtitle.github.io/go-advanced-concurrency-patterns-part-1/" target="_blank" rel="noopener">https://blogtitle.github.io/go-advanced-concurrency-patterns-part-1/</a></li></ol></li><li><ol start="3"><li>8个月的 Go 开发体验 <a href="http://onoffswitch.net/8-months/" target="_blank" rel="noopener">http://onoffswitch.net/8-months/</a></li></ol></li><li><ol start="4"><li>微服务框架 Micro 发布 1.0 <a href="https://micro.mu/blog/2019/04/01/micro-version-1-and-beyond.html" target="_blank" rel="noopener">https://micro.mu/blog/2019/04/01/micro-version-1-and-beyond.html</a></li></ol></li><li><ol start="5"><li>图表库 go-echarts <a href="https://github.com/chenjiandongx/go-echarts" target="_blank" rel="noopener">https://github.com/chenjiandongx/go-echarts</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-04-01">gocn_news_2019-04-01</h2><ul><li><ol><li>Go，企业开发过程的关键语言？ <a href="https://www.infoq.com/presentations/go-lang-design" target="_blank" rel="noopener">https://www.infoq.com/presentations/go-lang-design</a></li></ol></li><li><ol start="2"><li>关于技术选型方法论的探索 <a href="https://mp.weixin.qq.com/s/Z7jK8XnKnoY-FiP4inGjsA" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/Z7jK8XnKnoY-FiP4inGjsA</a></li></ol></li><li><ol start="3"><li>近期性能优化案例 <a href="http://baixiaoustc.com/2019/03/27/2019-03-27-recent-server-performance-optimizaiton/" target="_blank" rel="noopener">http://baixiaoustc.com/2019/03/27/2019-03-27-recent-server-performance-optimizaiton/</a></li></ol></li><li><ol start="4"><li>使用sqlmock进行gorm单元测试 <a href="https://medium.com/@rosaniline/unit-testing-gorm-with-go-sqlmock-in-go-93cbce1f6b5b" target="_blank" rel="noopener">https://medium.com/@rosaniline/unit-testing-gorm-with-go-sqlmock-in-go-93cbce1f6b5b</a></li></ol></li><li><ol start="5"><li>Golang 轻量级-高并发socket框架——chitchat <a href="https://www.jianshu.com/p/956c04a9310b" target="_blank" rel="noopener">https://www.jianshu.com/p/956c04a9310b</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-03-31">gocn_news_2019-03-31</h2><ul><li><ol><li>浅谈Go语言select的实现原理 <a href="https://draveness.me/golang-select" target="_blank" rel="noopener">https://draveness.me/golang-select</a></li></ol></li><li><ol start="2"><li>优雅关闭的GoWeb服务器 <a href="https://marcofranssen.nl/go-webserver-with-gracefull-shutdown/" target="_blank" rel="noopener">https://marcofranssen.nl/go-webserver-with-gracefull-shutdown/</a></li></ol></li><li><ol start="3"><li>Go调度器追踪 <a href="https://studygolang.com/articles/19396" target="_blank" rel="noopener">https://studygolang.com/articles/19396</a></li></ol></li><li><ol start="4"><li>GoSocket操作笔记 <a href="https://segmentfault.com/a/1190000018715217" target="_blank" rel="noopener">https://segmentfault.com/a/1190000018715217</a></li></ol></li><li><ol start="5"><li>Redis喜提新数据结构:Streams <a href="https://mp.weixin.qq.com/s/PiUku0rlnGavskCAOU9xeQ" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/PiUku0rlnGavskCAOU9xeQ</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-03-30">gocn_news_2019-03-30</h2><ul><li><ol><li>Go语言2018调查报告发布 <a href="https://mp.weixin.qq.com/s/4GL-rCRpCFkgn7kyBusPkQ" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/4GL-rCRpCFkgn7kyBusPkQ</a></li></ol></li><li><ol start="2"><li>Go高性能工厂 <a href="https://dave.cheney.net/high-performance-go-workshop/dotgo-paris.html" target="_blank" rel="noopener">https://dave.cheney.net/high-performance-go-workshop/dotgo-paris.html</a></li></ol></li><li><ol start="3"><li>golang mod 入门 <a href="https://mp.weixin.qq.com/s/hymzPXLXmr5nR61y4m5ebA" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/hymzPXLXmr5nR61y4m5ebA</a></li></ol></li><li><ol start="4"><li>如何集中标准化收集go log <a href="https://www.datadoghq.com/blog/go-logging/" target="_blank" rel="noopener">https://www.datadoghq.com/blog/go-logging/</a></li></ol></li><li><ol start="5"><li>Go sync.Map 看一看 <a href="https://segmentfault.com/a/1190000018657984" target="_blank" rel="noopener">https://segmentfault.com/a/1190000018657984</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-03-29">gocn_news_2019-03-29</h2><ul><li><ol><li>马蜂窝搜索基于Golang并发代理的一次架构升级 <a href="http://zhuanlan.51cto.com/art/201903/594190.htm" target="_blank" rel="noopener">http://zhuanlan.51cto.com/art/201903/594190.htm</a></li></ol></li><li><ol start="2"><li>golang深入源代码系列之一：AST的遍历 <a href="http://baixiaoustc.com/2019/01/14/2019-01-14-golang-code-inspector-1-all-case/" target="_blank" rel="noopener">http://baixiaoustc.com/2019/01/14/2019-01-14-golang-code-inspector-1-all-case/</a></li></ol></li><li><ol start="3"><li>OpenResty在腾讯游戏营销技术中的应用和实践 <a href="https://mp.weixin.qq.com/s/Xwx62qOY7X8DFguqoot_cQ" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/Xwx62qOY7X8DFguqoot_cQ</a></li></ol></li><li><ol start="4"><li>知乎部署系统演进 <a href="https://mp.weixin.qq.com/s/mzwoFJYIlVVlncSNniHLsQ" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/mzwoFJYIlVVlncSNniHLsQ</a></li></ol></li><li><ol start="5"><li>Prometheus监控Kubernetes系列1——监控框架 <a href="https://mp.weixin.qq.com/s/iBQzN3DtIPa3wZ96d5Uvng" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/iBQzN3DtIPa3wZ96d5Uvng</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-03-28">gocn_news_2019-03-28</h2><ul><li><ol><li>golang中接口interface和struct结构类的分析 <a href="http://www.cnblogs.com/zhangdewang/p/10612089.html" target="_blank" rel="noopener">http://www.cnblogs.com/zhangdewang/p/10612089.html</a></li></ol></li><li><ol start="2"><li>木犀的第二代后端架构 <a href="http://zxc0328.github.io/2019/03/27/muxi-arch-2019/" target="_blank" rel="noopener">http://zxc0328.github.io/2019/03/27/muxi-arch-2019/</a></li></ol></li><li><ol start="3"><li>ERC20 代币作为 Hyperledger Fabric Golang 链码 <a href="http://blog.hubwiz.com/2019/03/26/hyperledger-fabric-golang-erc20/" target="_blank" rel="noopener">http://blog.hubwiz.com/2019/03/26/hyperledger-fabric-golang-erc20/</a></li></ol></li><li><ol start="4"><li>六年打磨！阿里开源混沌工程工具 ChaosBlade <a href="https://mp.weixin.qq.com/s/QLlCeYq_j0EwVzEMHHTwPg" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/QLlCeYq_j0EwVzEMHHTwPg</a></li></ol></li><li><ol start="5"><li>Kubernetes 1.14发布：对Windows节点的生产级支持、Kubectl更新与持久本地卷通用版本已全面到来 <a href="https://mp.weixin.qq.com/s/eQRpRfMVs9G2lfdk5rdAEg" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/eQRpRfMVs9G2lfdk5rdAEg</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-03-27">gocn_news_2019-03-27</h2><ul><li><ol><li>深入理解 Go map：初始化和访问元素 <a href="https://gocn.vip/article/1683" target="_blank" rel="noopener">https://gocn.vip/article/1683</a></li></ol></li><li><ol start="2"><li>调试在Go 1.12中部署的内容 <a href="https://blog.golang.org/debugging-what-you-deploy" target="_blank" rel="noopener">https://blog.golang.org/debugging-what-you-deploy</a></li></ol></li><li><ol start="3"><li>Go代码优化 <a href="https://docs.google.com/presentation/d/1cUVp8OuzOW4lzClsiptgacW7nSFkcgvhLRVAOgVPpYg/edit" target="_blank" rel="noopener">https://docs.google.com/presentation/d/1cUVp8OuzOW4lzClsiptgacW7nSFkcgvhLRVAOgVPpYg/edit</a></li></ol></li><li><ol start="4"><li>Go借助PProf的一次性能优化 <a href="https://juejin.im/post/5c987d8ce51d45516437b20f" target="_blank" rel="noopener">https://juejin.im/post/5c987d8ce51d45516437b20f</a></li></ol></li><li><ol start="5"><li>适用于Go项目的Makefile <a href="https://juejin.im/post/5c98edb56fb9a070d75585e3" target="_blank" rel="noopener">https://juejin.im/post/5c98edb56fb9a070d75585e3</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-03-26">gocn_news_2019-03-26</h2><ul><li><ol><li>Dave Cheney - Absolute Unit (Test) : <a href="https://www.youtube.com/watch?v=UKe5sX1dZ0k" target="_blank" rel="noopener">https://www.youtube.com/watch?v=UKe5sX1dZ0k</a></li></ol></li><li><ol start="2"><li>使用 Go 和 Flutter 搭建 App：<a href="https://divan.dev/talks/2019/gdgbcn/FlutterGomobile.pdf" target="_blank" rel="noopener">https://divan.dev/talks/2019/gdgbcn/FlutterGomobile.pdf</a></li></ol></li><li><ol start="3"><li>Istio 基础：<a href="https://medium.com/devopslinks/microservices-mesh-part-ii-istio-basics-b9c343594a05" target="_blank" rel="noopener">https://medium.com/devopslinks/microservices-mesh-part-ii-istio-basics-b9c343594a05</a></li></ol></li><li><ol start="4"><li>谷歌开源 k8s 原生 CI/CD 构建框架 Tekton：<a href="https://mp.weixin.qq.com/s/zP1u8ulwtIVbPOlnK4ttjQ" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/zP1u8ulwtIVbPOlnK4ttjQ</a></li></ol></li><li><ol start="5"><li>打造高效的工作环境 - SHELL 篇：<a href="https://coolshell.cn/articles/19219.html" target="_blank" rel="noopener">https://coolshell.cn/articles/19219.html</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-03-25">gocn_news_2019-03-25</h2><ul><li><ol><li>恒温器数据收集 <a href="https://medium.com/@stevenyue/an-investigation-of-my-home-thermostat-d52c835e90eb" target="_blank" rel="noopener">https://medium.com/@stevenyue/an-investigation-of-my-home-thermostat-d52c835e90eb</a></li></ol></li><li><ol start="2"><li>深入理解 Go map：赋值和扩容迁移 <a href="https://segmentfault.com/a/1190000018632347" target="_blank" rel="noopener">https://segmentfault.com/a/1190000018632347</a></li></ol></li><li><ol start="3"><li>【Go】IP地址转换：数字与字符串之间的转换 <a href="https://blog.thinkeridea.com/201903/go/ip2long.html" target="_blank" rel="noopener">https://blog.thinkeridea.com/201903/go/ip2long.html</a></li></ol></li><li><ol start="4"><li>关于 Go 应该知晓的事 <a href="https://medium.com/@ginnyfahs/staying-in-the-know-with-go-9bf719ccc3d1" target="_blank" rel="noopener">https://medium.com/@ginnyfahs/staying-in-the-know-with-go-9bf719ccc3d1</a></li></ol></li><li><ol start="5"><li>练习：Unix 系统常用基础工具 Go 实现版本 <a href="https://github.com/aporcupine/GoUnix" target="_blank" rel="noopener">https://github.com/aporcupine/GoUnix</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-03-24">gocn_news_2019-03-24</h2><ul><li><ol><li>Go 1.13 规划 <a href="https://groups.google.com/forum/#!topic/golang-dev/jln8MwFpATc" target="_blank" rel="noopener">https://groups.google.com/forum/#!topic/golang-dev/jln8MwFpATc</a></li></ol></li><li><ol start="2"><li>MySQL 连接的处理和扩展 <a href="https://mysqlserverteam.com/mysql-connection-handling-and-scaling/" target="_blank" rel="noopener">https://mysqlserverteam.com/mysql-connection-handling-and-scaling/</a></li></ol></li><li><ol start="3"><li>描述命令行界面的声明性语言 <a href="https://github.com/celicoo/docli" target="_blank" rel="noopener">https://github.com/celicoo/docli</a></li></ol></li><li><ol start="4"><li>如何为大型 Go 程序构建微型 Docker 镜像 <a href="https://medium.com/@valyala/stripping-dependency-bloat-in-victoriametrics-docker-image-983fb5912b0d" target="_blank" rel="noopener">https://medium.com/@valyala/stripping-dependency-bloat-in-victoriametrics-docker-image-983fb5912b0d</a></li></ol></li><li><ol start="5"><li>使用 Go 和 RabbitMQ 的工作队列 <a href="https://medium.com/@masnun/work-queue-with-go-and-rabbitmq-b8c295cde861" target="_blank" rel="noopener">https://medium.com/@masnun/work-queue-with-go-and-rabbitmq-b8c295cde861</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-03-23">gocn_news_2019-03-23</h2><ul><li><ol><li>入门 Go 语言必须跨越的五个思维误区 <a href="https://www.infoq.cn/article/qzrGhlzq_HikN10xC5jC" target="_blank" rel="noopener">https://www.infoq.cn/article/qzrGhlzq_HikN10xC5jC</a></li></ol></li><li><ol start="2"><li>Golang 多goroutine异步通知error的一种方法 <a href="https://www.jianshu.com/p/5e7ce22d9831" target="_blank" rel="noopener">https://www.jianshu.com/p/5e7ce22d9831</a></li></ol></li><li><ol start="3"><li>使用Go模块获取私有依赖项 <a href="https://medium.com/@tim_raymond/fetching-private-dependencies-with-go-modules-1d65afe47c62" target="_blank" rel="noopener">https://medium.com/@tim_raymond/fetching-private-dependencies-with-go-modules-1d65afe47c62</a></li></ol></li><li><ol start="4"><li>CRFS：容器注册表文件系统 <a href="https://github.com/google/crfs" target="_blank" rel="noopener">https://github.com/google/crfs</a></li></ol></li><li><ol start="5"><li>在Go中构建现代桌面应用程序 <a href="https://www.youtube.com/watch?v=uLijmr6ZoGs" target="_blank" rel="noopener">https://www.youtube.com/watch?v=uLijmr6ZoGs</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-03-22">gocn_news_2019-03-22</h2><ul><li><ol><li>从 dep 迁移到 mod <a href="http://elliot.land/post/migrating-projects-from-dep-to-go-modules" target="_blank" rel="noopener">http://elliot.land/post/migrating-projects-from-dep-to-go-modules</a></li></ol></li><li><ol start="2"><li>Go http.Flusher 在实际项目中的应用 <a href="http://www.songjiayang.com/posts/go-http-zhong-flusher-zai-shi-ji-kai-fa-zhong-de-ying-yong" target="_blank" rel="noopener">http://www.songjiayang.com/posts/go-http-zhong-flusher-zai-shi-ji-kai-fa-zhong-de-ying-yong</a></li></ol></li><li><ol start="3"><li>结合 docker 做 Go 项目集成测试 <a href="https://www.ardanlabs.com/blog/2019/03/integration-testing-in-go-executing-tests-with-docker.html" target="_blank" rel="noopener">https://www.ardanlabs.com/blog/2019/03/integration-testing-in-go-executing-tests-with-docker.html</a><br>4.从 nginx 热更新聊一聊 Go 中的热更新（下） <a href="https://zhuanlan.zhihu.com/p/59196185" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/59196185</a></li></ol></li><li><ol start="4"><li>使用排队论做容量规划 <a href="https://hackernoon.com/why-capacity-planning-needs-queueing-theory-without-the-hard-math-342a851e215c" target="_blank" rel="noopener">https://hackernoon.com/why-capacity-planning-needs-queueing-theory-without-the-hard-math-342a851e215c</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-03-21">gocn_news_2019-03-21</h2><ul><li><ol><li>Go实现的具有动态分片策略的高级HTTP反向代理器Weaver <a href="https://github.com/gojektech/weaver" target="_blank" rel="noopener">https://github.com/gojektech/weaver</a></li></ol></li><li><ol start="2"><li>回到Traefik 2.0 <a href="https://blog.containo.us/back-to-traefik-2-0-2f9aa17be305" target="_blank" rel="noopener">https://blog.containo.us/back-to-traefik-2-0-2f9aa17be305</a></li></ol></li><li><ol start="3"><li>使用Go Modules <a href="https://blog.golang.org/using-go-modules" target="_blank" rel="noopener">https://blog.golang.org/using-go-modules</a></li></ol></li><li><ol start="4"><li>Go-Gin-React-GORM的结合使用  <a href="https://nichorivera.blog/" target="_blank" rel="noopener">https://nichorivera.blog/</a></li></ol></li><li><ol start="5"><li>从PHP到Go：Arrays <a href="https://asanchez.dev/blog/from-php-to-go-arrays/" target="_blank" rel="noopener">https://asanchez.dev/blog/from-php-to-go-arrays/</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-03-20">gocn_news_2019-03-20</h2><ul><li><ol><li>从python到Go <a href="https://medium.com/appsflyer/my-journey-from-python-to-go-3859783c6b3c" target="_blank" rel="noopener">https://medium.com/appsflyer/my-journey-from-python-to-go-3859783c6b3c</a></li></ol></li><li><ol start="2"><li>[译] Go数据结构-接口 <a href="http://www.cnblogs.com/MnCu8261/p/10561348.html" target="_blank" rel="noopener">http://www.cnblogs.com/MnCu8261/p/10561348.html</a></li></ol></li><li><ol start="3"><li>Go语言变量逃逸分析 <a href="https://www.linuxidc.com/Linux/2019-03/157572.htm" target="_blank" rel="noopener">https://www.linuxidc.com/Linux/2019-03/157572.htm</a></li></ol></li><li><ol start="4"><li>Prometheus: 自定义你的应用指标 <a href="https://sysdig.com/blog/prometheus-metrics/" target="_blank" rel="noopener">https://sysdig.com/blog/prometheus-metrics/</a></li></ol></li><li><ol start="5"><li>深入Go的底层，带你走近一群有追求的人 <a href="https://mp.weixin.qq.com/s/obnnVkO2EiFnuXk_AIDHWw" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/obnnVkO2EiFnuXk_AIDHWw</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-03-19">gocn_news_2019-03-19</h2><ul><li><ol><li>Go 语言 for 和 range 的实现 <a href="https://draveness.me/golang-for-range" target="_blank" rel="noopener">https://draveness.me/golang-for-range</a></li></ol></li><li><ol start="2"><li>浅谈 Go 标准库对 JSON 的处理效率 <a href="https://jingwei.link/2019/03/16/golang-json-performance.html" target="_blank" rel="noopener">https://jingwei.link/2019/03/16/golang-json-performance.html</a></li></ol></li><li><ol start="3"><li>输出程序的 Go Module 版本信息到 Prometheus <a href="https://povilasv.me/exposing-go-modules-to-prometheus/" target="_blank" rel="noopener">https://povilasv.me/exposing-go-modules-to-prometheus/</a></li></ol></li><li><ol start="4"><li>在 Golang 的 HTTP 请求中共享数据 <a href="https://huoding.com/2019/02/08/718" target="_blank" rel="noopener">https://huoding.com/2019/02/08/718</a></li></ol></li><li><ol start="5"><li>不要提交没有格式化的 Go 代码 <a href="https://medium.com/@corylanou/dont-commit-improperly-formatted-go-golang-code-5cea011d589d" target="_blank" rel="noopener">https://medium.com/@corylanou/dont-commit-improperly-formatted-go-golang-code-5cea011d589d</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-03-18">gocn_news_2019-03-18</h2><ul><li><ol><li>从nginx热更新聊一聊Golang中的服务器热更新 <a href="https://zhuanlan.zhihu.com/p/59193526" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/59193526</a></li></ol></li><li><ol start="2"><li>Golang接口和面向对象笔记 <a href="https://medium.com/@s0958334772/golang-interface-oo-note-14fb1cb76600" target="_blank" rel="noopener">https://medium.com/@s0958334772/golang-interface-oo-note-14fb1cb76600</a></li></ol></li><li><ol start="3"><li>60秒实现Golang API微服务 <a href="https://medium.com/@tjholowaychuk/serverless-golang-apis-in-60-seconds-46e4ac36b680" target="_blank" rel="noopener">https://medium.com/@tjholowaychuk/serverless-golang-apis-in-60-seconds-46e4ac36b680</a></li></ol></li><li><ol start="4"><li>Go实现的通用表达式语言 <a href="https://github.com/google/cel-go" target="_blank" rel="noopener">https://github.com/google/cel-go</a></li></ol></li><li><ol start="5"><li>支持动态分配策略的HTTP代理 <a href="https://github.com/gojektech/weaver" target="_blank" rel="noopener">https://github.com/gojektech/weaver</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-03-17">gocn_news_2019-03-17</h2><ul><li><ol><li>通过context deadline实现服务超时 <a href="https://engineering.grab.com/context-deadlines-and-how-to-set-them" target="_blank" rel="noopener">https://engineering.grab.com/context-deadlines-and-how-to-set-them</a></li></ol></li><li><ol start="2"><li>Golang中的行为驱动开发 <a href="https://alicegg.tech/2019/03/09/gobdd.html" target="_blank" rel="noopener">https://alicegg.tech/2019/03/09/gobdd.html</a></li></ol></li><li><ol start="3"><li>实用string操作技巧 <a href="https://yourbasic.org/golang/string-functions-reference-cheat-sheet" target="_blank" rel="noopener">https://yourbasic.org/golang/string-functions-reference-cheat-sheet</a></li></ol></li><li><ol start="4"><li>通过pprof修复bug <a href="https://nicholasjackson.io/2019/03/01/fixing-bugs-with-pprof" target="_blank" rel="noopener">https://nicholasjackson.io/2019/03/01/fixing-bugs-with-pprof</a></li></ol></li><li><ol start="5"><li>从技术演变的角度看互联网后台架构 <a href="https://mp.weixin.qq.com/s/ybQd4zXyfQlUdbvbQl0h9A" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/ybQd4zXyfQlUdbvbQl0h9A</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-03-16">gocn_news_2019-03-16</h2><ul><li><ol><li>GoLand 2019.1Beta版发布（内置堆、CPU、锁等分析器）<a href="https://blog.jetbrains.com/go/2019/03/14/goland-2019-1-goes-beta/" target="_blank" rel="noopener">https://blog.jetbrains.com/go/2019/03/14/goland-2019-1-goes-beta/</a></li></ol></li><li><ol start="2"><li>百万 Go TCP 连接的思考3: 正常连接下的吞吐率和延迟  <a href="https://colobu.com/2019/02/28/1m-go-tcp-connection-3/" target="_blank" rel="noopener">https://colobu.com/2019/02/28/1m-go-tcp-connection-3/</a></li></ol></li><li><ol start="3"><li>Golang中使用高阶函数实现依赖注入  <a href="https://stein.wtf/posts/2019-03-12/inject/" target="_blank" rel="noopener">https://stein.wtf/posts/2019-03-12/inject/</a></li></ol></li><li><ol start="4"><li>Goroutines原理和它的工作模式 <a href="https://medium.com/@joaoh82/what-are-goroutines-and-how-do-they-actually-work-f2a734f6f991" target="_blank" rel="noopener">https://medium.com/@joaoh82/what-are-goroutines-and-how-do-they-actually-work-f2a734f6f991</a></li></ol></li><li><ol start="5"><li>Go开发的嵌入式、快速持久化队列 <a href="https://github.com/grandecola/bigqueue" target="_blank" rel="noopener">https://github.com/grandecola/bigqueue</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-03-15">gocn_news_2019-03-15</h2><ul><li><ol><li>GopherChina 2019 第二阶段购票今天结束了，明天涨价了 <a href="http://gocn5th.bagevent.com" target="_blank" rel="noopener">gocn5th.bagevent.com</a></li></ol></li><li><ol start="2"><li>在NodeSource中使用Go作为平台基础语言 <a href="https://nodesource.com/blog/using-go-infrastructure-language" target="_blank" rel="noopener">https://nodesource.com/blog/using-go-infrastructure-language</a></li></ol></li><li><ol start="3"><li>SlimTrie：战胜Btree单机百亿文件的极致索引-实现篇 <a href="https://mp.weixin.qq.com/s/QSnKJCtbZCbW0ymsvY8IFQ" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/QSnKJCtbZCbW0ymsvY8IFQ</a></li></ol></li><li><ol start="4"><li>PouchContainer 集成测试覆盖率统计 <a href="https://mp.weixin.qq.com/s/oUBbj2ZNnAhdY9bOhIBKiw" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/oUBbj2ZNnAhdY9bOhIBKiw</a></li></ol></li><li><ol start="5"><li>Golang Dep 依赖冲突处理 <a href="https://ms2008.github.io/2019/03/14/golang-dep/" target="_blank" rel="noopener">https://ms2008.github.io/2019/03/14/golang-dep/</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-03-14">gocn_news_2019-03-14</h2><ul><li><ol><li>DLang、Rust 以及 Golang 对比数据库操作方式： <a href="https://my.oschina.net/jiaqing/blog/3021369" target="_blank" rel="noopener">https://my.oschina.net/jiaqing/blog/3021369</a></li></ol></li><li><ol start="2"><li>关于go 语言中的延迟执行函数：<a href="https://www.jianshu.com/p/441c016f527e" target="_blank" rel="noopener">https://www.jianshu.com/p/441c016f527e</a></li></ol></li><li><ol start="3"><li>go学习笔记 利用chan嵌套chan 实现函数异步执行 顺序返回值： <a href="https://studygolang.com/articles/18854" target="_blank" rel="noopener">https://studygolang.com/articles/18854</a></li></ol></li><li><ol start="4"><li>Uber开源P2P容器仓库Kraken，每秒分布TB级数据：<a href="https://mp.weixin.qq.com/s/MUUlIKDC6LExWOCWUmossg" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/MUUlIKDC6LExWOCWUmossg</a></li></ol></li><li><ol start="5"><li>微服务测试及镜像化提测全流程实践：<a href="https://mp.weixin.qq.com/s/ao3BojXIeWjuC2_K8ObNZg" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/ao3BojXIeWjuC2_K8ObNZg</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-03-13">gocn_news_2019-03-13</h2><ul><li><ol><li>图解Go语言内存分配 <a href="http://www.cnblogs.com/qcrao-2018/p/10520785.html" target="_blank" rel="noopener">http://www.cnblogs.com/qcrao-2018/p/10520785.html</a></li></ol></li><li><ol start="2"><li>让我们用Go来写一个简单的事件处理总线 <a href="https://levelup.gitconnected.com/lets-write-a-simple-event-bus-in-go-79b9480d8997" target="_blank" rel="noopener">https://levelup.gitconnected.com/lets-write-a-simple-event-bus-in-go-79b9480d8997</a></li></ol></li><li><ol start="3"><li>当Go遇上了Lua <a href="https://segmentfault.com/a/1190000018482369" target="_blank" rel="noopener">https://segmentfault.com/a/1190000018482369</a></li></ol></li><li><ol start="4"><li>我应该用Go还是Node.js来开发我下一个APP <a href="https://medium.com/@faith.chikwekwe/should-i-use-golang-or-node-js-for-my-next-app-e15d9c71358e" target="_blank" rel="noopener">https://medium.com/@faith.chikwekwe/should-i-use-golang-or-node-js-for-my-next-app-e15d9c71358e</a></li></ol></li><li><ol start="5"><li>《Go语言四十二章经》 <a href="https://github.com/ffhelicopter/Go42" target="_blank" rel="noopener">https://github.com/ffhelicopter/Go42</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-03-12">gocn_news_2019-03-12</h2><ul><li><ol><li>Go gRPC 简介：<a href="https://blog.lelonek.me/a-brief-introduction-to-grpc-in-go-e66e596fe244" target="_blank" rel="noopener">https://blog.lelonek.me/a-brief-introduction-to-grpc-in-go-e66e596fe244</a></li></ol></li><li><ol start="2"><li>Go interface 不适用的场景：<a href="https://medium.com/@kent.rancourt/go-pointers-when-i-dont-use-interfaces-in-go-1888ea6e9bb5" target="_blank" rel="noopener">https://medium.com/@kent.rancourt/go-pointers-when-i-dont-use-interfaces-in-go-1888ea6e9bb5</a></li></ol></li><li><ol start="3"><li>Go 生态圈的 K/V 数据库 benchmark： <a href="https://colobu.com/2019/03/05/go-kv-databases-benchmark/" target="_blank" rel="noopener">https://colobu.com/2019/03/05/go-kv-databases-benchmark/</a></li></ol></li><li><ol start="4"><li>基于 k8s 的边缘计算框架：<a href="https://github.com/kubeedge/kubeedge" target="_blank" rel="noopener">https://github.com/kubeedge/kubeedge</a></li></ol></li><li><ol start="5"><li>借助外部工具分析 Prometheus 数据：<a href="https://medium.com/@valyala/analyzing-prometheus-data-with-external-tools-5f3e5e147639" target="_blank" rel="noopener">https://medium.com/@valyala/analyzing-prometheus-data-with-external-tools-5f3e5e147639</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-03-11">gocn_news_2019-03-11</h2><ul><li><ol><li>针对 Go 开发者的 GraphQL 工作台 <a href="https://graphql-go.wesovilabs.com" target="_blank" rel="noopener">https://graphql-go.wesovilabs.com</a></li></ol></li><li><ol start="2"><li>测试驱动开发和 Go <a href="https://medium.com/@AnwarHidayat/test-driven-development-with-golang-1a21a2f491bc" target="_blank" rel="noopener">https://medium.com/@AnwarHidayat/test-driven-development-with-golang-1a21a2f491bc</a></li></ol></li><li><ol start="3"><li>Go 调度源码浅析 <a href="https://www.jianshu.com/p/3071738503ee" target="_blank" rel="noopener">https://www.jianshu.com/p/3071738503ee</a></li></ol></li><li><ol start="4"><li>5分钟部署 Golang 包到 AWS Lambda <a href="https://medium.com/@daniel.woods/deploying-a-golang-package-to-aws-lambda-in-5-minutes-cd11685f576" target="_blank" rel="noopener">https://medium.com/@daniel.woods/deploying-a-golang-package-to-aws-lambda-in-5-minutes-cd11685f576</a></li></ol></li><li><ol start="5"><li>20分钟入门 LLVM 对Go编译器实时编码 <a href="https://github.com/pwaller/go2ll-talk" target="_blank" rel="noopener">https://github.com/pwaller/go2ll-talk</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-03-10">gocn_news_2019-03-10</h2><ul><li><ol><li>Gopher China 2019 讲师专访 - 徐成选 <a href="https://mp.weixin.qq.com/s/Jn7dV52ZnpGD9XTny6X1bQ" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/Jn7dV52ZnpGD9XTny6X1bQ</a></li></ol></li><li><ol start="2"><li>使用gRPC连接AWS Lambda <a href="https://blog.coinbase.com/grpc-to-aws-lambda-is-it-possible-4b29a9171d7f" target="_blank" rel="noopener">https://blog.coinbase.com/grpc-to-aws-lambda-is-it-possible-4b29a9171d7f</a></li></ol></li><li><ol start="3"><li>在树莓派上玩k8s <a href="https://medium.com/@mabrams_46032/kubernetes-on-raspberry-pi-c246c72f362f" target="_blank" rel="noopener">https://medium.com/@mabrams_46032/kubernetes-on-raspberry-pi-c246c72f362f</a></li></ol></li><li><ol start="4"><li>通过Istio指标实现k8s的自动扩展 <a href="https://medium.com/google-cloud/kubernetes-autoscaling-with-istio-metrics-76442253a45a" target="_blank" rel="noopener">https://medium.com/google-cloud/kubernetes-autoscaling-with-istio-metrics-76442253a45a</a></li></ol></li><li><ol start="5"><li>athena2csv: AWS Athena查询工具 <a href="https://github.com/flowerinthenight/athena2csv" target="_blank" rel="noopener">https://github.com/flowerinthenight/athena2csv</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-03-09">gocn_news_2019-03-09</h2><ul><li><ol><li>使用Goland调试Go程序之高级调试特性介绍 <a href="https://blog.jetbrains.com/go/2019/03/04/debugging-with-goland-advanced-debugging-features/" target="_blank" rel="noopener">https://blog.jetbrains.com/go/2019/03/04/debugging-with-goland-advanced-debugging-features/</a></li></ol></li><li><ol start="2"><li>gopass管理团队密钥 <a href="https://blog.codecentric.de/en/2019/02/manage-team-passwords-gopass/" target="_blank" rel="noopener">https://blog.codecentric.de/en/2019/02/manage-team-passwords-gopass/</a></li></ol></li><li><ol start="3"><li>企业级持续交付&amp;开发运维自动化平台 <a href="https://github.com/ovh/cds" target="_blank" rel="noopener">https://github.com/ovh/cds</a></li></ol></li><li><ol start="4"><li>图解 Go 内存分配器 <a href="https://blog.learngoprogramming.com/a-visual-guide-to-golang-memory-allocator-from-ground-up-e132258453ed" target="_blank" rel="noopener">https://blog.learngoprogramming.com/a-visual-guide-to-golang-memory-allocator-from-ground-up-e132258453ed</a></li></ol></li><li><ol start="5"><li>system-design-primer 学习如何设计大型系统 <a href="https://github.com/donnemartin/system-design-primer" target="_blank" rel="noopener">https://github.com/donnemartin/system-design-primer</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-03-08">gocn_news_2019-03-08</h2><ul><li><ol><li>Go Channels完全指南 <a href="https://go101.org/article/channel.html" target="_blank" rel="noopener">https://go101.org/article/channel.html</a></li></ol></li><li><ol start="2"><li>Go 缓存实现的最新水平 <a href="https://blog.dgraph.io/post/caching-in-go/" target="_blank" rel="noopener">https://blog.dgraph.io/post/caching-in-go/</a></li></ol></li><li><ol start="3"><li>Uber开源了P2P镜像仓库Kraken <a href="https://eng.uber.com/introducing-kraken/" target="_blank" rel="noopener">https://eng.uber.com/introducing-kraken/</a></li></ol></li><li><ol start="4"><li>go-tflite:TensorFlow Lite的Go语言链接库 <a href="https://github.com/mattn/go-tflite" target="_blank" rel="noopener">https://github.com/mattn/go-tflite</a></li></ol></li><li><ol start="5"><li>pipe-to-me:使用curl实现流式交互 <a href="https://github.com/jpschroeder/pipe-to-me" target="_blank" rel="noopener">https://github.com/jpschroeder/pipe-to-me</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-03-07">gocn_news_2019-03-07</h2><ul><li><ol><li>用Hugo重写我的个人网站 <a href="https://dev.to/restoreddev/rewriting-my-personal-site-with-hugo-1708" target="_blank" rel="noopener">https://dev.to/restoreddev/rewriting-my-personal-site-with-hugo-1708</a></li></ol></li><li><ol start="2"><li>基于WebAssembly的实验 <a href="https://dev.to/jeremylikness/gopher-meet-plasma-a-webassembly-experiment-4anl" target="_blank" rel="noopener">https://dev.to/jeremylikness/gopher-meet-plasma-a-webassembly-experiment-4anl</a></li></ol></li><li><ol start="3"><li>学习写Golang代码的测试 <a href="https://dev.to/taylorsilva/learning-tests-11fe" target="_blank" rel="noopener">https://dev.to/taylorsilva/learning-tests-11fe</a></li></ol></li><li><ol start="4"><li>优雅的关闭Go webserver <a href="https://marcofranssen.nl/go-webserver-with-gracefull-shutdown/" target="_blank" rel="noopener">https://marcofranssen.nl/go-webserver-with-gracefull-shutdown/</a></li></ol></li><li><ol start="5"><li>Go高级并发模式 <a href="https://blogtitle.github.io/go-advanced-concurrency-patterns-part-2-timers/" target="_blank" rel="noopener">https://blogtitle.github.io/go-advanced-concurrency-patterns-part-2-timers/</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-03-06">gocn_news_2019-03-06</h2><ul><li><ol><li>Gopher China 2019 讲师专访 - 杜旭 <a href="https://mp.weixin.qq.com/s/LsUV4KmapJhxKBV5Sd3XDA" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/LsUV4KmapJhxKBV5Sd3XDA</a></li></ol></li><li><ol start="2"><li>使用Plugin的方式开发Go Web服务应用 <a href="https://medium.com/quick-code/write-a-web-service-with-go-plug-ins-c0472e0645e6" target="_blank" rel="noopener">https://medium.com/quick-code/write-a-web-service-with-go-plug-ins-c0472e0645e6</a></li></ol></li><li><ol start="3"><li>基于Mixin Network的Go语言比特币开发 <a href="https://segmentfault.com/a/1190000018398339" target="_blank" rel="noopener">https://segmentfault.com/a/1190000018398339</a></li></ol></li><li><ol start="4"><li>go-kit微服务：服务熔断 <a href="https://juejin.im/post/5c7e564651882546c846c101" target="_blank" rel="noopener">https://juejin.im/post/5c7e564651882546c846c101</a></li></ol></li><li><ol start="5"><li>声明式渗透测试框架 <a href="https://github.com/stevenaldinger/decker" target="_blank" rel="noopener">https://github.com/stevenaldinger/decker</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-03-05">gocn_news_2019-03-05</h2><ul><li><ol><li>微服务中的 GraphQL <a href="https://itnext.io/graphql-in-a-microservices-architecture-d17922b886eb" target="_blank" rel="noopener">https://itnext.io/graphql-in-a-microservices-architecture-d17922b886eb</a></li></ol></li><li><ol start="2"><li>Go 1.12  TLS 1.3 简单测试 <a href="https://liudanking.com/sitelog/go-1-12-tls-1-3-test/" target="_blank" rel="noopener">https://liudanking.com/sitelog/go-1-12-tls-1-3-test/</a></li></ol></li><li><ol start="3"><li>Open-Falcon 存储优化: 高性能内存 TSDB 的诞生 <a href="https://mp.weixin.qq.com/s/ztQtn6-g5fxViu9Ox_W-tA" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/ztQtn6-g5fxViu9Ox_W-tA</a></li></ol></li><li><ol start="4"><li>Go 中心化代码源校验提议 <a href="https://go.googlesource.com/proposal/+/master/design/25530-notary.md" target="_blank" rel="noopener">https://go.googlesource.com/proposal/+/master/design/25530-notary.md</a></li></ol></li><li><ol start="5"><li>我的 HTTP/3 学习笔记 <a href="https://mp.weixin.qq.com/s/bD8C0oR34ZKUEZjN9yBSJg" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/bD8C0oR34ZKUEZjN9yBSJg</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-03-04">gocn_news_2019-03-04</h2><ul><li><ol><li>基于hashicorp/raft的分布式一致性实战教学 <a href="https://zhuanlan.zhihu.com/p/58048906" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/58048906</a></li></ol></li><li><ol start="2"><li>再见，微服务: 从一百多个问题孩子到一个巨星 <a href="https://segment.com/blog/goodbye-microservices" target="_blank" rel="noopener">https://segment.com/blog/goodbye-microservices</a></li></ol></li><li><ol start="3"><li>Go Windows编程教程 <a href="https://github.com/hallazzang/go-windows-programming" target="_blank" rel="noopener">https://github.com/hallazzang/go-windows-programming</a></li></ol></li><li><ol start="4"><li>理解真实世界中Go的并发BUG <a href="https://songlh.github.io/paper/go-study.pdf" target="_blank" rel="noopener">https://songlh.github.io/paper/go-study.pdf</a></li></ol></li><li><ol start="5"><li>derek: Go实现的Github仓库管理机器人 <a href="https://github.com/alexellis/derek" target="_blank" rel="noopener">https://github.com/alexellis/derek</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-03-03">gocn_news_2019-03-03</h2><ul><li><ol><li>支持百万连接服务器的benchmark实现 <a href="https://github.com/smallnest/1m-go-tcp-server" target="_blank" rel="noopener">https://github.com/smallnest/1m-go-tcp-server</a></li></ol></li><li><ol start="2"><li>Go环境变量指南 <a href="https://endaphelan.me/guides/golang/a-no-nonsense-guide-to-environment-variables-in-go/" target="_blank" rel="noopener">https://endaphelan.me/guides/golang/a-no-nonsense-guide-to-environment-variables-in-go/</a></li></ol></li><li><ol start="3"><li>Go 1.12中值得关注的几个变化 <a href="https://tonybai.com/2019/03/02/some-changes-in-go-1-12" target="_blank" rel="noopener">https://tonybai.com/2019/03/02/some-changes-in-go-1-12</a></li></ol></li><li><ol start="4"><li>TCP拥塞控制算法简介 <a href="https://mp.weixin.qq.com/s/v8dBxRSOwJaQWxuKVyLv2A" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/v8dBxRSOwJaQWxuKVyLv2A</a></li></ol></li><li><ol start="5"><li>一致性Hash算法的实际应用 <a href="https://crossoverjie.top/2019/03/01/algorithm/consistent-hash/" target="_blank" rel="noopener">https://crossoverjie.top/2019/03/01/algorithm/consistent-hash/</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-03-02">gocn_news_2019-03-02</h2><ul><li><ol><li>Golang操作GraphQL：从基础到高级的深度探索 <a href="https://medium.freecodecamp.org/deep-dive-into-graphql-with-golang-d3e02a429ac3" target="_blank" rel="noopener">https://medium.freecodecamp.org/deep-dive-into-graphql-with-golang-d3e02a429ac3</a></li></ol></li><li><ol start="2"><li>gRPC-web现状及测试 <a href="https://mp.weixin.qq.com/s/lIcNB6_69exfciiRQd7rGQ" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/lIcNB6_69exfciiRQd7rGQ</a></li></ol></li><li><ol start="3"><li>为什么已有 Elasticsearch，我们还要重造实时分析引擎 AresDB？<br><a href="https://www.infoq.cn/article/96KL3BQwqz-IzxYi2wUO" target="_blank" rel="noopener">https://www.infoq.cn/article/96KL3BQwqz-IzxYi2wUO</a></li></ol></li><li><ol start="4"><li>Go高级并发模型Part2-定时器 <a href="https://blogtitle.github.io/go-advanced-concurrency-patterns-part-2-timers/" target="_blank" rel="noopener">https://blogtitle.github.io/go-advanced-concurrency-patterns-part-2-timers/</a></li></ol></li><li><ol start="5"><li>在Kubernetes中创建动态测试环境 <a href="https://engineering.dollarshaveclub.com/acyl-is-open-source-beea9db66116" target="_blank" rel="noopener">https://engineering.dollarshaveclub.com/acyl-is-open-source-beea9db66116</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-03-01">gocn_news_2019-03-01</h2><ul><li><ol><li>Go重写clohure 编写的API gateway <a href="https://www.infoq.com/articles/api-gateway-clojure-golang" target="_blank" rel="noopener">https://www.infoq.com/articles/api-gateway-clojure-golang</a></li></ol></li><li><ol start="2"><li>如何用Go编写一个kv存储  <a href="https://medium.com/@naqvi.jafar91/how-i-built-a-key-value-store-in-go-bd89f68062a8" target="_blank" rel="noopener">https://medium.com/@naqvi.jafar91/how-i-built-a-key-value-store-in-go-bd89f68062a8</a></li></ol></li><li><ol start="3"><li>containerd正式从CNCF毕业 <a href="https://mp.weixin.qq.com/s/sQ0n-daFxXI60zHWGTghmA" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/sQ0n-daFxXI60zHWGTghmA</a></li></ol></li><li><ol start="4"><li>K3s初探：Rancher架构师带你尝鲜史上最轻量Kubernetes发行版 <a href="https://mp.weixin.qq.com/s/ZFiLwHbgdldkT9ZW26baNg" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/ZFiLwHbgdldkT9ZW26baNg</a></li></ol></li><li><ol start="5"><li>Istio——企业级微服务解决方案 <a href="https://blog.aquasec.com/istio-kubernetes-service-mesh" target="_blank" rel="noopener">https://blog.aquasec.com/istio-kubernetes-service-mesh</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-02-28">gocn_news_2019-02-28</h2><ul><li><ol><li>Gopher China 2019 讲师专访 -晁岳攀 <a href="https://mp.weixin.qq.com/s/HET7DvJ79iMkzfRpD1bdbQ" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/HET7DvJ79iMkzfRpD1bdbQ</a></li></ol></li><li><ol start="2"><li>百万 Go TCP 连接的思考2: 百万连接的吞吐率和延迟   <a href="https://colobu.com/2019/02/27/1m-go-tcp-connection-2/" target="_blank" rel="noopener">https://colobu.com/2019/02/27/1m-go-tcp-connection-2/</a></li></ol></li><li><ol start="3"><li>腾讯 Tars-Go 服务获取自定义模版（配置）值 <a href="https://segmentfault.com/a/1190000018271503" target="_blank" rel="noopener">https://segmentfault.com/a/1190000018271503</a></li></ol></li><li><ol start="4"><li>golang中的slice操作 <a href="https://juejin.im/post/5c74ed0fe51d450ba1486195" target="_blank" rel="noopener">https://juejin.im/post/5c74ed0fe51d450ba1486195</a></li></ol></li><li><ol start="5"><li>容器云在证券行业的探索与实践 <a href="https://mp.weixin.qq.com/s/yz2DC4Sl4z6-fchF5-Wmfw" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/yz2DC4Sl4z6-fchF5-Wmfw</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-02-27">gocn_news_2019-02-27</h2><ul><li><ol><li>重磅！会前一天培训讲师揭晓：Dave&amp;William <a href="https://mp.weixin.qq.com/s/alXVCTI_T9PwrgBjselVIA" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/alXVCTI_T9PwrgBjselVIA</a></li></ol></li><li><ol start="2"><li>Go 1.12 版本的新特性 <a href="https://juejin.im/post/5c753a17f265da2d8c7dd715" target="_blank" rel="noopener">https://juejin.im/post/5c753a17f265da2d8c7dd715</a></li></ol></li><li><ol start="3"><li>Golang之轻松化解defer的温柔陷阱 <a href="https://mp.weixin.qq.com/s/txj7jQNki_8zIArb9kSHeg" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/txj7jQNki_8zIArb9kSHeg</a></li></ol></li><li><ol start="4"><li>Go异常与返回值 <a href="https://blog.hltbra.net/2019/02/26/exceptions-vs-returns.html" target="_blank" rel="noopener">https://blog.hltbra.net/2019/02/26/exceptions-vs-returns.html</a></li></ol></li><li><ol start="5"><li>使用Go和llvm的WebAssembly高效前端开发 <a href="https://medium.com/@richardanaya/hyper-efficient-front-end-development-with-web-assembly-using-go-and-llvm-8e6a1ccdd2bc" target="_blank" rel="noopener">https://medium.com/@richardanaya/hyper-efficient-front-end-development-with-web-assembly-using-go-and-llvm-8e6a1ccdd2bc</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-02-26">gocn_news_2019-02-26</h2><ul><li><ol><li>Go 1.12 发布：<a href="https://blog.golang.org/go1.12" target="_blank" rel="noopener">https://blog.golang.org/go1.12</a></li></ol></li><li><ol start="2"><li>Go 设计模式：<a href="https://blogtitle.github.io/some-useful-patterns/" target="_blank" rel="noopener">https://blogtitle.github.io/some-useful-patterns/</a></li></ol></li><li><ol start="3"><li>Go 内存缓存的故事：<a href="https://medium.com/@arriqaaq/latency-need-not-always-require-scaling-your-microservice-a-story-of-an-in-memory-cache-384419174ef3" target="_blank" rel="noopener">https://medium.com/@arriqaaq/latency-need-not-always-require-scaling-your-microservice-a-story-of-an-in-memory-cache-384419174ef3</a></li></ol></li><li><ol start="4"><li>百万 Go TCP 连接的思考：<a href="https://colobu.com/2019/02/23/1m-go-tcp-connection/" target="_blank" rel="noopener">https://colobu.com/2019/02/23/1m-go-tcp-connection/</a></li></ol></li><li><ol start="5"><li>使用 cgroup-parent 限制容器资源利用率：<a href="https://medium.com/@asishrs/docker-limit-resource-utilization-using-cgroup-parent-72a646651f9d" target="_blank" rel="noopener">https://medium.com/@asishrs/docker-limit-resource-utilization-using-cgroup-parent-72a646651f9d</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-02-25">gocn_news_2019-02-25</h2><ul><li><ol><li>使用Go和WebSockets构建实时的YouTube监控系统 <a href="https://www.youtube.com/watch?v=n3BQLHtsrkM" target="_blank" rel="noopener">https://www.youtube.com/watch?v=n3BQLHtsrkM</a></li></ol></li><li><ol start="2"><li>了解真实世界中Go并发相关的Bug <a href="https://songlh.github.io/paper/go-study.pdf" target="_blank" rel="noopener">https://songlh.github.io/paper/go-study.pdf</a></li></ol></li><li><ol start="3"><li>go语言实现自己的RPC：go rpc codec <a href="https://juejin.im/post/5c4d7005f265da61223ab198" target="_blank" rel="noopener">https://juejin.im/post/5c4d7005f265da61223ab198</a></li></ol></li><li><ol start="4"><li>一键解决 go get <a href="http://golang.org/x" target="_blank" rel="noopener">golang.org/x</a> 包失败 <a href="https://segmentfault.com/a/1190000018264719" target="_blank" rel="noopener">https://segmentfault.com/a/1190000018264719</a></li></ol></li><li><ol start="5"><li>Kubernetes中的GPU共享调度扩展程序 <a href="https://github.com/AliyunContainerService/gpushare-scheduler-extender" target="_blank" rel="noopener">https://github.com/AliyunContainerService/gpushare-scheduler-extender</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-02-24">gocn_news_2019-02-24</h2><ul><li><ol><li>从io.Reader中读数据 <a href="https://colobu.com/2019/02/18/read-data-from-net-Conn/" target="_blank" rel="noopener">https://colobu.com/2019/02/18/read-data-from-net-Conn/</a></li></ol></li><li><ol start="2"><li>在Go中处理多个上下文 <a href="https://medium.com/@dlagoza/playing-with-multiple-contexts-in-go-9f72cbcff56e" target="_blank" rel="noopener">https://medium.com/@dlagoza/playing-with-multiple-contexts-in-go-9f72cbcff56e</a></li></ol></li><li><ol start="3"><li>Go模糊搜索库go-fuzzyfinder <a href="https://github.com/ktr0731/go-fuzzyfinder" target="_blank" rel="noopener">https://github.com/ktr0731/go-fuzzyfinder</a></li></ol></li><li><ol start="4"><li>SRE可观察性设计：<a href="https://medium.com/dm03514-tech-blog/sre-observability-metric-namespaces-and-structures-12ffcf5a5bdc" target="_blank" rel="noopener">https://medium.com/dm03514-tech-blog/sre-observability-metric-namespaces-and-structures-12ffcf5a5bdc</a></li></ol></li><li><ol start="5"><li>如何正确使用异步将吞吐量提高4倍 <a href="https://mahdytech.com/2019/02/22/async-throughput-4x/" target="_blank" rel="noopener">https://mahdytech.com/2019/02/22/async-throughput-4x/</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-02-23">gocn_news_2019-02-23</h2><ul><li><ol><li>转到接口并键入断言 <a href="https://marcofranssen.nl/go-interfaces-and-type-assertions/" target="_blank" rel="noopener">https://marcofranssen.nl/go-interfaces-and-type-assertions/</a></li></ol></li><li><ol start="2"><li>解读为什么GoLang与其他语言不同 <a href="https://www.mindinventory.com/blog/what-makes-golang-stand-apart-from-other-languages/" target="_blank" rel="noopener">https://www.mindinventory.com/blog/what-makes-golang-stand-apart-from-other-languages/</a></li></ol></li><li><ol start="3"><li>AppsFlyer 将 API 网关服务从 Clojure 迁移到 Golang <a href="https://www.infoq.com/articles/api-gateway-clojure-golang" target="_blank" rel="noopener">https://www.infoq.com/articles/api-gateway-clojure-golang</a></li></ol></li><li><ol start="4"><li>Windows上Go GUI应用程序的通用库 <a href="https://github.com/tadvi/winc" target="_blank" rel="noopener">https://github.com/tadvi/winc</a></li></ol></li><li><ol start="5"><li>云原生微服务演示应用程序 <a href="https://github.com/GoogleCloudPlatform/microservices-demo" target="_blank" rel="noopener">https://github.com/GoogleCloudPlatform/microservices-demo</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-02-22">gocn_news_2019-02-22</h2><ul><li><ol><li>可视化学习Go的内存分配器 <a href="https://blog.learngoprogramming.com/a-visual-guide-to-golang-memory-allocator-from-ground-up-e132258453ed" target="_blank" rel="noopener">https://blog.learngoprogramming.com/a-visual-guide-to-golang-memory-allocator-from-ground-up-e132258453ed</a></li></ol></li><li><ol start="2"><li>WebAssembly实践 <a href="https://medium.com/@didil/practice-your-go-webassembly-with-a-game-7195dabbfc44" target="_blank" rel="noopener">https://medium.com/@didil/practice-your-go-webassembly-with-a-game-7195dabbfc44</a></li></ol></li><li><ol start="3"><li>用Go搭建商城系统 <a href="https://morioh.com/p/3d1f6febc8b4/a-guide-to-golang-e-commerce" target="_blank" rel="noopener">https://morioh.com/p/3d1f6febc8b4/a-guide-to-golang-e-commerce</a></li></ol></li><li><ol start="4"><li>Cds:一款企业级CI/CD平台 <a href="https://github.com/ovh/cds" target="_blank" rel="noopener">https://github.com/ovh/cds</a></li></ol></li><li><ol start="5"><li>glTF 2.0 序列化反序列化库: <a href="https://github.com/qmuntal/gltf" target="_blank" rel="noopener">https://github.com/qmuntal/gltf</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-02-21">gocn_news_2019-02-21</h2><ul><li><ol><li>使用Go和Kubernetes进行数据库迁移 <a href="https://dev.to/plutov/database-migrations-with-go-and-kubernetes-266a" target="_blank" rel="noopener">https://dev.to/plutov/database-migrations-with-go-and-kubernetes-266a</a></li></ol></li><li><ol start="2"><li>Go嵌入式队列Goblero <a href="https://medium.com/@didil/introducing-goblero-a-go-embedded-job-queue-6dfec8e24d4c" target="_blank" rel="noopener">https://medium.com/@didil/introducing-goblero-a-go-embedded-job-queue-6dfec8e24d4c</a></li></ol></li><li><ol start="3"><li>如何编写Go API <a href="https://jonnylangefeld.com/blog/how-to-write-a-go-api-part-1-webserver-with-iris" target="_blank" rel="noopener">https://jonnylangefeld.com/blog/how-to-write-a-go-api-part-1-webserver-with-iris</a></li></ol></li><li><ol start="4"><li>关于Go2的草案 <a href="http://jmoiron.net/blog/notes-on-the-go2-generics-draft/" target="_blank" rel="noopener">http://jmoiron.net/blog/notes-on-the-go2-generics-draft/</a></li></ol></li><li><ol start="5"><li>Go的精炼Web框架 air <a href="https://github.com/aofei/air" target="_blank" rel="noopener">https://github.com/aofei/air</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-02-20">gocn_news_2019-02-20</h2><ul><li><ol><li>变量数据结构调试利器 go-spew <a href="https://mp.weixin.qq.com/s/MYf9KXmaGpSVmx8EO2ewKw" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/MYf9KXmaGpSVmx8EO2ewKw</a></li></ol></li><li><ol start="2"><li>Golang testing 那些事 <a href="https://blog.gojekengineering.com/the-untold-story-of-golang-testing-29832bfe0e19" target="_blank" rel="noopener">https://blog.gojekengineering.com/the-untold-story-of-golang-testing-29832bfe0e19</a></li></ol></li><li><ol start="3"><li>golang中Context的使用场景 <a href="https://mp.weixin.qq.com/s/xbDFN-JhTIQ4xWanEC1Bxw" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/xbDFN-JhTIQ4xWanEC1Bxw</a></li></ol></li><li><ol start="4"><li>Golang — C++ 互通性 <a href="https://medium.com/mysterium-network/golang-c-interoperability-caf0ba9f7bf3" target="_blank" rel="noopener">https://medium.com/mysterium-network/golang-c-interoperability-caf0ba9f7bf3</a></li></ol></li><li><ol start="5"><li>mysql集群自动管理工具 <a href="https://github.com/radondb/xenon" target="_blank" rel="noopener">https://github.com/radondb/xenon</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-02-19">gocn_news_2019-02-19</h2><ul><li><ol><li>Gopher China 2019 大会讲师及议题揭晓 <a href="https://mp.weixin.qq.com/s/RZRx-1aUmqnpzCMRLq-fTA" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/RZRx-1aUmqnpzCMRLq-fTA</a></li></ol></li><li><ol start="2"><li>Go 的泛型还未准备好 <a href="https://drewdevault.com/2019/02/18/Generics-arent-ready-for-Go.html" target="_blank" rel="noopener">https://drewdevault.com/2019/02/18/Generics-arent-ready-for-Go.html</a></li></ol></li><li><ol start="3"><li>Go 协程池设计 <a href="https://segmentfault.com/a/1190000018193161" target="_blank" rel="noopener">https://segmentfault.com/a/1190000018193161</a></li></ol></li><li><ol start="4"><li>TiDB 在摩拜单车的深度实践及应用 <a href="https://mp.weixin.qq.com/s/tXlli0-egrzXiX1__GuMPA" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/tXlli0-egrzXiX1__GuMPA</a></li></ol></li><li><ol start="5"><li>使用 Drone 搭建本地 CI/CD 服务 <a href="https://itnext.io/setting-up-simple-self-hosted-fast-ci-cd-solution-with-drone-ca0fbb176925" target="_blank" rel="noopener">https://itnext.io/setting-up-simple-self-hosted-fast-ci-cd-solution-with-drone-ca0fbb176925</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-02-18">gocn_news_2019-02-18</h2><ul><li><ol><li>Go高级性能测试指南 <a href="https://blogtitle.github.io/go-advanced-benchmarking/" target="_blank" rel="noopener">https://blogtitle.github.io/go-advanced-benchmarking/</a></li></ol></li><li><ol start="2"><li>MongoDB官方驱动介绍 <a href="https://www.avcosystems.com/blog/mongo-go/" target="_blank" rel="noopener">https://www.avcosystems.com/blog/mongo-go/</a></li></ol></li><li><ol start="3"><li>组织可测试的Go微服务 <a href="https://medium.com/@cdyer1980/structuring-testable-microservices-with-golang-cf5c4d39be50" target="_blank" rel="noopener">https://medium.com/@cdyer1980/structuring-testable-microservices-with-golang-cf5c4d39be50</a></li></ol></li><li><ol start="4"><li>面向开发者的机器学习基础设施 <a href="https://github.com/cortexlabs/cortex" target="_blank" rel="noopener">https://github.com/cortexlabs/cortex</a></li></ol></li><li><ol start="5"><li>详解Golang中间代码生成 <a href="https://draveness.me/golang-ir-ssa" target="_blank" rel="noopener">https://draveness.me/golang-ir-ssa</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-02-17">gocn_news_2019-02-17</h2><ul><li><ol><li>go mod官方的module管理工具 <a href="https://github.com/googege/blog/blob/master/go/tool/goMod/README.md" target="_blank" rel="noopener">https://github.com/googege/blog/blob/master/go/tool/goMod/README.md</a></li></ol></li><li><ol start="2"><li>k8s中定时任务的实现 <a href="https://www.jianshu.com/p/83eb85d53382" target="_blank" rel="noopener">https://www.jianshu.com/p/83eb85d53382</a></li></ol></li><li><ol start="3"><li>Go内存模型&amp;Happen-Before（一） <a href="http://ifeve.com/go-memhappen-before%ef%bc%88%e4%b8%80%ef%bc%89/" target="_blank" rel="noopener">http://ifeve.com/go-memhappen-before（一）/</a></li></ol></li><li><ol start="4"><li>用Go处理json <a href="https://www.reddit.com/r/golang/comments/aradot/working_with_json_in_go_tutorial/" target="_blank" rel="noopener">https://www.reddit.com/r/golang/comments/aradot/working_with_json_in_go_tutorial/</a></li></ol></li><li><ol start="5"><li>Linkerd与Istio主导服务网格之战 <a href="https://searchitoperations.techtarget.com/news/252457734/Linkerd-vs-Istio-fray-dominates-service-mesh-battle" target="_blank" rel="noopener">https://searchitoperations.techtarget.com/news/252457734/Linkerd-vs-Istio-fray-dominates-service-mesh-battle</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-02-16">gocn_news_2019-02-16</h2><ul><li><ol><li>基于Kubernetes实践弹性的CI/CD系统 <a href="https://mp.weixin.qq.com/s/RHLetC0Pz_vscJ0cq11I7g" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/RHLetC0Pz_vscJ0cq11I7g</a></li></ol></li><li><ol start="2"><li>Go goroutine理解 <a href="https://segmentfault.com/a/1190000018150987" target="_blank" rel="noopener">https://segmentfault.com/a/1190000018150987</a></li></ol></li><li><ol start="3"><li>Go JSON Cookbook <a href="https://eli.thegreenplace.net/2019/go-json-cookbook/" target="_blank" rel="noopener">https://eli.thegreenplace.net/2019/go-json-cookbook/</a></li></ol></li><li><ol start="4"><li>Go任务队列Goblero介绍 <a href="https://medium.com/@didil/introducing-goblero-a-go-embedded-job-queue-6dfec8e24d4c" target="_blank" rel="noopener">https://medium.com/@didil/introducing-goblero-a-go-embedded-job-queue-6dfec8e24d4c</a></li></ol></li><li><ol start="5"><li>Go处理100万websocket连接 <a href="https://github.com/eranyanay/1m-go-websockets" target="_blank" rel="noopener">https://github.com/eranyanay/1m-go-websockets</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-02-15">gocn_news_2019-02-15</h2><ul><li><ol><li>filecoin已开源 <a href="https://filecoin.io/blog/opening-filecoin-project-repos/" target="_blank" rel="noopener">https://filecoin.io/blog/opening-filecoin-project-repos/</a></li></ol></li><li><ol start="2"><li>Go程序性能分析 <a href="http://blog.51cto.com/steed/2349944" target="_blank" rel="noopener">http://blog.51cto.com/steed/2349944</a></li></ol></li><li><ol start="3"><li>新近爆出的runc容器逃逸漏洞，用户如何面对？ <a href="https://mp.weixin.qq.com/s/fJyrLxR4EtPuqOt18LAINA" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/fJyrLxR4EtPuqOt18LAINA</a></li></ol></li><li><ol start="4"><li>runc容器逃逸漏洞最强后续：应对之策汇总与热点疑问解答 <a href="https://mp.weixin.qq.com/s/1gaJJz-271qq-YuOPsNo1Q" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/1gaJJz-271qq-YuOPsNo1Q</a></li></ol></li><li><ol start="5"><li>革命性新特性 | 单一应用跨多Kubernetes集群的部署与管理 <a href="https://mp.weixin.qq.com/s/yfE22D04D98r8e7BAlD3qg" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/yfE22D04D98r8e7BAlD3qg</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-02-14">gocn_news_2019-02-14</h2><ul><li><ol><li>Go语言实时GC - 三色标记算法 <a href="https://juejin.im/post/5c62d45ee51d457fa44f4404" target="_blank" rel="noopener">https://juejin.im/post/5c62d45ee51d457fa44f4404</a></li></ol></li><li><ol start="2"><li>Golang之轻松化解defer的温柔陷阱 <a href="http://www.cnblogs.com/qcrao-2018/p/10367346.html" target="_blank" rel="noopener">http://www.cnblogs.com/qcrao-2018/p/10367346.html</a></li></ol></li><li><ol start="3"><li>基于 Go 的内置 Parser 打造轻量级规则引擎 <a href="http://xargin.com/rule-engine-on-go-parser/" target="_blank" rel="noopener">http://xargin.com/rule-engine-on-go-parser/</a></li></ol></li><li><ol start="4"><li>两种不同的容器管理方式对比 <a href="https://mp.weixin.qq.com/s/sm6GnJOHZKnwVhwNVzt6pA" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/sm6GnJOHZKnwVhwNVzt6pA</a><br>5.实现真正优雅的容器应用 <a href="https://mp.weixin.qq.com/s/D924A0s7_thq8gOXB85e7A" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/D924A0s7_thq8gOXB85e7A</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-02-13">gocn_news_2019-02-13</h2><ul><li><ol><li>用go处理websocket100万连接 <a href="https://speakerdeck.com/eranyanay/going-infinite-handling-1m-websockets-connections-in-go" target="_blank" rel="noopener">https://speakerdeck.com/eranyanay/going-infinite-handling-1m-websockets-connections-in-go</a></li></ol></li><li><ol start="2"><li>始终管理你的goroutine <a href="https://medium.com/@yinoneliraz/always-manage-your-goroutines-7567fa5ec3da" target="_blank" rel="noopener">https://medium.com/@yinoneliraz/always-manage-your-goroutines-7567fa5ec3da</a></li></ol></li><li><ol start="3"><li>go在错误信息堆栈中添加代码片段 <a href="https://medium.com/@gztrue/increasing-go-errors-informativeness-by-adding-a-stack-trace-and-displaying-source-fragments-117f577e8df2" target="_blank" rel="noopener">https://medium.com/@gztrue/increasing-go-errors-informativeness-by-adding-a-stack-trace-and-displaying-source-fragments-117f577e8df2</a></li></ol></li><li><ol start="4"><li>go编写的小型、快速的脚本语言 <a href="https://github.com/d5/tengo" target="_blank" rel="noopener">https://github.com/d5/tengo</a></li></ol></li><li><ol start="5"><li>kubernetes入门指南 <a href="https://medium.com/containermind/a-beginners-guide-to-kubernetes-7e8ca56420b6" target="_blank" rel="noopener">https://medium.com/containermind/a-beginners-guide-to-kubernetes-7e8ca56420b6</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-02-12">gocn_news_2019-02-12</h2><ul><li><ol><li>Go 即时通讯服务：<a href="https://github.com/tinode/chat" target="_blank" rel="noopener">https://github.com/tinode/chat</a></li></ol></li><li><ol start="2"><li>Go 切片讲解：<a href="https://blog.gojekengineering.com/grab-a-slice-on-the-go-c606344186c1" target="_blank" rel="noopener">https://blog.gojekengineering.com/grab-a-slice-on-the-go-c606344186c1</a></li></ol></li><li><ol start="3"><li>Go 2D 游戏引擎：<a href="https://github.com/faiface/pixel" target="_blank" rel="noopener">https://github.com/faiface/pixel</a></li></ol></li><li><ol start="4"><li>MongoDB 十分钟入门：<a href="https://medium.freecodecamp.org/learn-mongodb-a4ce205e7739" target="_blank" rel="noopener">https://medium.freecodecamp.org/learn-mongodb-a4ce205e7739</a></li></ol></li><li><ol start="5"><li>2019年物联网九大趋势及预测：<a href="http://www.qianjia.com/html/2019-02/01_323385.html" target="_blank" rel="noopener">http://www.qianjia.com/html/2019-02/01_323385.html</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-02-11">gocn_news_2019-02-11</h2><ul><li><ol><li>使用 AWS Lambda 将图像转化为 Ascii 图像 <a href="https://cantasaurus.github.io/post/goimagetoascii" target="_blank" rel="noopener">https://cantasaurus.github.io/post/goimagetoascii</a></li></ol></li><li><ol start="2"><li>Golang 的 &lt;-time.After() 在触发之前不会被垃圾回收 <a href="https://medium.com/@oboturov/golang-time-after-is-not-garbage-collected-4cbc94740082" target="_blank" rel="noopener">https://medium.com/@oboturov/golang-time-after-is-not-garbage-collected-4cbc94740082</a></li></ol></li><li><ol start="3"><li>由 Ron Evans 带来的 TinyGo 视频分享 <a href="https://www.youtube.com/watch?v=KY8u9yZ97Tc" target="_blank" rel="noopener">https://www.youtube.com/watch?v=KY8u9yZ97Tc</a></li></ol></li><li><ol start="4"><li>webrpc 一个轻量的客户端+服务端的 RPC 框架 <a href="https://github.com/webrpc/webrpc" target="_blank" rel="noopener">https://github.com/webrpc/webrpc</a></li></ol></li><li><ol start="5"><li>如何成为一名优秀的开源社区成员 <a href="https://spf13.com/post/how-to-be-a-good-open-source-community-member" target="_blank" rel="noopener">https://spf13.com/post/how-to-be-a-good-open-source-community-member</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-02-10">gocn_news_2019-02-10</h2><ul><li><ol><li>Go 代码简洁之道 <a href="https://youtu.be/kX-cYkto_Pk" target="_blank" rel="noopener">https://youtu.be/kX-cYkto_Pk</a></li></ol></li><li><ol start="2"><li>渗透测试工具 Gorsair <a href="https://github.com/Ullaakut/Gorsair" target="_blank" rel="noopener">https://github.com/Ullaakut/Gorsair</a></li></ol></li><li><ol start="3"><li>如何实现一个函数调度器 <a href="https://medium.com/@sdeoras/a-go-func-scheduler-with-a-cap-360383f14875" target="_blank" rel="noopener">https://medium.com/@sdeoras/a-go-func-scheduler-with-a-cap-360383f14875</a></li></ol></li><li><ol start="4"><li>Go 语言编译过程概述 <a href="https://draveness.me/golang-compile-intro" target="_blank" rel="noopener">https://draveness.me/golang-compile-intro</a></li></ol></li><li><ol start="5"><li>微服务进化史 <a href="https://juejin.im/post/5c5ed33cf265da2dc6759392" target="_blank" rel="noopener">https://juejin.im/post/5c5ed33cf265da2dc6759392</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-02-09">gocn_news_2019-02-09</h2><ul><li><ol><li>使用Go构建OAuth2服务 <a href="https://hackernoon.com/build-your-own-oauth2-server-in-go-7d0f660732c3" target="_blank" rel="noopener">https://hackernoon.com/build-your-own-oauth2-server-in-go-7d0f660732c3</a></li></ol></li><li><ol start="2"><li>指令集架构、机器码与 Go 语言 <a href="https://draveness.me/golang-machinecode" target="_blank" rel="noopener">https://draveness.me/golang-machinecode</a></li></ol></li><li><ol start="3"><li>k8s的workqueue机制:简化Kubernetes的批量作业 <a href="https://techblog.appnexus.com/k8s-workqueue-simplified-kubernetes-batch-jobs-a748500ebd49" target="_blank" rel="noopener">https://techblog.appnexus.com/k8s-workqueue-simplified-kubernetes-batch-jobs-a748500ebd49</a></li></ol></li><li><ol start="4"><li>Gitbook:通过 Go 语言学习测试驱动开发 <a href="https://github.com/quii/learn-go-with-tests" target="_blank" rel="noopener">https://github.com/quii/learn-go-with-tests</a></li></ol></li><li><ol start="5"><li>fzf: 一款强大的命令行查找工具 <a href="https://github.com/junegunn/fzf" target="_blank" rel="noopener">https://github.com/junegunn/fzf</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-02-08">gocn_news_2019-02-08</h2><hr><h2 id="gocn_news_2019-02-07">gocn_news_2019-02-07</h2><hr><h2 id="gocn_news_2019-02-06">gocn_news_2019-02-06</h2><ul><li><ol><li>在2019年 Golang要做的几件事情 <a href="https://thenewstack.io/whats-coming-to-golang-in-2019-modules-generics-better-error-handling/" target="_blank" rel="noopener">https://thenewstack.io/whats-coming-to-golang-in-2019-modules-generics-better-error-handling/</a></li></ol></li><li><ol start="2"><li>配置管理已死，配置管理CAMP永存 <a href="https://opensource.com/article/19/2/configuration-management-camp" target="_blank" rel="noopener">https://opensource.com/article/19/2/configuration-management-camp</a></li></ol></li><li><ol start="3"><li>代码搜索引擎分析 <a href="https://michael.stapelberg.de/posts/2019-02-05-turbopfor-analysis/" target="_blank" rel="noopener">https://michael.stapelberg.de/posts/2019-02-05-turbopfor-analysis/</a></li></ol></li><li><ol start="4"><li>Etcd Raft使用入门及原理解析 <a href="https://github.com/aCoder2013/blog/issues/30" target="_blank" rel="noopener">https://github.com/aCoder2013/blog/issues/30</a></li></ol></li><li><ol start="5"><li>使用init()的难堪之处  <a href="https://twitter.com/sheremetat/status/1092738741209321472" target="_blank" rel="noopener">https://twitter.com/sheremetat/status/1092738741209321472</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-02-05">gocn_news_2019-02-05</h2><ul><li><ol><li>Go strings.Replace 与 bytes.Replace 调优 <a href="https://blog.thinkeridea.com/201902/go/replcae_you_hua.html" target="_blank" rel="noopener">https://blog.thinkeridea.com/201902/go/replcae_you_hua.html</a></li></ol></li><li><ol start="2"><li>如何解决紧耦合的 Go 代码 <a href="https://www.sage42.org/2019/01/30/how-to-fix-tightly-coupled-go-code/" target="_blank" rel="noopener">https://www.sage42.org/2019/01/30/how-to-fix-tightly-coupled-go-code/</a></li></ol></li><li><ol start="3"><li>Go 调试 TiKV 中的 GRPC <a href="https://medium.com/@siddontang/build-grpc-assembly-for-tikv-in-go-a5f38192f73f" target="_blank" rel="noopener">https://medium.com/@siddontang/build-grpc-assembly-for-tikv-in-go-a5f38192f73f</a></li></ol></li><li><ol start="4"><li>从 WebAssembly 学习 Go <a href="https://www.aaron-powell.com/posts/2019-02-04-golang-wasm-1-introduction/" target="_blank" rel="noopener">https://www.aaron-powell.com/posts/2019-02-04-golang-wasm-1-introduction/</a></li></ol></li><li><ol start="5"><li>Go 编写 Git 仓库浏览工具 <a href="https://github.com/isacikgoz/gitin" target="_blank" rel="noopener">https://github.com/isacikgoz/gitin</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-02-04">gocn_news_2019-02-04</h2><ul><li><ol><li>當一個 goroutine 創建新的 goroutine 時，scheduler 會選誰優先執行？ <a href="https://medium.com/@genchilu/%E7%95%B6%E4%B8%80%E5%80%8B-goroutine-%E5%89%B5%E5%BB%BA%E6%96%B0%E7%9A%84-goroutine-%E6%99%82-scheduler-%E6%9C%83%E9%81%B8%E8%AA%B0-257f434ee1bf" target="_blank" rel="noopener">https://medium.com/@genchilu/當一個-goroutine-創建新的-goroutine-時-scheduler-會選誰-257f434ee1bf</a></li></ol></li><li><ol start="2"><li>利用Go重写API网关：AppsFlyer的体验报告  <a href="https://www.infoq.com/articles/api-gateway-clojure-golang" target="_blank" rel="noopener">https://www.infoq.com/articles/api-gateway-clojure-golang</a></li></ol></li><li><ol start="3"><li>利用GORM HOOK清理测试数据 <a href="https://medium.com/@jarifibrahim/using-gorm-hooks-to-clean-up-test-fixtures-in-golang-99b0fcb04354" target="_blank" rel="noopener">https://medium.com/@jarifibrahim/using-gorm-hooks-to-clean-up-test-fixtures-in-golang-99b0fcb04354</a></li></ol></li><li><ol start="4"><li>Go语言实现KV数据库对比BoltDB vs Badger <a href="https://tech.townsourced.com/post/boltdb-vs-badger/" target="_blank" rel="noopener">https://tech.townsourced.com/post/boltdb-vs-badger/</a></li></ol></li><li><ol start="5"><li>Go中的光线追踪 <a href="https://github.com/hunterloftis/oneweekend/blob/master/readme.md" target="_blank" rel="noopener">https://github.com/hunterloftis/oneweekend/blob/master/readme.md</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-02-03">gocn_news_2019-02-03</h2><ul><li><ol><li>Golang State:2019-02 <a href="https://speakerdeck.com/campoy/the-state-of-go-feb-2019" target="_blank" rel="noopener">https://speakerdeck.com/campoy/the-state-of-go-feb-2019</a></li></ol></li><li><ol start="2"><li>Golang实现websocket服务 <a href="https://www.jianshu.com/p/a235665b49de" target="_blank" rel="noopener">https://www.jianshu.com/p/a235665b49de</a></li></ol></li><li><ol start="3"><li>brew2.0发布:支持windows和linux <a href="https://brew.sh/2019/02/02/homebrew-2.0.0/" target="_blank" rel="noopener">https://brew.sh/2019/02/02/homebrew-2.0.0/</a></li></ol></li><li><ol start="4"><li>bettercap:Go实现网络军刀 <a href="https://github.com/bettercap/bettercap" target="_blank" rel="noopener">https://github.com/bettercap/bettercap</a></li></ol></li><li><ol start="5"><li>AresDB:uber开源基于GPU驱动的实时分析引擎 <a href="https://eng.uber.com/aresdb/" target="_blank" rel="noopener">https://eng.uber.com/aresdb/</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-02-02">gocn_news_2019-02-02</h2><ul><li><ol><li>Kubernetes 调度器实现初探 <a href="https://segmentfault.com/a/1190000018084243" target="_blank" rel="noopener">https://segmentfault.com/a/1190000018084243</a></li></ol></li><li><ol start="2"><li>开发者需要知道的10个Go开的工具 <a href="https://golang.works-hub.com/learn/10-tools-written-in-go-that-every-developer-needs-to-know-6d45d" target="_blank" rel="noopener">https://golang.works-hub.com/learn/10-tools-written-in-go-that-every-developer-needs-to-know-6d45d</a></li></ol></li><li><ol start="3"><li>Go优雅的读取http请求或响应的数据-续 <a href="https://segmentfault.com/a/1190000018089512" target="_blank" rel="noopener">https://segmentfault.com/a/1190000018089512</a></li></ol></li><li><ol start="4"><li>Go 时间交并集小工具 <a href="https://juejin.im/post/5c5407f9e51d457fca2e7b9f" target="_blank" rel="noopener">https://juejin.im/post/5c5407f9e51d457fca2e7b9f</a></li></ol></li><li><ol start="5"><li>Golang写webassembly的乐趣 <a href="https://medium.com/@martinolsansky/webassembly-with-golang-is-fun-b243c0e34f02" target="_blank" rel="noopener">https://medium.com/@martinolsansky/webassembly-with-golang-is-fun-b243c0e34f02</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-02-01">gocn_news_2019-02-01</h2><ul><li><ol><li>Golang单元测试之mock <a href="http://helight.info/2019-01-31/1181/" target="_blank" rel="noopener">http://helight.info/2019-01-31/1181/</a></li></ol></li><li><ol start="2"><li>Golang Reflect 性能 <a href="https://colobu.com/2019/01/29/go-reflect-performance" target="_blank" rel="noopener">https://colobu.com/2019/01/29/go-reflect-performance</a></li></ol></li><li><ol start="3"><li>学习Golang的HTTP中间件机制 <a href="https://huoding.com/2019/01/31/716" target="_blank" rel="noopener">https://huoding.com/2019/01/31/716</a></li></ol></li><li><ol start="4"><li>Go语言协同过滤推荐系统 <a href="https://github.com/zhenghaoz/gorse" target="_blank" rel="noopener">https://github.com/zhenghaoz/gorse</a></li></ol></li><li><ol start="5"><li>变量命名不应该出现变量类型 <a href="https://dave.cheney.net/2019/01/29/you-shouldnt-name-your-variables-after-their-types-for-the-same-reason-you-wouldnt-name-your-pets-dog-or-cat" target="_blank" rel="noopener">https://dave.cheney.net/2019/01/29/you-shouldnt-name-your-variables-after-their-types-for-the-same-reason-you-wouldnt-name-your-pets-dog-or-cat</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-01-31">gocn_news_2019-01-31</h2><ul><li><ol><li>Golang 需要避免踩的 50 个坑（三） <a href="http://blueskykong.com/2019/01/29/go-mistakes-3/" target="_blank" rel="noopener">http://blueskykong.com/2019/01/29/go-mistakes-3/</a></li></ol></li><li><ol start="2"><li>golang如何使用sarama访问kafka  <a href="https://studygolang.com/articles/18013" target="_blank" rel="noopener">https://studygolang.com/articles/18013</a></li></ol></li><li><ol start="3"><li>无符号Golang程序逆向方法解析 <a href="https://www.anquanke.com/post/id/170332" target="_blank" rel="noopener">https://www.anquanke.com/post/id/170332</a></li></ol></li><li><ol start="4"><li>得到App的容器及Kubernetes实践 <a href="https://mp.weixin.qq.com/s/9c6M7B_sI2HlB1ifwLNDeg" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/9c6M7B_sI2HlB1ifwLNDeg</a></li></ol></li><li><ol start="5"><li>如何将ffmpeg封装golang/cgo库 <a href="https://studygolang.com/articles/17855" target="_blank" rel="noopener">https://studygolang.com/articles/17855</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-01-30">gocn_news_2019-01-30</h2><ul><li><ol><li>如何在两个最流行的语言go和JAVA中选择 <a href="https://blog.spiralscout.com/when-to-use-go-vs-java-one-programmers-take-on-two-top-languages-59617f30be5e" target="_blank" rel="noopener">https://blog.spiralscout.com/when-to-use-go-vs-java-one-programmers-take-on-two-top-languages-59617f30be5e</a></li></ol></li><li><ol start="2"><li>go plugins的设计与实践 <a href="https://medium.com/pathaoengineering/go-plugin-write-it-once-39be2ba38bc4" target="_blank" rel="noopener">https://medium.com/pathaoengineering/go-plugin-write-it-once-39be2ba38bc4</a></li></ol></li><li><ol start="3"><li>如何容器化引入私有库的Go应用 <a href="https://medium.com/@anuragdhingra/containerize-a-golang-app-using-private-github-repos-as-import-packages-51e993afe394" target="_blank" rel="noopener">https://medium.com/@anuragdhingra/containerize-a-golang-app-using-private-github-repos-as-import-packages-51e993afe394</a></li></ol></li><li><ol start="4"><li>将postgresql扩展到12亿条每月的经验 <a href="https://medium.com/@gajus/lessons-learned-scaling-postgresql-database-to-1-2bn-records-month-edc5449b3067" target="_blank" rel="noopener">https://medium.com/@gajus/lessons-learned-scaling-postgresql-database-to-1-2bn-records-month-edc5449b3067</a></li></ol></li><li><ol start="5"><li>如何创建一个更小的docker镜像 <a href="https://medium.com/@gdiener/how-to-build-a-smaller-docker-image-76779e18d48a" target="_blank" rel="noopener">https://medium.com/@gdiener/how-to-build-a-smaller-docker-image-76779e18d48a</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-01-29">gocn_news_2019-01-29</h2><ul><li><ol><li>Golang中带有容量的函数调度程序的解析 <a href="https://medium.com/@sdeoras/a-go-func-scheduler-with-a-cap-360383f14875" target="_blank" rel="noopener">https://medium.com/@sdeoras/a-go-func-scheduler-with-a-cap-360383f14875</a></li></ol></li><li><ol start="2"><li>WebAssembly与Golang很有趣 <a href="https://medium.com/@martinolsansky/webassembly-with-golang-is-fun-b243c0e34f02" target="_blank" rel="noopener">https://medium.com/@martinolsansky/webassembly-with-golang-is-fun-b243c0e34f02</a></li></ol></li><li><ol start="3"><li>Go中的链表 <a href="https://medium.com/backendarmy/linked-lists-in-go-f7a7b27a03b9" target="_blank" rel="noopener">https://medium.com/backendarmy/linked-lists-in-go-f7a7b27a03b9</a></li></ol></li><li><ol start="4"><li>才云Caicloud开源Nirvana：让API从对框架的依赖中涅槃重生 <a href="https://mp.weixin.qq.com/s/Nd2DrV6H0JN25ccHnuMRpQ" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/Nd2DrV6H0JN25ccHnuMRpQ</a></li></ol></li><li><ol start="5"><li>分享一个友好的Null类型帮助库 <a href="https://github.com/mattn/go-nulltype" target="_blank" rel="noopener">https://github.com/mattn/go-nulltype</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-01-28">gocn_news_2019-01-28</h2><ul><li><ol><li>Go2 Error Inspection 前瞻：<a href="https://tonybai.com/2019/01/27/perspective-study-on-go2-error-inspection/" target="_blank" rel="noopener">https://tonybai.com/2019/01/27/perspective-study-on-go2-error-inspection/</a></li></ol></li><li><ol start="2"><li>GoMock 测试框架：<a href="https://mp.weixin.qq.com/s/DQ3zLQNatC6A6xQnkqMMPA" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/DQ3zLQNatC6A6xQnkqMMPA</a></li></ol></li><li><ol start="3"><li>Go 数据结构：<a href="https://github.com/Workiva/go-datastructures" target="_blank" rel="noopener">https://github.com/Workiva/go-datastructures</a></li></ol></li><li><ol start="4"><li>函数计算的基本概念和通用场景描述：<a href="https://zhuanlan.zhihu.com/p/27504661" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/27504661</a></li></ol></li><li><ol start="5"><li>2019 年开发大数据框架的语言选择：<a href="https://towardsdatascience.com/back-to-the-metal-top-3-programming-language-to-develop-big-data-frameworks-in-2019-69a44a36a842" target="_blank" rel="noopener">https://towardsdatascience.com/back-to-the-metal-top-3-programming-language-to-develop-big-data-frameworks-in-2019-69a44a36a842</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-01-27">gocn_news_2019-01-27</h2><ul><li><ol><li>cacheline 对 Go 程序的影响 <a href="https://colobu.com/2019/01/24/cacheline-affects-performance-in-go/" target="_blank" rel="noopener">https://colobu.com/2019/01/24/cacheline-affects-performance-in-go/</a></li></ol></li><li><ol start="2"><li>使用 defer 还是不使用 defer <a href="https://colobu.com/2019/01/22/Runtime-overhead-of-using-defer-in-go/" target="_blank" rel="noopener">https://colobu.com/2019/01/22/Runtime-overhead-of-using-defer-in-go/</a></li></ol></li><li><ol start="3"><li>错误处理与自动重试 <a href="http://www.zenlife.tk/error-retry.md" target="_blank" rel="noopener">http://www.zenlife.tk/error-retry.md</a></li></ol></li><li><ol start="4"><li>同时支持SAP、ASE、RS、IQ的Go驱动库 <a href="https://github.com/thda/tds" target="_blank" rel="noopener">https://github.com/thda/tds</a></li></ol></li><li><ol start="5"><li>GopherCon UK 2018 使用Go构建弹性流水线 <a href="https://www.youtube.com/watch?v=gm34Aph9v0M" target="_blank" rel="noopener">https://www.youtube.com/watch?v=gm34Aph9v0M</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-01-26">gocn_news_2019-01-26</h2><ul><li><ol><li>提议: Go 2错误检查 <a href="https://go.googlesource.com/proposal/+/master/design/29934-error-values.md" target="_blank" rel="noopener">https://go.googlesource.com/proposal/+/master/design/29934-error-values.md</a></li></ol></li><li><ol start="2"><li>Golang UnitTest单元测试 <a href="http://helight.info/2019-01-25/1177" target="_blank" rel="noopener">http://helight.info/2019-01-25/1177</a></li></ol></li><li><ol start="3"><li>GoMock测试框架 <a href="http://blog.51cto.com/9291927/2346777" target="_blank" rel="noopener">http://blog.51cto.com/9291927/2346777</a></li></ol></li><li><ol start="4"><li>聊聊新的Go语言错误处理方案 <a href="https://www.4async.com/2019/01/go-new-xerrors/" target="_blank" rel="noopener">https://www.4async.com/2019/01/go-new-xerrors/</a></li></ol></li><li><ol start="5"><li>Devs和Kubernetes之间存在差距 <a href="https://medium.com/@kent.rancourt/theres-a-gap-between-devs-and-kubernetes-f67f06c73454" target="_blank" rel="noopener">https://medium.com/@kent.rancourt/theres-a-gap-between-devs-and-kubernetes-f67f06c73454</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-01-25">gocn_news_2019-01-25</h2><ul><li><ol><li>Go程序性能优化的两面观 <a href="https://docs.google.com/presentation/d/12ewqX5LEHyjUsPG5fcavGctTooxiiWTgRJ8cGH3ibzU/edit#slide=id.p" target="_blank" rel="noopener">https://docs.google.com/presentation/d/12ewqX5LEHyjUsPG5fcavGctTooxiiWTgRJ8cGH3ibzU/edit#slide=id.p</a></li></ol></li><li><ol start="2"><li>为什么我们选择Badger而不是RocksDB <a href="https://blog.dgraph.io/post/badger-over-rocksdb-in-dgraph/" target="_blank" rel="noopener">https://blog.dgraph.io/post/badger-over-rocksdb-in-dgraph/</a></li></ol></li><li><ol start="3"><li>Api服务开发,选择Rest还是GRPC <a href="https://blog.maddevs.io/go-rest-or-grpc-5eace88499bd" target="_blank" rel="noopener">https://blog.maddevs.io/go-rest-or-grpc-5eace88499bd</a></li></ol></li><li><ol start="4"><li>使用go-telegram-flow构建我们的Telegram机器人 <a href="https://www.youtube.com/watch?v=nViw-knsfXA&amp;feature=youtu.be" target="_blank" rel="noopener">https://www.youtube.com/watch?v=nViw-knsfXA&amp;feature=youtu.be</a></li></ol></li><li><ol start="5"><li>InfluxDB 2.0 Alpha版本发布 <a href="https://www.influxdata.com/blog/influxdb-2-0-alpha-release-and-the-road-ahead/" target="_blank" rel="noopener">https://www.influxdata.com/blog/influxdb-2-0-alpha-release-and-the-road-ahead/</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-01-24">gocn_news_2019-01-24</h2><ul><li><ol><li>Go 1.11.5 and Go 1.10.8 预发布版本 <a href="https://groups.google.com/forum/m/#!topic/golang-announce/mVeX35iXuSw" target="_blank" rel="noopener">https://groups.google.com/forum/m/#!topic/golang-announce/mVeX35iXuSw</a></li></ol></li><li><ol start="2"><li>Golang编写的XMPP服务器 <a href="https://github.com/ortuman/jackal/tree/v0.4.7" target="_blank" rel="noopener">https://github.com/ortuman/jackal/tree/v0.4.7</a></li></ol></li><li><ol start="3"><li>GoLang实现以太坊钱包 <a href="https://gophersland.com/p/programming-ethereum-wallet-using-golang" target="_blank" rel="noopener">https://gophersland.com/p/programming-ethereum-wallet-using-golang</a></li></ol></li><li><ol start="4"><li>Go中的云功能 <a href="https://medium.com/yakka/cloud-functions-in-go-94c1014a6fe4" target="_blank" rel="noopener">https://medium.com/yakka/cloud-functions-in-go-94c1014a6fe4</a></li></ol></li><li><ol start="5"><li>使用Golang在Kubernetes中创建自己的控制器 <a href="https://itnext.io/creating-your-own-admission-controller-in-kubernetes-using-golang-3fad3b3e0c81" target="_blank" rel="noopener">https://itnext.io/creating-your-own-admission-controller-in-kubernetes-using-golang-3fad3b3e0c81</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-01-23">gocn_news_2019-01-23</h2><ul><li><ol><li>理解 Golang 中函数调用的原理 <a href="https://draveness.me/golang-funciton-call" target="_blank" rel="noopener">https://draveness.me/golang-funciton-call</a></li></ol></li><li><ol start="2"><li>使用Go语言开发必备的5大开源工具 <a href="http://developer.51cto.com/art/201901/590952.htm" target="_blank" rel="noopener">http://developer.51cto.com/art/201901/590952.htm</a></li></ol></li><li><ol start="3"><li>如何设计api <a href="https://blog.usejournal.com/how-not-to-design-restful-apis-fb4892d9057a" target="_blank" rel="noopener">https://blog.usejournal.com/how-not-to-design-restful-apis-fb4892d9057a</a></li></ol></li><li><ol start="4"><li>tidb-lightning 高效率的数据导入工具 <a href="https://github.com/pingcap/tidb-lightning" target="_blank" rel="noopener">https://github.com/pingcap/tidb-lightning</a></li></ol></li><li><ol start="5"><li>[译]经济学人使用Golang构建微服务历程回顾 <a href="http://www.cnblogs.com/davidwang456/p/10305382.html" target="_blank" rel="noopener">http://www.cnblogs.com/davidwang456/p/10305382.html</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-01-22">gocn_news_2019-01-22</h2><ul><li><ol><li>来，控制一下 goroutine 的并发数量 <a href="https://gocn.vip/article/1541" target="_blank" rel="noopener">https://gocn.vip/article/1541</a></li></ol></li><li><ol start="2"><li>Go：指针能优化性能吗？ <a href="https://segmentfault.com/a/1190000017969820" target="_blank" rel="noopener">https://segmentfault.com/a/1190000017969820</a></li></ol></li><li><ol start="3"><li>一个高效的配置管理库 <a href="https://github.com/lalamove/konfig" target="_blank" rel="noopener">https://github.com/lalamove/konfig</a></li></ol></li><li><ol start="4"><li>Go 简单表达式执行库 <a href="https://github.com/antonmedv/expr" target="_blank" rel="noopener">https://github.com/antonmedv/expr</a></li></ol></li><li><ol start="5"><li>Dear Go <a href="https://vernonkeenan.com/index.php/2019/01/21/dear-go-thank-you-for-teaching-me-php-was-a-waste-of-my-time/" target="_blank" rel="noopener">https://vernonkeenan.com/index.php/2019/01/21/dear-go-thank-you-for-teaching-me-php-was-a-waste-of-my-time/</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-01-21">gocn_news_2019-01-21</h2><ul><li><ol><li>如何生成和阅读Go的profile文件 <a href="https://medium.com/@wanderson.olivs/generating-and-reading-go-golang-profiles-part-1-db33905decee" target="_blank" rel="noopener">https://medium.com/@wanderson.olivs/generating-and-reading-go-golang-profiles-part-1-db33905decee</a></li></ol></li><li><ol start="2"><li>知乎容器化构建系统设计和实践 <a href="https://zhuanlan.zhihu.com/p/45694823" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/45694823</a></li></ol></li><li><ol start="3"><li>Go中打包静态文件 <a href="https://c.isme.pub/2019/01/10/go-static/" target="_blank" rel="noopener">https://c.isme.pub/2019/01/10/go-static/</a></li></ol></li><li><ol start="4"><li>tgo：方便追踪程序执行情况的库 <a href="https://github.com/ks888/tgo" target="_blank" rel="noopener">https://github.com/ks888/tgo</a></li></ol></li><li><ol start="5"><li>Go使用定制的Flutter引擎编写桌面应用 <a href="https://github.com/Drakirus/go-flutter-desktop-embedder" target="_blank" rel="noopener">https://github.com/Drakirus/go-flutter-desktop-embedder</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-01-20">gocn_news_2019-01-20</h2><ul><li><ol><li>Task:go运行/构建工具 <a href="https://taskfile.org/" target="_blank" rel="noopener">https://taskfile.org/</a></li></ol></li><li><ol start="2"><li>Golang:堆排序  <a href="https://blog.bitsrc.io/reading-challenge-heap-sort-in-go-93115239accd" target="_blank" rel="noopener">https://blog.bitsrc.io/reading-challenge-heap-sort-in-go-93115239accd</a></li></ol></li><li><ol start="3"><li>Golang:面向对象 <a href="https://zhuanlan.zhihu.com/p/55255987" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/55255987</a></li></ol></li><li><ol start="4"><li>推荐系统融合排序之LR <a href="https://mp.weixin.qq.com/s/8XInV5LbIwo3kS4nvmZDDw" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/8XInV5LbIwo3kS4nvmZDDw</a></li></ol></li><li><ol start="5"><li>谷歌等推出基于机器学习的新型数据库SageDB <a href="https://www.infoq.cn/article/KgiSMf2zYYKdvRYSw*FI" target="_blank" rel="noopener">https://www.infoq.cn/article/KgiSMf2zYYKdvRYSw*FI</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-01-19">gocn_news_2019-01-19</h2><ul><li><ol><li>Go存储怎么写?深度解析etcd存储设计 <a href="https://mp.weixin.qq.com/s/qvqpUtTFI0cFf9LtTH4JfA" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/qvqpUtTFI0cFf9LtTH4JfA</a></li></ol></li><li><ol start="2"><li>Gccgo 2019 <a href="https://meltware.com/2019/01/16/gccgo-benchmarks-2019.html" target="_blank" rel="noopener">https://meltware.com/2019/01/16/gccgo-benchmarks-2019.html</a></li></ol></li><li><ol start="3"><li>用Go调用windows api <a href="https://medium.com/jettech/breaking-all-the-rules-using-go-to-call-windows-api-2cbfd8c79724" target="_blank" rel="noopener">https://medium.com/jettech/breaking-all-the-rules-using-go-to-call-windows-api-2cbfd8c79724</a></li></ol></li><li><ol start="4"><li>停止写无用的Go库 <a href="https://0x46.net/thoughts/2018/12/29/go-libraries/" target="_blank" rel="noopener">https://0x46.net/thoughts/2018/12/29/go-libraries/</a></li></ol></li><li><ol start="5"><li>保障IDC安全：分布式HIDS集群架构设计 <a href="https://tech.meituan.com/2019/01/17/distributed-hids-cluster-architecture-design.html" target="_blank" rel="noopener">https://tech.meituan.com/2019/01/17/distributed-hids-cluster-architecture-design.html</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-01-18">gocn_news_2019-01-18</h2><ul><li><ol><li>建议:Go 2 Number Literal更改https://github.com/golang/prop … <a href="http://ls.md" target="_blank" rel="noopener">ls.md</a></li></ol></li><li><ol start="2"><li>如何在go中创建ssh隧道 <a href="http://elliot.land/post/how-to-create-an-ssh-tunnel-in-go" target="_blank" rel="noopener">http://elliot.land/post/how-to-create-an-ssh-tunnel-in-go</a></li></ol></li><li><ol start="3"><li>迁移到mod只需3个步骤 <a href="https://studygolang.com/articles/17780" target="_blank" rel="noopener">https://studygolang.com/articles/17780</a></li></ol></li><li><ol start="4"><li>10大工具汇总，多维度简化Kubernetes部署 <a href="https://mp.weixin.qq.com/s/pb4Tsth_c4kg2itvUU-76A" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/pb4Tsth_c4kg2itvUU-76A</a></li></ol></li><li><ol start="5"><li>Go的快速脚本语言 <a href="https://github.com/d5/tengo" target="_blank" rel="noopener">https://github.com/d5/tengo</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-01-17">gocn_news_2019-01-17</h2><ul><li><ol><li>Go channel实现原理 <a href="http://www.cnblogs.com/hlxs/p/10275303.html" target="_blank" rel="noopener">http://www.cnblogs.com/hlxs/p/10275303.html</a></li></ol></li><li><ol start="2"><li>Golang编译-ldflags -X 在vendor中不生效的问题 <a href="https://chenjiehua.me/golang/golang-build-with-ldflags-not-work-for-vendor.html?utm_source=tuicool&amp;utm_medium=referral" target="_blank" rel="noopener">https://chenjiehua.me/golang/golang-build-with-ldflags-not-work-for-vendor.html?utm_source=tuicool&amp;utm_medium=referral</a></li></ol></li><li><ol start="3"><li>go并发调度原理学习 <a href="http://www.cnblogs.com/hlxs/p/10274186.html" target="_blank" rel="noopener">http://www.cnblogs.com/hlxs/p/10274186.html</a></li></ol></li><li><ol start="4"><li>微服务架构下静态数据通用缓存机制 <a href="https://mp.weixin.qq.com/s/UUjdcBidNh5lwwSs372CCw" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/UUjdcBidNh5lwwSs372CCw</a></li></ol></li><li><ol start="5"><li>如何评估Kubernetes持久化存储方案 <a href="https://mp.weixin.qq.com/s/6yg_bt5mYKWdXS0CidY6Rg" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/6yg_bt5mYKWdXS0CidY6Rg</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-01-16">gocn_news_2019-01-16</h2><ul><li><ol><li>使用go和tensorflow进行拟合 <a href="https://medium.com/@sdeoras/poly-fit-using-tensorflow-and-go-dba53fc7c4e2" target="_blank" rel="noopener">https://medium.com/@sdeoras/poly-fit-using-tensorflow-and-go-dba53fc7c4e2</a></li></ol></li><li><ol start="2"><li>5个Go开源工具推荐 <a href="https://jaxenter.com/golang-open-source-tools-154472.html" target="_blank" rel="noopener">https://jaxenter.com/golang-open-source-tools-154472.html</a></li></ol></li><li><ol start="3"><li>go使用X-Ray分析与调试分布式生产应用程序 <a href="https://medium.com/@kaperys/instrumenting-go-using-aws-x-ray-10952aff00cc" target="_blank" rel="noopener">https://medium.com/@kaperys/instrumenting-go-using-aws-x-ray-10952aff00cc</a></li></ol></li><li><ol start="4"><li>在kubernetes上运行istio <a href="https://medium.com/avitotech/running-istio-on-kubernetes-in-production-part-i-a8bbf7fec18e" target="_blank" rel="noopener">https://medium.com/avitotech/running-istio-on-kubernetes-in-production-part-i-a8bbf7fec18e</a></li></ol></li><li><ol start="5"><li>编译go到webassembly <a href="https://www.sitepen.com/blog/compiling-go-to-webassembly/" target="_blank" rel="noopener">https://www.sitepen.com/blog/compiling-go-to-webassembly/</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-01-15">gocn_news_2019-01-15</h2><ul><li><ol><li>阅读挑战：Go中的堆排 <a href="https://blog.bitsrc.io/reading-challenge-heap-sort-in-go-93115239accd" target="_blank" rel="noopener">https://blog.bitsrc.io/reading-challenge-heap-sort-in-go-93115239accd</a></li></ol></li><li><ol start="2"><li>思想实验：Flutter与Go集成 <a href="http://divan.github.io/posts/flutter_go" target="_blank" rel="noopener">http://divan.github.io/posts/flutter_go</a></li></ol></li><li><ol start="3"><li>Golang并发：再也不愁选channel还是选锁 <a href="https://segmentfault.com/a/1190000017890174" target="_blank" rel="noopener">https://segmentfault.com/a/1190000017890174</a></li></ol></li><li><ol start="4"><li>Hyperledger Fabric的Chaincode测试教程 <a href="https://medium.com/coinmonks/tutorial-on-hyperledger-fabrics-chaincode-testing-44c3f260cb2b" target="_blank" rel="noopener">https://medium.com/coinmonks/tutorial-on-hyperledger-fabrics-chaincode-testing-44c3f260cb2b</a></li></ol></li><li><ol start="5"><li>coredhcp：一个Go编写的高效、多线程、模块化、可扩展的DHCP服务器 <a href="https://github.com/coredhcp/coredhcp" target="_blank" rel="noopener">https://github.com/coredhcp/coredhcp</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-01-14">gocn_news_2019-01-14</h2><ul><li><ol><li>用Go创建新的智能合约语言 - 词法分析器部分 <a href="https://medium.com/@14wnrkim/create-new-smartcontract-language-with-go-lexer-part-a5cdfca9b42e" target="_blank" rel="noopener">https://medium.com/@14wnrkim/create-new-smartcontract-language-with-go-lexer-part-a5cdfca9b42e</a></li></ol></li><li><ol start="2"><li>使用gRPC 、异步Flutter客户端以及Go服务器构建的聊天应用教程 <a href="https://medium.com/@amsokol.com/tutorial-asynchronous-flutter-chat-client-with-go-chat-server-which-are-powered-by-grpc-simple-ce913066861c" target="_blank" rel="noopener">https://medium.com/@amsokol.com/tutorial-asynchronous-flutter-chat-client-with-go-chat-server-which-are-powered-by-grpc-simple-ce913066861c</a></li></ol></li><li><ol start="3"><li>用Go从零开发的朴素贝叶斯分类器 - 第二部分 <a href="https://medium.com/@kcatstack/naive-bayes-classifier-from-scratch-part-2-nlp-in-golang-81c2a103ee06" target="_blank" rel="noopener">https://medium.com/@kcatstack/naive-bayes-classifier-from-scratch-part-2-nlp-in-golang-81c2a103ee06</a></li></ol></li><li><ol start="4"><li>Go并发调用的超时处理 <a href="https://juejin.im/post/5c3aeffde51d4551140d96cf" target="_blank" rel="noopener">https://juejin.im/post/5c3aeffde51d4551140d96cf</a></li></ol></li><li><ol start="5"><li>开源代码部署工具syncd <a href="https://github.com/dreamans/syncd" target="_blank" rel="noopener">https://github.com/dreamans/syncd</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-01-13">gocn_news_2019-01-13</h2><ul><li><ol><li>dropbox是如何迁移到gRPC的 <a href="https://blogs.dropbox.com/tech/2019/01/courier-dropbox-migration-to-grpc/" target="_blank" rel="noopener">https://blogs.dropbox.com/tech/2019/01/courier-dropbox-migration-to-grpc/</a></li></ol></li><li><ol start="2"><li>避免使用base、utils、common来给包命名 <a href="https://dave.cheney.net/2019/01/08/avoid-package-names-like-base-util-or-common" target="_blank" rel="noopener">https://dave.cheney.net/2019/01/08/avoid-package-names-like-base-util-or-common</a></li></ol></li><li><ol start="3"><li>时间模拟库 <a href="https://github.com/jonboulle/clockwork" target="_blank" rel="noopener">https://github.com/jonboulle/clockwork</a></li></ol></li><li><ol start="4"><li>K8s服务快速开发迭代工具telepresence <a href="https://github.com/telepresenceio/telepresence" target="_blank" rel="noopener">https://github.com/telepresenceio/telepresence</a></li></ol></li><li><ol start="5"><li>使用go-ycsb对不同的数据库做压测 <a href="https://medium.com/@siddontang/use-go-ycsb-to-benchmark-different-databases-8850f6edb3a7" target="_blank" rel="noopener">https://medium.com/@siddontang/use-go-ycsb-to-benchmark-different-databases-8850f6edb3a7</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-01-12">gocn_news_2019-01-12</h2><ul><li><ol><li>世界可能缺少一种编程语言 <a href="https://medium.com/@the1mills/the-world-might-be-missing-a-programming-language-4ce43e212277" target="_blank" rel="noopener">https://medium.com/@the1mills/the-world-might-be-missing-a-programming-language-4ce43e212277</a></li></ol></li><li><ol start="2"><li>如何在Go中编写好的单元测试 <a href="https://medium.com/@jens.neuse/want-to-write-good-unit-tests-in-go-dont-panic-or-should-you-ba3eb5bf4f51" target="_blank" rel="noopener">https://medium.com/@jens.neuse/want-to-write-good-unit-tests-in-go-dont-panic-or-should-you-ba3eb5bf4f51</a></li></ol></li><li><ol start="3"><li>为什么我在Go中使用接口 <a href="https://medium.com/@kent.rancourt/go-pointers-why-i-use-interfaces-in-go-338ae0bdc9e4" target="_blank" rel="noopener">https://medium.com/@kent.rancourt/go-pointers-why-i-use-interfaces-in-go-338ae0bdc9e4</a></li></ol></li><li><ol start="4"><li>验证结构字段工具 <a href="https://medium.com/@shivarajvarali/validating-struct-fields-made-easy-in-go-language-7ea9c49bba3b" target="_blank" rel="noopener">https://medium.com/@shivarajvarali/validating-struct-fields-made-easy-in-go-language-7ea9c49bba3b</a></li></ol></li><li><ol start="5"><li>初次尝试Kubernetes <a href="https://www.youtube.com/watch?v=ZSuh_nNPGls" target="_blank" rel="noopener">https://www.youtube.com/watch?v=ZSuh_nNPGls</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-01-11">gocn_news_2019-01-11</h2><ul><li><ol><li>GoCN每日新闻(2019-01-11)</li></ol></li><li><ol start="2"><li>1.使用Goreplay回放与测试Https请求 <a href="https://medium.com/a-layman/software-testing-design-a-dark-traffic-system-to-test-https-requests-with-goreplay-8d143ebc5497" target="_blank" rel="noopener">https://medium.com/a-layman/software-testing-design-a-dark-traffic-system-to-test-https-requests-with-goreplay-8d143ebc5497</a><br>2.通过OPA实现Kubernetes的鉴权 <a href="https://medium.com/@sbueringer/kubernetes-authorization-via-open-policy-agent-a9455d9d5ceb" target="_blank" rel="noopener">https://medium.com/@sbueringer/kubernetes-authorization-via-open-policy-agent-a9455d9d5ceb</a><br>3.FoxySim:Go实现的电流仿真库 <a href="https://github.com/Dreamy16101976/FoxySim" target="_blank" rel="noopener">https://github.com/Dreamy16101976/FoxySim</a><br>4.gosh: Go实现的小型shell <a href="https://github.com/cezarmathe/gosh" target="_blank" rel="noopener">https://github.com/cezarmathe/gosh</a><br>5.go-ycsb:数据库性能测试框架 <a href="https://github.com/pingcap/go-ycsb" target="_blank" rel="noopener">https://github.com/pingcap/go-ycsb</a></li></ol></li><li><ol start="3"><li>GopherChina 2019@北京，早鸟票已开售 <a href="https://gopherchina.org/" target="_blank" rel="noopener">https://gopherchina.org/</a></li></ol></li><li><ol start="4"><li>编辑: Razil</li></ol></li></ul><hr><h2 id="gocn_news_2019-01-10">gocn_news_2019-01-10</h2><ul><li><ol><li>优雅的重新启动Golang web 服务 <a href="https://tomaz.lovrec.eu/posts/graceful-server-restart/" target="_blank" rel="noopener">https://tomaz.lovrec.eu/posts/graceful-server-restart/</a></li></ol></li><li><ol start="2"><li>Go实现的小型的服务检查仪表盘 <a href="https://github.com/mtojek/greenwall" target="_blank" rel="noopener">https://github.com/mtojek/greenwall</a></li></ol></li><li><ol start="3"><li>Golang跨平台自动化系统 <a href="https://github.com/go-vgo/robotgo" target="_blank" rel="noopener">https://github.com/go-vgo/robotgo</a></li></ol></li><li><ol start="4"><li>Golang实现的人脸检测库 <a href="https://github.com/esimov/pigo" target="_blank" rel="noopener">https://github.com/esimov/pigo</a></li></ol></li><li><ol start="5"><li>一个可以编写Excel文件的Golang库 <a href="https://dev.to/xuri/go-library-for-reading-and-writing-microsoft-excel-xlsx-files-57hi" target="_blank" rel="noopener">https://dev.to/xuri/go-library-for-reading-and-writing-microsoft-excel-xlsx-files-57hi</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-01-09">gocn_news_2019-01-09</h2><ul><li><ol><li>Go:开发前你应该知道的几个tips <a href="https://medium.com/@alexmaisiura/tips-that-you-should-know-before-start-writing-on-go-d30e681e2dd7" target="_blank" rel="noopener">https://medium.com/@alexmaisiura/tips-that-you-should-know-before-start-writing-on-go-d30e681e2dd7</a></li></ol></li><li><ol start="2"><li>Go经典库使用分析:高性能可扩展HTTP路由httprouter  <a href="https://mp.weixin.qq.com/s/Q2-60p_KU0AgbvtPu7CMRw" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/Q2-60p_KU0AgbvtPu7CMRw</a></li></ol></li><li><ol start="3"><li>反射之reflect.Type方法查找和调用 <a href="https://blog.csdn.net/breaksoftware/article/details/86068788" target="_blank" rel="noopener">https://blog.csdn.net/breaksoftware/article/details/86068788</a></li></ol></li><li><ol start="4"><li>编写自定义K8s调度器 <a href="https://banzaicloud.com/blog/k8s-custom-scheduler/" target="_blank" rel="noopener">https://banzaicloud.com/blog/k8s-custom-scheduler/</a></li></ol></li><li><ol start="5"><li>Gloo——记一次失败的实验 <a href="https://mp.weixin.qq.com/s/WPmog5TgZr_W4QRVz4Dyhw" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/WPmog5TgZr_W4QRVz4Dyhw</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-01-08">gocn_news_2019-01-08</h2><ul><li><ol><li>Github 支持免费创建私有仓库 <a href="https://blog.github.com/2019-01-07-new-year-new-github/" target="_blank" rel="noopener">https://blog.github.com/2019-01-07-new-year-new-github/</a></li></ol></li><li><ol start="2"><li>Go语言(golang)的错误(error)处理的推荐方案 <a href="https://www.flysnow.org/2019/01/01/golang-error-handle-suggestion.html" target="_blank" rel="noopener">https://www.flysnow.org/2019/01/01/golang-error-handle-suggestion.html</a></li></ol></li><li><ol start="3"><li>使用 pprof 提升 Prometheus 的启动速度 <a href="https://www.robustperception.io/optimising-startup-time-of-prometheus-2-6-0-with-pprof" target="_blank" rel="noopener">https://www.robustperception.io/optimising-startup-time-of-prometheus-2-6-0-with-pprof</a></li></ol></li><li><ol start="4"><li>《经济学人》使用 Go 搭建微服务 <a href="https://www.infoq.com/articles/golang-the-economist" target="_blank" rel="noopener">https://www.infoq.com/articles/golang-the-economist</a></li></ol></li><li><ol start="5"><li>Go 使用 Docker 进行实时开发更新 <a href="https://threedots.tech/post/go-docker-dev-environment-with-go-modules-and-live-code-reloading/" target="_blank" rel="noopener">https://threedots.tech/post/go-docker-dev-environment-with-go-modules-and-live-code-reloading/</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-01-07">gocn_news_2019-01-07</h2><ul><li><ol><li>让Raft变快100倍 - Dragonboat的写优化 <a href="https://zhuanlan.zhihu.com/p/52620657" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/52620657</a></li></ol></li><li><ol start="2"><li>用Go实现一个JSON解析器 <a href="https://hackernoon.com/create-a-go-json-parser-batteries-included-9d02d09fe508" target="_blank" rel="noopener">https://hackernoon.com/create-a-go-json-parser-batteries-included-9d02d09fe508</a></li></ol></li><li><ol start="3"><li>综述：微服务化解决的问题和引出的问题 <a href="https://jingwei.link/2019/01/06/summary-of-microservices-k8s.html" target="_blank" rel="noopener">https://jingwei.link/2019/01/06/summary-of-microservices-k8s.html</a></li></ol></li><li><ol start="4"><li>Beaver: 一个实时消息服务端 <a href="https://github.com/Clivern/Beaver" target="_blank" rel="noopener">https://github.com/Clivern/Beaver</a></li></ol></li><li><ol start="5"><li>GolangExample: Go代码示例 <a href="https://golangexample.com/" target="_blank" rel="noopener">https://golangexample.com/</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-01-06">gocn_news_2019-01-06</h2><ul><li><ol><li>如何做好单元测试 <a href="https://medium.com/@jens.neuse/want-to-write-good-unit-tests-in-go-dont-panic-or-should-you-ba3eb5bf4f51" target="_blank" rel="noopener">https://medium.com/@jens.neuse/want-to-write-good-unit-tests-in-go-dont-panic-or-should-you-ba3eb5bf4f51</a></li></ol></li><li><ol start="2"><li>Go语言Base58实现 <a href="https://github.com/mr-tron/base58" target="_blank" rel="noopener">https://github.com/mr-tron/base58</a></li></ol></li><li><ol start="3"><li>Go语言链表实现 <a href="http://blog.51cto.com/steed/2339367" target="_blank" rel="noopener">http://blog.51cto.com/steed/2339367</a></li></ol></li><li><ol start="4"><li>游戏服务器缓存库举例 <a href="https://www.jianshu.com/p/aeb505ef55cd" target="_blank" rel="noopener">https://www.jianshu.com/p/aeb505ef55cd</a></li></ol></li><li><ol start="5"><li>http.DefaultTransport原生支持SOCKS5代理 <a href="https://www.reddit.com/r/golang/comments/acqhxu/fun_fact_httpdefaulttransport_natively_supports/" target="_blank" rel="noopener">https://www.reddit.com/r/golang/comments/acqhxu/fun_fact_httpdefaulttransport_natively_supports/</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-01-05">gocn_news_2019-01-05</h2><ul><li><ol><li>开源一个千万级多组Raft库-Dragonboat <a href="https://zhuanlan.zhihu.com/p/52487803" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/52487803</a></li></ol></li><li><ol start="2"><li>Golang并发：除了channel，你还有其他选择 <a href="https://segmentfault.com/a/1190000017770416" target="_blank" rel="noopener">https://segmentfault.com/a/1190000017770416</a></li></ol></li><li><ol start="3"><li>从微服务治理的角度看RSocket、Envoy和Istio <a href="http://t.cn/EGf3lei" target="_blank" rel="noopener">http://t.cn/EGf3lei</a></li></ol></li><li><ol start="4"><li>50+ 顶级开源 Kubernetes 工具列表 <a href="https://www.infoq.cn/article/RPA-wswoEyjuRZfTMcut" target="_blank" rel="noopener">https://www.infoq.cn/article/RPA-wswoEyjuRZfTMcut</a></li></ol></li><li><ol start="5"><li>再谈 Go 语言在前端的应用前景 <a href="https://mp.weixin.qq.com/s/v0-d-qPQFlV0CxttFpzC5w" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/v0-d-qPQFlV0CxttFpzC5w</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-01-04">gocn_news_2019-01-04</h2><ul><li><ol><li>GO语言主流框架排名分析 <a href="https://redmonk.com/fryan/2018/02/07/language-framework-popularity-a-look-at-go/" target="_blank" rel="noopener">https://redmonk.com/fryan/2018/02/07/language-framework-popularity-a-look-at-go/</a></li></ol></li><li><ol start="2"><li>七年后我如何编写Go HTTP服务 <a href="https://medium.com/statuscode/how-i-write-go-http-services-after-seven-years-37c208122831" target="_blank" rel="noopener">https://medium.com/statuscode/how-i-write-go-http-services-after-seven-years-37c208122831</a></li></ol></li><li><ol start="3"><li>使用mget提取网页元数据 <a href="https://medium.com/@mremond/extracting-web-page-metadata-with-mget-9ce1aefc6579" target="_blank" rel="noopener">https://medium.com/@mremond/extracting-web-page-metadata-with-mget-9ce1aefc6579</a></li></ol></li><li><ol start="4"><li>测试Kubernetes Go应用程序  <a href="https://itnext.io/testing-kubernetes-go-applications-f1f87502b6ef" target="_blank" rel="noopener">https://itnext.io/testing-kubernetes-go-applications-f1f87502b6ef</a></li></ol></li><li><ol start="5"><li>Go Docker开发环境使用Go Modules和实时代码实现重载    <a href="https://threedots.tech/post/go-docker-dev-environment-with-go-modules-and-live-code-reloading/" target="_blank" rel="noopener">https://threedots.tech/post/go-docker-dev-environment-with-go-modules-and-live-code-reloading/</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-01-03">gocn_news_2019-01-03</h2><ul><li><ol><li>为什么goroutine存在泄露，如何避免？ <a href="https://medium.com/jexia/why-goroutines-leaks-exist-and-how-to-avoid-these-dfc572bdad08" target="_blank" rel="noopener">https://medium.com/jexia/why-goroutines-leaks-exist-and-how-to-avoid-these-dfc572bdad08</a></li></ol></li><li><ol start="2"><li>Go静态错误分析工具 <a href="https://staticcheck.io/" target="_blank" rel="noopener">https://staticcheck.io/</a></li></ol></li><li><ol start="3"><li>基于Raft的分布式Mysql binlog存储系统 <a href="https://github.com/flike/kingbus" target="_blank" rel="noopener">https://github.com/flike/kingbus</a></li></ol></li><li><ol start="4"><li>go中的array和slice <a href="https://medium.com/@marty.stepien/arrays-vs-slices-bonanza-in-golang-fa8d32cd2b7c" target="_blank" rel="noopener">https://medium.com/@marty.stepien/arrays-vs-slices-bonanza-in-golang-fa8d32cd2b7c</a></li></ol></li><li><ol start="5"><li>2019年值得关注的23个开发者博客 <a href="https://zhuanlan.zhihu.com/p/53729304" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/53729304</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-01-02">gocn_news_2019-01-02</h2><ul><li><ol><li>Go语言slice的本质-SliceHeader：<a href="https://juejin.im/post/5c2a1e446fb9a049df242997" target="_blank" rel="noopener">https://juejin.im/post/5c2a1e446fb9a049df242997</a></li></ol></li><li><ol start="2"><li>Golang中的数据库迁移：<a href="https://lanre.wtf/blog/2019/01/02/database-migration-golang/" target="_blank" rel="noopener">https://lanre.wtf/blog/2019/01/02/database-migration-golang/</a></li></ol></li><li><ol start="3"><li>TiDB-Tools golang 开发实践：<a href="https://mp.weixin.qq.com/s/idHQbI9_3-euHFEzKvlJlg" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/idHQbI9_3-euHFEzKvlJlg</a></li></ol></li><li><ol start="4"><li>Kubernetes的未来在于虚拟机而非容器：<a href="https://mp.weixin.qq.com/s/304qQoZfUiyZBTvyCVFYow" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/304qQoZfUiyZBTvyCVFYow</a></li></ol></li><li><ol start="5"><li>5G下的微服务架构：拥抱NFV，Istio 1.1将支持多网络平面：<a href="https://mp.weixin.qq.com/s/Rn2MdrrV3YahtdnWrfReYA" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/Rn2MdrrV3YahtdnWrfReYA</a></li></ol></li></ul><hr><h2 id="gocn_news_2019-01-01">gocn_news_2019-01-01</h2><ul><li><ol><li>理解 channel range 操作：<a href="https://imil.net/blog/2018/12/31/Understanding-golang-channel-range/" target="_blank" rel="noopener">https://imil.net/blog/2018/12/31/Understanding-golang-channel-range/</a></li></ol></li><li><ol start="2"><li>通过插图学习 Go 并发：<a href="https://medium.com/@trevor4e/learning-gos-concurrency-through-illustrations-8c4aff603b3" target="_blank" rel="noopener">https://medium.com/@trevor4e/learning-gos-concurrency-through-illustrations-8c4aff603b3</a></li></ol></li><li><ol start="3"><li>Go 函数讲解系列文章：<a href="https://pythonnotes.com/functions-in-go/" target="_blank" rel="noopener">https://pythonnotes.com/functions-in-go/</a></li></ol></li><li><ol start="4"><li>2019 年值得关注的工业技术：<a href="https://staceyoniot.com/the-industrial-tech-to-watch-in-2019/" target="_blank" rel="noopener">https://staceyoniot.com/the-industrial-tech-to-watch-in-2019/</a></li></ol></li><li><ol start="5"><li>2019 边缘计算和IoT 展望：<a href="https://www.rfidjournal.com/articles/view?18111/" target="_blank" rel="noopener">https://www.rfidjournal.com/articles/view?18111/</a></li></ol></li></ul><hr><div><h2 id="推荐文章">推荐文章<span style="font-size:0.45em; color:gray"></span></h2><ul><li><a href="https://hanyajun.com/golang/int2sting/">go里面如何将[]int64序列化为 []string</a></li><li><a href="https://hanyajun.com/golang/golang_introduction/">go复盘笔记--go语言介绍</a></li></ul></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="golang" scheme="https://hanyajun.com/categories/golang/"/>
    
    
      <category term="golang" scheme="https://hanyajun.com/tags/golang/"/>
    
  </entry>
  
  <entry>
    <title>flutter--布局</title>
    <link href="https://hanyajun.com/flutter/flutter_layout/"/>
    <id>https://hanyajun.com/flutter/flutter_layout/</id>
    <published>2019-10-23T16:05:00.000Z</published>
    <updated>2019-10-23T16:14:42.524Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="flutter-布局学习">flutter 布局学习</h2><h3 id="rowwidget-横向布局">RowWidget 横向布局</h3><ul><li>不灵活布局</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/material.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> main() =&gt; runApp(MyApp());</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> MaterialApp(</span><br><span class="line">      title: <span class="string">"Row Widget Demo"</span>,</span><br><span class="line">      home: Scaffold(</span><br><span class="line">        appBar: <span class="keyword">new</span> AppBar(</span><br><span class="line">          title: <span class="keyword">new</span> Text(<span class="string">"水平方向布局"</span>),</span><br><span class="line">        ),</span><br><span class="line">        body: <span class="keyword">new</span> Row(</span><br><span class="line">          children: &lt;Widget&gt;[</span><br><span class="line">            <span class="keyword">new</span> RaisedButton(</span><br><span class="line">              onPressed: () &#123;&#125;,</span><br><span class="line">              color: Colors.red,</span><br><span class="line">              child: <span class="keyword">new</span> Text(<span class="string">'red button'</span>),</span><br><span class="line">            ),</span><br><span class="line">            <span class="keyword">new</span> RaisedButton(</span><br><span class="line">              onPressed: () &#123;&#125;,</span><br><span class="line">              color: Colors.orangeAccent,</span><br><span class="line">              child: <span class="keyword">new</span> Text(<span class="string">'orange button'</span>),</span><br><span class="line">            ),</span><br><span class="line">            <span class="keyword">new</span> RaisedButton(</span><br><span class="line">              onPressed: () &#123;&#125;,</span><br><span class="line">              color: Colors.lightBlue,</span><br><span class="line">              child: <span class="keyword">new</span> Text(<span class="string">'blue button'</span>),</span><br><span class="line">            ),</span><br><span class="line">          ],</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://cdn.hanyajun.com/2019-10-23-00-36-58.png" alt="2019-10-23-00-36-58"><br>这时候你会发现的页面已经有了三个按钮，但这三个按钮并没有充满一行，而是出现了空隙。这就是不灵活横向排列造成的。它根据子元素的大小来进行排列。如果我们想实现充满一行的效果，就要使用灵活水平布局了。</p><ul><li>灵活水平布局<br>解决上面有空隙的问题，可以使用 Expanded来进行解决，也就是我们说的灵活布局。我们在按钮的外边加入Expanded就可以了，代码如下：</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/material.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> main() =&gt; runApp(MyApp());</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> MaterialApp(</span><br><span class="line">      title: <span class="string">"Row Widget Demo"</span>,</span><br><span class="line">      home: Scaffold(</span><br><span class="line">        appBar: <span class="keyword">new</span> AppBar(</span><br><span class="line">          title: <span class="keyword">new</span> Text(<span class="string">"水平方向布局"</span>),</span><br><span class="line">        ),</span><br><span class="line">        body: <span class="keyword">new</span> Row(</span><br><span class="line">          children: &lt;Widget&gt;[</span><br><span class="line">            Expanded(</span><br><span class="line">              child: <span class="keyword">new</span> RaisedButton(</span><br><span class="line">                onPressed: () &#123;&#125;,</span><br><span class="line">                color: Colors.red,</span><br><span class="line">                child: <span class="keyword">new</span> Text(<span class="string">'red button'</span>),</span><br><span class="line">              ),</span><br><span class="line">            ),</span><br><span class="line">            Expanded(</span><br><span class="line">              child: <span class="keyword">new</span> RaisedButton(</span><br><span class="line">                onPressed: () &#123;&#125;,</span><br><span class="line">                color: Colors.yellow,</span><br><span class="line">                child: <span class="keyword">new</span> Text(<span class="string">'yellow button'</span>),</span><br><span class="line">              ),</span><br><span class="line">            ),</span><br><span class="line">            Expanded(</span><br><span class="line">              child: <span class="keyword">new</span> RaisedButton(</span><br><span class="line">                onPressed: () &#123;&#125;,</span><br><span class="line">                color: Colors.lightBlue,</span><br><span class="line">                child: <span class="keyword">new</span> Text(<span class="string">'blue button'</span>),</span><br><span class="line">              ),</span><br><span class="line">            ),</span><br><span class="line">          ],</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这时候就可以布满一行了，效果如下图。</p><p><img src="http://cdn.hanyajun.com/2019-10-23-00-34-06.png" alt="2019-10-23-00-34-06"></p><ul><li>灵活和不灵活的混用</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/material.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> main() =&gt; runApp(MyApp());</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> MaterialApp(</span><br><span class="line">      title: <span class="string">"Row Widget Demo"</span>,</span><br><span class="line">      home: Scaffold(</span><br><span class="line">        appBar: <span class="keyword">new</span> AppBar(</span><br><span class="line">          title: <span class="keyword">new</span> Text(<span class="string">"水平方向布局"</span>),</span><br><span class="line">        ),</span><br><span class="line">        body: <span class="keyword">new</span> Row(</span><br><span class="line">          children: &lt;Widget&gt;[</span><br><span class="line">            <span class="keyword">new</span> RaisedButton(</span><br><span class="line">              onPressed: () &#123;&#125;,</span><br><span class="line">              color: Colors.red,</span><br><span class="line">              child: <span class="keyword">new</span> Text(<span class="string">'red button'</span>),</span><br><span class="line">            ),</span><br><span class="line">            Expanded(</span><br><span class="line">              child: <span class="keyword">new</span> RaisedButton(</span><br><span class="line">                onPressed: () &#123;&#125;,</span><br><span class="line">                color: Colors.yellow,</span><br><span class="line">                child: <span class="keyword">new</span> Text(<span class="string">'yellow button'</span>),</span><br><span class="line">              ),</span><br><span class="line">            ),</span><br><span class="line">            <span class="keyword">new</span> RaisedButton(</span><br><span class="line">              onPressed: () &#123;&#125;,</span><br><span class="line">              color: Colors.lightBlue,</span><br><span class="line">              child: <span class="keyword">new</span> Text(<span class="string">'blue button'</span>),</span><br><span class="line">            )</span><br><span class="line">          ],</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://cdn.hanyajun.com/2019-10-23-00-40-37.png" alt="2019-10-23-00-40-37"></p><h3 id="columnwidget-纵向布局">ColumnWidget 纵向布局</h3><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/material.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> main() =&gt; runApp(MyApp());</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> MaterialApp(</span><br><span class="line">      title: <span class="string">"Column Widget Demo"</span>,</span><br><span class="line">      home: Scaffold(</span><br><span class="line">        appBar: <span class="keyword">new</span> AppBar(</span><br><span class="line">          title: <span class="keyword">new</span> Text(<span class="string">"垂直方向布局"</span>),</span><br><span class="line">        ),</span><br><span class="line">        body: <span class="keyword">new</span> Column(</span><br><span class="line">          children: &lt;Widget&gt;[</span><br><span class="line">            Text(<span class="string">"hanyajun"</span>),</span><br><span class="line">            Text(<span class="string">"hanyajun.com"</span>),</span><br><span class="line">            Text(<span class="string">"I love coding"</span>),</span><br><span class="line">          ],</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://cdn.hanyajun.com/2019-10-23-00-53-09.png" alt="2019-10-23-00-53-09"></p><p>这时候你会发现文字是以最长的一段文字居中对齐的，看起来很别扭。那如果想让文字以左边开始对齐，只需要加入一个对齐属性。</p><ul><li>CrossAxisAlignment.star：居左对齐。</li><li>CrossAxisAlignment.end：居右对齐。</li><li>CrossAxisAlignment.center：居中对齐</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/material.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> main() =&gt; runApp(MyApp());</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> MaterialApp(</span><br><span class="line">      title: <span class="string">"Column Widget Demo"</span>,</span><br><span class="line">      home: Scaffold(</span><br><span class="line">        appBar: <span class="keyword">new</span> AppBar(</span><br><span class="line">          title: <span class="keyword">new</span> Text(<span class="string">"垂直方向布局"</span>),</span><br><span class="line">        ),</span><br><span class="line">        body: <span class="keyword">new</span> Column(</span><br><span class="line">          crossAxisAlignment: CrossAxisAlignment.start,</span><br><span class="line">          children: &lt;Widget&gt;[</span><br><span class="line">            Text(<span class="string">"hanyajun"</span>),</span><br><span class="line">            Text(<span class="string">"hanyajun.com"</span>),</span><br><span class="line">            Text(<span class="string">"I love coding"</span>),</span><br><span class="line">          ],</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://cdn.hanyajun.com/2019-10-23-00-54-48.png" alt="2019-10-23-00-54-48"></p><h4 id="主轴和副轴的辨识">主轴和副轴的辨识</h4><p>在设置对齐方式的时候你会发现右mainAxisAlignment属性，意思就是主轴对齐方式，那什么是主轴，什么又是幅轴那。</p><ul><li><p>main轴：如果你用column组件，那垂直就是主轴，如果你用Row组件，那水平就是主轴。</p></li><li><p>cross轴：cross轴我们称为幅轴，是和主轴垂直的方向。比如Row组件，那垂直就是幅轴，Column组件的幅轴就是水平方向的。</p></li></ul><p>主轴和幅轴我们搞清楚，才能在实际工作中随心所欲的进行布局。</p><p>比如现在我们要把上面的代码，改成垂直方向居中。因为用的是Column组件，所以就是主轴方向，这时候你要用的就是主轴对齐了。</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/material.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> main() =&gt; runApp(MyApp());</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> MaterialApp(</span><br><span class="line">      title: <span class="string">"Column Widget Demo"</span>,</span><br><span class="line">      home: Scaffold(</span><br><span class="line">        appBar: <span class="keyword">new</span> AppBar(</span><br><span class="line">          title: <span class="keyword">new</span> Text(<span class="string">"垂直方向布局"</span>),</span><br><span class="line">        ),</span><br><span class="line">        body: <span class="keyword">new</span> Column(</span><br><span class="line">          crossAxisAlignment: CrossAxisAlignment.center,</span><br><span class="line">          mainAxisAlignment: MainAxisAlignment.center,</span><br><span class="line">          children: &lt;Widget&gt;[</span><br><span class="line">            Text(<span class="string">"hanyajun"</span>),</span><br><span class="line">            Text(<span class="string">"hanyajun.com"</span>),</span><br><span class="line">            Text(<span class="string">"I love coding"</span>),</span><br><span class="line">          ],</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://cdn.hanyajun.com/2019-10-23-00-58-47.png" alt="2019-10-23-00-58-47"></p><h4 id="水平方向相对屏幕居中">水平方向相对屏幕居中</h4><p>让文字相对于水平方向居中，我们如何处理？其实只要加入Center组件就可以轻松解决。</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/material.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> main() =&gt; runApp(MyApp());</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> MaterialApp(</span><br><span class="line">      title: <span class="string">"Column Widget Demo"</span>,</span><br><span class="line">      home: Scaffold(</span><br><span class="line">        appBar: <span class="keyword">new</span> AppBar(</span><br><span class="line">          title: <span class="keyword">new</span> Text(<span class="string">"垂直方向布局"</span>),</span><br><span class="line">        ),</span><br><span class="line">        body: Center(</span><br><span class="line">            child: <span class="keyword">new</span> Column(</span><br><span class="line">          crossAxisAlignment: CrossAxisAlignment.center,</span><br><span class="line">          mainAxisAlignment: MainAxisAlignment.center,</span><br><span class="line">          children: &lt;Widget&gt;[</span><br><span class="line">            Text(<span class="string">"hanyajun"</span>),</span><br><span class="line">            Text(<span class="string">"hanyajun.com"</span>),</span><br><span class="line">            Text(<span class="string">"I love coding"</span>),</span><br><span class="line">          ],</span><br><span class="line">        )),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://cdn.hanyajun.com/2019-10-23-01-02-19.png" alt="2019-10-23-01-02-19"></p><h4 id="expanded属性的使用">Expanded属性的使用</h4><p>其实在学习水平布局的时候我们对Expanded有了深刻的理解，它就是灵活布局。比如我们想让中间区域变大，而头部区域和底部根据文字所占空间进行显示。</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/material.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> main() =&gt; runApp(MyApp());</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> MaterialApp(</span><br><span class="line">      title: <span class="string">"Column Widget Demo"</span>,</span><br><span class="line">      home: Scaffold(</span><br><span class="line">        appBar: <span class="keyword">new</span> AppBar(</span><br><span class="line">          title: <span class="keyword">new</span> Text(<span class="string">"垂直方向布局"</span>),</span><br><span class="line">        ),</span><br><span class="line">        body: <span class="keyword">new</span> Column(</span><br><span class="line">          crossAxisAlignment: CrossAxisAlignment.center,</span><br><span class="line">          mainAxisAlignment: MainAxisAlignment.center,</span><br><span class="line">          children: &lt;Widget&gt;[</span><br><span class="line">            Center(child: Text(<span class="string">"hanyajun"</span>)),</span><br><span class="line">            Expanded(child: Center(child: Text(<span class="string">"hanyajun.com"</span>))),</span><br><span class="line">            Center(child: Text(<span class="string">"I love coding"</span>)),</span><br><span class="line">          ],</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://cdn.hanyajun.com/2019-10-23-01-05-41.png" alt="2019-10-23-01-05-41"></p><h3 id="stack-widget-层叠布局">Stack Widget 层叠布局</h3><p>在头像上方再放入一个容器，容器里边写上字，这时候我们就可以使用Stack布局。</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/material.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> main() =&gt; runApp(MyApp());</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">var</span> stack = <span class="keyword">new</span> Stack(</span><br><span class="line">      alignment: <span class="keyword">const</span> FractionalOffset(<span class="number">0.5</span>, <span class="number">0.8</span>),<span class="comment">//设置对齐方式0-1</span></span><br><span class="line">      children: &lt;Widget&gt;[</span><br><span class="line">        <span class="keyword">new</span> CircleAvatar(</span><br><span class="line">          backgroundImage: <span class="keyword">new</span> NetworkImage(<span class="string">"https://hanyajun.com/img/avatar/self.jpg"</span>),</span><br><span class="line">          radius: <span class="number">100.0</span>, <span class="comment">//半径</span></span><br><span class="line">        ),</span><br><span class="line">        <span class="keyword">new</span> Container(</span><br><span class="line">          decoration: <span class="keyword">new</span> BoxDecoration(</span><br><span class="line">            color: Colors.lightBlue,</span><br><span class="line">          ),</span><br><span class="line">          padding: EdgeInsets.all(<span class="number">5.0</span>),</span><br><span class="line">          child: <span class="keyword">new</span> Text(<span class="string">"hanyajun"</span>),</span><br><span class="line">        ),</span><br><span class="line">      ],</span><br><span class="line">    );</span><br><span class="line">    <span class="keyword">return</span> MaterialApp(</span><br><span class="line">      title: <span class="string">"Column Widget Demo"</span>,</span><br><span class="line">      home: Scaffold(</span><br><span class="line">        appBar: <span class="keyword">new</span> AppBar(</span><br><span class="line">          title: <span class="keyword">new</span> Text(<span class="string">"垂直方向布局"</span>),</span><br><span class="line">        ),</span><br><span class="line">        body: Center(</span><br><span class="line">          child: stack,</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>- 层叠布局的 alignment 属性<br>alignment属性是控制层叠的位置的，建议在两个内容进行层叠时使用。它有两个值X轴距离和Y轴距离，值是从0到1的，都是从上层容器的左上角开始算起的。</p><p>- CircleAvatar组件的使用<br>CircleAvatar这个经常用来作头像的，组件里边有个radius的值可以设置图片的弧度。</p><p><img src="http://cdn.hanyajun.com/2019-10-23-22-34-46.png" alt="2019-10-23-22-34-46"></p><h4 id="positioned属性">Positioned属性</h4><ul><li>Positioned组件的属性</li><li>bottom: 距离层叠组件下边的距离</li><li>left：距离层叠组件左边的距离</li><li>top：距离层叠组件上边的距离</li><li>right：距离层叠组件右边的距离</li><li>width: 层叠定位组件的宽度</li><li>height: 层叠定位组件的高度</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/material.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> main() =&gt; runApp(MyApp());</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">var</span> stack = <span class="keyword">new</span> Stack(</span><br><span class="line">      <span class="comment">//alignment: const FractionalOffset(0.5, 0.8), //设置对齐方式0-1</span></span><br><span class="line">      children: &lt;Widget&gt;[</span><br><span class="line">        <span class="keyword">new</span> CircleAvatar(</span><br><span class="line">          backgroundImage: <span class="keyword">new</span> NetworkImage(<span class="string">"https://hanyajun.com/img/avatar/self.jpg"</span>),</span><br><span class="line">          radius: <span class="number">100.0</span>, <span class="comment">//半径</span></span><br><span class="line">        ),</span><br><span class="line">        <span class="keyword">new</span> Positioned(</span><br><span class="line">          top: <span class="number">10.0</span>,</span><br><span class="line">          left: <span class="number">59.0</span>,</span><br><span class="line">          child: <span class="keyword">new</span> Text(<span class="string">"hanyajun.com"</span>),</span><br><span class="line">        ),</span><br><span class="line">        <span class="keyword">new</span> Positioned(</span><br><span class="line">          bottom: <span class="number">10.0</span>,</span><br><span class="line">          right: <span class="number">80.0</span>,</span><br><span class="line">          child: <span class="keyword">new</span> Text(<span class="string">"韩亚军"</span>),</span><br><span class="line">        ),</span><br><span class="line">      ],</span><br><span class="line">    );</span><br><span class="line">    <span class="keyword">return</span> MaterialApp(</span><br><span class="line">      title: <span class="string">"Column Widget Demo"</span>,</span><br><span class="line">      home: Scaffold(</span><br><span class="line">        appBar: <span class="keyword">new</span> AppBar(</span><br><span class="line">          title: <span class="keyword">new</span> Text(<span class="string">"垂直方向布局"</span>),</span><br><span class="line">        ),</span><br><span class="line">        body: Center(</span><br><span class="line">          child: stack,</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://cdn.hanyajun.com/2019-10-23-23-23-59.png" alt="2019-10-23-23-23-59"></p><h3 id="card-widget">card widget</h3><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/material.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> main() =&gt; runApp(MyApp());</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">var</span> card = <span class="keyword">new</span> Card(</span><br><span class="line">      child: Column(</span><br><span class="line">        children: &lt;Widget&gt;[</span><br><span class="line">          ListTile(</span><br><span class="line">            title: Text(<span class="string">"湖北省咸宁市咸安区"</span>, style: TextStyle(fontWeight: FontWeight.w500)),</span><br><span class="line">            subtitle: Text(<span class="string">"朗月清风：123123123123"</span>),</span><br><span class="line">            leading: <span class="keyword">new</span> Icon(Icons.account_box, color: Colors.lightBlue),</span><br><span class="line">          ),</span><br><span class="line">          ListTile(</span><br><span class="line">            title: Text(<span class="string">"湖北省咸宁市咸安区"</span>, style: TextStyle(fontWeight: FontWeight.w500)),</span><br><span class="line">            subtitle: Text(<span class="string">"朗月清风：123123123123"</span>),</span><br><span class="line">            leading: <span class="keyword">new</span> Icon(Icons.account_box, color: Colors.lightBlue),</span><br><span class="line">          ),</span><br><span class="line">          ListTile(</span><br><span class="line">            title: Text(<span class="string">"湖北省咸宁市咸安区"</span>, style: TextStyle(fontWeight: FontWeight.w500)),</span><br><span class="line">            subtitle: Text(<span class="string">"朗月清风：123123123123"</span>),</span><br><span class="line">            leading: <span class="keyword">new</span> Icon(Icons.account_box, color: Colors.lightBlue),</span><br><span class="line">          ),</span><br><span class="line">          ListTile(</span><br><span class="line">            title: Text(<span class="string">"湖北省咸宁市咸安区"</span>, style: TextStyle(fontWeight: FontWeight.w500)),</span><br><span class="line">            subtitle: Text(<span class="string">"朗月清风：123123123123"</span>),</span><br><span class="line">            leading: <span class="keyword">new</span> Icon(Icons.account_box, color: Colors.lightBlue),</span><br><span class="line">          ),</span><br><span class="line">        ],</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">    <span class="keyword">return</span> MaterialApp(</span><br><span class="line">      title: <span class="string">"Column Widget Demo"</span>,</span><br><span class="line">      home: Scaffold(</span><br><span class="line">        appBar: <span class="keyword">new</span> AppBar(</span><br><span class="line">          title: <span class="keyword">new</span> Text(<span class="string">"垂直方向布局"</span>),</span><br><span class="line">        ),</span><br><span class="line">        body: Center(</span><br><span class="line">          child: card,</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码中使用了一个垂直布局组件Column组件，然后利用了ListTile实现内部列表，这里需要说明的是ListTile不光可以使用在ListView组件中</p><p><img src="http://cdn.hanyajun.com/2019-10-23-23-45-05.png" alt="2019-10-23-23-45-05"></p>    <div id="aplayer-VShgRCIB" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="004DXFlC0nsTCZ" data-server="tencent" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="false" data-listmaxheight="340px" data-preload="none" data-theme="#ad7a86"></div><br><br><br><br><div><h2 id="推荐文章">推荐文章<span style="font-size:0.45em; color:gray"></span></h2><ul><li><a href="https://hanyajun.com/flutter/flutter_base_component/">flutter--基础组件</a></li></ul></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="flutter" scheme="https://hanyajun.com/categories/flutter/"/>
    
    
      <category term="flutter" scheme="https://hanyajun.com/tags/flutter/"/>
    
  </entry>
  
  <entry>
    <title>flutter--基础组件</title>
    <link href="https://hanyajun.com/flutter/flutter_base_component/"/>
    <id>https://hanyajun.com/flutter/flutter_base_component/</id>
    <published>2019-10-23T15:50:00.000Z</published>
    <updated>2019-10-23T16:04:03.723Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="flutter-study">flutter study</h1><h3 id="基础组件">基础组件</h3><h4 id="text-widget">Text Widget</h4><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/material.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> main() =&gt; runApp(MyApp());</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> MaterialApp(</span><br><span class="line">        title: <span class="string">'text widget'</span>,</span><br><span class="line">        home: Scaffold(</span><br><span class="line">            body: Center(</span><br><span class="line">          child: Text(</span><br><span class="line">            <span class="string">'hello,widget,asdfaaaaaaaaaaaaaaaaaaaaaaaa'</span>,</span><br><span class="line">            textAlign: TextAlign.center,</span><br><span class="line">            maxLines:<span class="number">1</span>,  <span class="comment">//设置行数限制</span></span><br><span class="line">            overflow: TextOverflow.ellipsis,<span class="comment">//超过限制之后</span></span><br><span class="line">            style: TextStyle(</span><br><span class="line">              fontSize:<span class="number">25.0</span>,</span><br><span class="line">              color:Color.fromARGB(<span class="number">255</span>, <span class="number">255</span>, <span class="number">125</span>, <span class="number">125</span>),</span><br><span class="line">              decoration:TextDecoration.underline,</span><br><span class="line">              decorationStyle:TextDecorationStyle.solid</span><br><span class="line">            ),</span><br><span class="line">            ),</span><br><span class="line">        ),</span><br><span class="line">        </span><br><span class="line">        ));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="textalign属性">TextAlign属性</h5><ul><li><p>TextAlign属性就是文本的对齐方式，它的属性值有如下几个（详细请看视频中讲解）：</p></li><li><p>center: 文本以居中形式对齐,这个也算比较常用的了。</p></li><li><p>left:左对齐，经常使用，让文本居左进行对齐，效果和start一样。</p></li><li><p>right :右对齐，使用频率也不算高。</p></li><li><p>start:以开始位置进行对齐，类似于左对齐。</p></li><li><p>end: 以为本结尾处进行对齐，不常用。有点类似右对齐.</p></li></ul><p>总结起来，也就算三个对齐方式，left(左对齐)、center（居中对齐）、right（右对齐）</p><h5 id="maxlines属性">maxLines属性</h5><p>设置最多显示的行数</p><h5 id="overflow属性">overflow属性</h5><ul><li><p>overflow属性是用来设置文本溢出时，如何处理,它有下面几个常用的值供我们选择。</p></li><li><p>clip：直接切断，剩下的文字就没有了，感觉不太友好，体验性不好。</p></li><li><p>ellipsis:在后边显示省略号，体验性较好，这个在工作中经常使用。</p></li><li><p>fade: 溢出的部分会进行一个渐变消失的效果，当然是上线的渐变，不是左右的哦。</p></li></ul><h5 id="style属性">style属性</h5><p>style属性的内容比较多，具体的你可以查一下API</p><p><img src="http://cdn.hanyajun.com/2019-10-18-00-22-02.png" alt="image"></p><h4 id="container-widget">Container widget</h4><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/material.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> main() =&gt; runApp(MyApp());</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> MaterialApp(</span><br><span class="line">        title: <span class="string">'text widget'</span>,</span><br><span class="line">        home: Scaffold(</span><br><span class="line">          body: Center(</span><br><span class="line">              child: Container(</span><br><span class="line">                  child: <span class="keyword">new</span> Text(<span class="string">"hello hanyajun "</span>, style: TextStyle(fontSize: <span class="number">40.0</span>)),</span><br><span class="line">                  alignment: Alignment.topLeft, <span class="comment">//对齐方式</span></span><br><span class="line">                  width: <span class="number">500.0</span>,</span><br><span class="line">                  height: <span class="number">400.0</span>,</span><br><span class="line">                  <span class="comment">// color:Colors.lightBlue,</span></span><br><span class="line">                  padding: <span class="keyword">const</span> EdgeInsets.all(<span class="number">10.0</span>), <span class="comment">//内边距 .fromLTRB,加了const表示不变了</span></span><br><span class="line">                  margin: <span class="keyword">const</span> EdgeInsets.all(<span class="number">10.0</span>), <span class="comment">//外边距</span></span><br><span class="line">                  decoration: <span class="keyword">new</span> BoxDecoration(</span><br><span class="line">                      gradient: <span class="keyword">const</span> LinearGradient(colors: [Colors.lightBlue, Colors.green] <span class="comment">//背景颜色渐变</span></span><br><span class="line">                          ),</span><br><span class="line">                      border: Border.all(width: <span class="number">5.0</span>, color: Colors.red) <span class="comment">//边框样式</span></span><br><span class="line">    </span><br><span class="line">                      ) <span class="comment">//修饰器（背景和边框）不能与color共存</span></span><br><span class="line"></span><br><span class="line">                  )),</span><br><span class="line">        ));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="alignment属性">Alignment属性</h5><p>这个属性针对的是Container内child的对齐方式，也就是容器子内容的对齐方式，并不是容器本身的对齐方式。</p><ul><li>bottomCenter:下部居中对齐。</li><li>botomLeft: 下部左对齐。</li><li>bottomRight：下部右对齐。</li><li>center：纵横双向居中对齐。</li><li>centerLeft：纵向居中横向居左对齐。</li><li>centerRight：纵向居中横向居右对齐。</li><li>topLeft：顶部左侧对齐。</li><li>topCenter：顶部居中对齐。</li><li>topRight： 顶部居左对齐。</li></ul><h5 id="设置宽-高和颜色属性">设置宽、高和颜色属性</h5><p>设置宽、高和颜色属性是相对容易的，只要在属性名称后面加入浮点型数字就可以了</p><h5 id="padding属性">padding属性</h5><p>padding的属性就是一个内边距，它和你使用的前端技术CSS里的padding表现形式一样，指的是Container边缘和child内容的距离</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">padding:<span class="keyword">const</span> EdgeInsets.all(<span class="number">10.0</span>),</span><br></pre></td></tr></table></figure><p>这句的意思是设置Container的内边距是10，左右上下全部为10</p><p>我们用EdgeInsets.fromLTRB(value1,value2,value3,value4) 可以满足我们的需求，LTRB分别代表左、上、右、下</p><h5 id="margin属性">margin属性</h5><p>margin是外边距，指的是container和外部元素的距离。</p><h5 id="decoration属性">decoration属性</h5><p>decoration是 container 的修饰器，主要的功能是设置背景和边框。</p><p><img src="http://cdn.hanyajun.com/2019-10-18-00-59-24.png" alt="2019-10-18-00-59-24"></p><h4 id="image-widget">image widget</h4><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/material.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> main() =&gt; runApp(MyApp());</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> MaterialApp(</span><br><span class="line">        title: <span class="string">'text widget'</span>,</span><br><span class="line">        home: Scaffold(</span><br><span class="line">            body: Center(</span><br><span class="line">              child: Container(</span><br><span class="line">                child: <span class="keyword">new</span> Image.network(</span><br><span class="line">                  <span class="string">'https://hanyajun.com/img/avatar/self.jpg'</span>,</span><br><span class="line">                  <span class="comment">//fit:BoxFit.cover//图片显示方式(充满，平铺。。。)</span></span><br><span class="line">                  <span class="comment">// colorBlendMode: BlendMode.overlay,//图片颜色叠加</span></span><br><span class="line">                  repeat: ImageRepeat.repeatX<span class="comment">//图片重复</span></span><br><span class="line"></span><br><span class="line">                ),</span><br><span class="line">                width: <span class="number">300.0</span>,</span><br><span class="line">                height: <span class="number">200.0</span>,</span><br><span class="line">                color:Colors.lightBlue,</span><br><span class="line">             </span><br><span class="line">              )</span><br><span class="line">            )</span><br><span class="line">          )</span><br><span class="line">        );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="加入图片的几种方式">加入图片的几种方式</h5><ul><li>Image.asset:加载资源图片，就是加载项目资源目录中的图片,加入图片后会增大打包的包体体积，用的是相对路径。</li><li>Image.network:网络资源图片，意思就是你需要加入一段http://xxxx.xxx的这样的网络路径地址。</li><li>Image.file:加载本地图片，就是加载本地文件中的图片，这个是一个绝对路径，跟包体无关。</li><li>Image.memory: 加载Uint8List资源图片</li></ul><h5 id="fit属性的设置">fit属性的设置</h5><p>fit属性可以控制图片的拉伸和挤压，这些都是根据图片的父级容器来的.</p><ul><li><p>BoxFit.fill:全图显示，图片会被拉伸，并充满父容器。</p></li><li><p>BoxFit.contain:全图显示，显示原比例，可能会有空隙。</p></li><li><p>BoxFit.cover：显示可能拉伸，可能裁切，充满（图片要充满整个容器，还不变形）。</p></li><li><p>BoxFit.fitWidth：宽度充满（横向充满），显示可能拉伸，可能裁切。</p></li><li><p>BoxFit.fitHeight ：高度充满（竖向充满）,显示可能拉伸，可能裁切。</p></li><li><p>BoxFit.scaleDown：效果和contain差不多，但是此属性不允许显示超过源图片大小，可小不可大。</p></li></ul><h5 id="图片的混合模式">图片的混合模式</h5><p>图片混合模式（colorBlendMode）和color属性配合使用，能让图片改变颜色，里边的模式非常的多，产生的效果也是非常丰富的</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">child:<span class="keyword">new</span> Image.network(</span><br><span class="line">  <span class="string">'http://jspang.com/static/myimg/blogtouxiang.jpg'</span>,</span><br><span class="line">    color: Colors.greenAccent,</span><br><span class="line">    colorBlendMode: BlendMode.darken,</span><br><span class="line">),</span><br></pre></td></tr></table></figure><ul><li>color：是要混合的颜色，如果你只设置color是没有意义的。</li><li>colorBlendMode:是混合模式，相当于我们如何混合。</li></ul><h5 id="repeat图片重复">repeat图片重复</h5><ul><li><p>ImageRepeat.repeat : 横向和纵向都进行重复，直到铺满整个画布。</p></li><li><p>ImageRepeat.repeatX: 横向重复，纵向不重复。</p></li><li><p>ImageRepeat.repeatY：纵向重复，横向不重复。</p></li></ul><p><img src="http://cdn.hanyajun.com/2019-10-21-21-30-54.png" alt="2019-10-21-21-30-54"></p><h4 id="listview-widget">ListView Widget</h4><ul><li>竖向</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/material.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> main() =&gt; runApp(MyApp());</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> MaterialApp(</span><br><span class="line">      title: <span class="string">"hanyajun"</span>,</span><br><span class="line">      home: Scaffold(</span><br><span class="line">        appBar: <span class="keyword">new</span> AppBar(</span><br><span class="line">          title: <span class="keyword">new</span> Text(<span class="string">"ListView Widget"</span>),</span><br><span class="line">        ),</span><br><span class="line">        body: <span class="keyword">new</span> ListView(</span><br><span class="line">          children: &lt;Widget&gt;[</span><br><span class="line">            <span class="keyword">new</span> ListTile(</span><br><span class="line">              leading: <span class="keyword">new</span> Icon(Icons.perm_camera_mic),</span><br><span class="line">              title: <span class="keyword">new</span> Text(<span class="string">"perm_camera_mic"</span>),</span><br><span class="line">            ),</span><br><span class="line">            <span class="keyword">new</span> ListTile(</span><br><span class="line">              leading: <span class="keyword">new</span> Icon(Icons.access_alarms),</span><br><span class="line">              title: <span class="keyword">new</span> Text(<span class="string">"access_alarms"</span>),</span><br><span class="line">            ),</span><br><span class="line">            <span class="keyword">new</span> ListTile(</span><br><span class="line">              leading: <span class="keyword">new</span> Icon(Icons.call),</span><br><span class="line">              title: <span class="keyword">new</span> Text(<span class="string">"call"</span>),</span><br><span class="line">            ),</span><br><span class="line">          ],</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="crolldirection属性">crollDirection属性</h5><p>ListView组件的scrollDirection属性只有两个值，一个是横向滚动，一个是纵向滚动。默认的就是垂直滚动，所以如果是垂直滚动，我们一般都不进行设置。</p><ul><li>Axis.horizontal:横向滚动或者叫水平方向滚动。</li><li>Axis.vertical:纵向滚动或者叫垂直方向滚动。</li></ul><p><img src="http://cdn.hanyajun.com/2019-10-21-22-43-47.png" alt="2019-10-21-22-43-47"></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/material.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> main() =&gt; runApp(MyApp());</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> MaterialApp(</span><br><span class="line">      title: <span class="string">"hanyajun"</span>,</span><br><span class="line">      home: Scaffold(</span><br><span class="line">        appBar: <span class="keyword">new</span> AppBar(</span><br><span class="line">          title: <span class="keyword">new</span> Text(<span class="string">"ListView Widget"</span>),</span><br><span class="line">        ),</span><br><span class="line">        body: <span class="keyword">new</span> ListView(</span><br><span class="line">          children: &lt;Widget&gt;[</span><br><span class="line">            <span class="keyword">new</span> Image.network(<span class="string">"https://hanyajun.com/img/avatar/self.jpg"</span>),</span><br><span class="line">            <span class="keyword">new</span> Image.network(<span class="string">"https://hanyajun.com/img/avatar/self.jpg"</span>),</span><br><span class="line">          ],</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://cdn.hanyajun.com/2019-10-21-22-49-40.png" alt="2019-10-21-22-49-40"></p><ul><li>横向</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/material.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> main() =&gt; runApp(MyApp());</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> MaterialApp(</span><br><span class="line">      title: <span class="string">"hanyajun"</span>,</span><br><span class="line">      home: Scaffold(</span><br><span class="line">        appBar: <span class="keyword">new</span> AppBar(</span><br><span class="line">          title: <span class="keyword">new</span> Text(<span class="string">"ListView Widget"</span>),</span><br><span class="line">        ),</span><br><span class="line">        body: <span class="keyword">new</span> Center(</span><br><span class="line">          child: Container(</span><br><span class="line">            height: <span class="number">200</span>,</span><br><span class="line">            child: <span class="keyword">new</span> ListView(scrollDirection: Axis.horizontal, <span class="comment">//list 滚动方向，横向</span></span><br><span class="line">                children: &lt;Widget&gt;[</span><br><span class="line">                  <span class="keyword">new</span> Container(</span><br><span class="line">                    width: <span class="number">180</span>,</span><br><span class="line">                    color: Colors.lightBlue,</span><br><span class="line">                  ),</span><br><span class="line">                  <span class="keyword">new</span> Container(</span><br><span class="line">                    width: <span class="number">180</span>,</span><br><span class="line">                    color: Colors.amber,</span><br><span class="line">                  ),</span><br><span class="line">                  <span class="keyword">new</span> Container(</span><br><span class="line">                    width: <span class="number">180</span>,</span><br><span class="line">                    color: Colors.deepOrange,</span><br><span class="line">                  ),</span><br><span class="line">                  <span class="keyword">new</span> Container(</span><br><span class="line">                    width: <span class="number">180</span>,</span><br><span class="line">                    color: Colors.deepPurpleAccent,</span><br><span class="line">                  ),</span><br><span class="line">                ]),</span><br><span class="line">          ),</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://cdn.hanyajun.com/2019-10-21-23-01-00.png" alt="2019-10-21-23-01-00"></p><ul><li>如何减少组件之间的嵌套？</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/material.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> main() =&gt; runApp(MyApp());</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> MaterialApp(</span><br><span class="line">      title: <span class="string">"hanyajun"</span>,</span><br><span class="line">      home: Scaffold(</span><br><span class="line">        appBar: <span class="keyword">new</span> AppBar(</span><br><span class="line">          title: <span class="keyword">new</span> Text(<span class="string">"ListView Widget"</span>),</span><br><span class="line">        ),</span><br><span class="line">        body: <span class="keyword">new</span> Center(</span><br><span class="line">          child: Container(</span><br><span class="line">            height: <span class="number">200</span>,</span><br><span class="line">            child: MyList(),<span class="comment">//使用自己实现的组件，万物皆组件</span></span><br><span class="line">          ),</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyList</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> ListView(</span><br><span class="line">      scrollDirection: Axis.horizontal, <span class="comment">//list 滚动方向，横向</span></span><br><span class="line">                children: &lt;Widget&gt;[</span><br><span class="line">                  <span class="keyword">new</span> Container(</span><br><span class="line">                    width: <span class="number">180</span>,</span><br><span class="line">                    color: Colors.lightBlue,</span><br><span class="line">                  ),</span><br><span class="line">                  <span class="keyword">new</span> Container(</span><br><span class="line">                    width: <span class="number">180</span>,</span><br><span class="line">                    color: Colors.amber,</span><br><span class="line">                  ),</span><br><span class="line">                  <span class="keyword">new</span> Container(</span><br><span class="line">                    width: <span class="number">180</span>,</span><br><span class="line">                    color: Colors.deepOrange,</span><br><span class="line">                  ),</span><br><span class="line">                  <span class="keyword">new</span> Container(</span><br><span class="line">                    width: <span class="number">180</span>,</span><br><span class="line">                    color: Colors.deepPurpleAccent,</span><br><span class="line">                  ),</span><br><span class="line">                ]</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>动态生成listView</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/material.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> main() =&gt; runApp(MyApp(items: <span class="keyword">new</span> <span class="built_in">List</span>&lt;<span class="built_in">String</span>&gt;.generate(<span class="number">1000</span>, (i) =&gt; <span class="string">"Item $i"</span>)));</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">List</span>&lt;<span class="built_in">String</span>&gt; items;</span><br><span class="line"></span><br><span class="line">  MyApp(&#123;Key key, <span class="meta">@required</span> <span class="keyword">this</span>.items&#125;) : <span class="keyword">super</span>(key: key);</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> MaterialApp(</span><br><span class="line">      title: <span class="string">"hanyajun"</span>,</span><br><span class="line">      home: Scaffold(</span><br><span class="line">        appBar: <span class="keyword">new</span> AppBar(</span><br><span class="line">          title: <span class="keyword">new</span> Text(<span class="string">"ListView Widget"</span>),</span><br><span class="line">        ),</span><br><span class="line">        body: <span class="keyword">new</span> ListView.builder(</span><br><span class="line">          itemCount: items.length,</span><br><span class="line">          itemBuilder: (context, index) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> ListTile(</span><br><span class="line">              title: <span class="keyword">new</span> Text(<span class="string">"<span class="subst">$&#123;items[index]&#125;</span>"</span>),</span><br><span class="line">            );</span><br><span class="line">          &#125;,</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://cdn.hanyajun.com/2019-10-21-23-45-43.png" alt="2019-10-21-23-45-43"></p><h4 id="gridview-网格列表的使用">GridView 网格列表的使用</h4><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/material.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> main() =&gt; runApp(MyApp());</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> MaterialApp(</span><br><span class="line">      title: <span class="string">"hanyajun"</span>,</span><br><span class="line">      home: Scaffold(</span><br><span class="line">        appBar: <span class="keyword">new</span> AppBar(</span><br><span class="line">          title: <span class="keyword">new</span> Text(<span class="string">"ListView Widget"</span>),</span><br><span class="line">        ),</span><br><span class="line">        body: GridView.count(</span><br><span class="line">          padding:<span class="keyword">const</span> EdgeInsets.all(<span class="number">20.0</span>),</span><br><span class="line">          crossAxisSpacing:<span class="number">10.0</span>,<span class="comment">//网格之间的间距</span></span><br><span class="line">          crossAxisCount:<span class="number">3</span>,<span class="comment">//每行的网格数</span></span><br><span class="line">          children:&lt;Widget&gt;[</span><br><span class="line">            <span class="keyword">const</span> Text(<span class="string">"我喜欢看书"</span>),</span><br><span class="line">            <span class="keyword">const</span> Text(<span class="string">"我喜欢看书"</span>),</span><br><span class="line">            <span class="keyword">const</span> Text(<span class="string">"我喜欢看书"</span>),</span><br><span class="line">            <span class="keyword">const</span> Text(<span class="string">"我喜欢看书"</span>),</span><br><span class="line">          ],</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>padding:表示内边距，这个小伙伴们应该很熟悉。</li><li>crossAxisSpacing:网格间的空当，相当于每个网格之间的间距。</li><li>crossAxisCount:网格的列数，相当于一行放置的网格数量。</li></ul><p><img src="http://cdn.hanyajun.com/2019-10-22-00-22-27.png" alt="2019-10-22-00-22-27"></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/material.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> main() =&gt; runApp(MyApp());</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> MaterialApp(</span><br><span class="line">      title: <span class="string">"hanyajun"</span>,</span><br><span class="line">      home: Scaffold(</span><br><span class="line">        appBar: <span class="keyword">new</span> AppBar(</span><br><span class="line">          title: <span class="keyword">new</span> Text(<span class="string">"ListView Widget"</span>),</span><br><span class="line">        ),</span><br><span class="line">        body: GridView(</span><br><span class="line">          gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(</span><br><span class="line">            crossAxisCount:<span class="number">3</span>,</span><br><span class="line">            mainAxisSpacing: <span class="number">2.0</span>,</span><br><span class="line">            crossAxisSpacing: <span class="number">2.0</span>,</span><br><span class="line">            childAspectRatio: <span class="number">0.75</span></span><br><span class="line">          ),</span><br><span class="line">          children:&lt;Widget&gt;[</span><br><span class="line">             <span class="keyword">new</span> Image.network(<span class="string">'http://img5.mtime.cn/mt/2018/10/22/104316.77318635_180X260X4.jpg'</span>,fit: BoxFit.cover),</span><br><span class="line">             <span class="keyword">new</span> Image.network(<span class="string">'http://img5.mtime.cn/mt/2018/10/10/112514.30587089_180X260X4.jpg'</span>,fit: BoxFit.cover),</span><br><span class="line">             <span class="keyword">new</span> Image.network(<span class="string">'http://img5.mtime.cn/mt/2018/11/13/093605.61422332_180X260X4.jpg'</span>,fit: BoxFit.cover),</span><br><span class="line">             <span class="keyword">new</span> Image.network(<span class="string">'http://img5.mtime.cn/mt/2018/11/07/092515.55805319_180X260X4.jpg'</span>,fit: BoxFit.cover),</span><br><span class="line">             <span class="keyword">new</span> Image.network(<span class="string">'http://img5.mtime.cn/mt/2018/11/21/090246.16772408_135X190X4.jpg'</span>,fit: BoxFit.cover),</span><br><span class="line">             <span class="keyword">new</span> Image.network(<span class="string">'http://img5.mtime.cn/mt/2018/11/17/162028.94879602_135X190X4.jpg'</span>,fit: BoxFit.cover),</span><br><span class="line">             <span class="keyword">new</span> Image.network(<span class="string">'http://img5.mtime.cn/mt/2018/11/19/165350.52237320_135X190X4.jpg'</span>,fit: BoxFit.cover),</span><br><span class="line">             <span class="keyword">new</span> Image.network(<span class="string">'http://img5.mtime.cn/mt/2018/11/16/115256.24365160_180X260X4.jpg'</span>,fit: BoxFit.cover),</span><br><span class="line">             <span class="keyword">new</span> Image.network(<span class="string">'http://img5.mtime.cn/mt/2018/11/20/141608.71613590_135X190X4.jpg'</span>,fit: BoxFit.cover),</span><br><span class="line">          ]</span><br><span class="line"></span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>childAspectRatio:宽高比，这个值的意思是宽是高的多少倍，如果宽是高的2倍，那我们就写2.0，如果高是宽的2倍，我们就写0.5<br><img src="http://cdn.hanyajun.com/2019-10-22-00-33-58.png" alt="2019-10-22-00-33-58"></li></ul>    <div id="aplayer-HqcwIrnR" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="001BR1tg1j9xGj" data-server="tencent" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="false" data-listmaxheight="340px" data-preload="none" data-theme="#ad7a86"></div><div><h2 id="推荐文章">推荐文章<span style="font-size:0.45em; color:gray"></span></h2><ul><li><a href="https://hanyajun.com/flutter/flutter_layout/">flutter--布局</a></li></ul></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="flutter" scheme="https://hanyajun.com/categories/flutter/"/>
    
    
      <category term="flutter" scheme="https://hanyajun.com/tags/flutter/"/>
    
  </entry>
  
  <entry>
    <title>go test和benchmark如何只对指定方法进行测试</title>
    <link href="https://hanyajun.com/go/go_test_benchmark/"/>
    <id>https://hanyajun.com/go/go_test_benchmark/</id>
    <published>2019-10-19T01:35:00.000Z</published>
    <updated>2019-10-19T01:39:29.029Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="go-test">go test</h3><p>demo_test.go</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestDemo1</span><span class="params">(t *testing.T)</span></span> &#123;</span><br><span class="line">t.Log(<span class="string">"test1"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestDemo2</span><span class="params">(t *testing.T)</span></span> &#123;</span><br><span class="line">t.Log(<span class="string">"test2"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">BenchmarkDemo3</span><span class="params">(b *testing.B)</span></span> &#123;</span><br><span class="line">b.Log(<span class="string">"benchmark1"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">BenchmarkDemo4</span><span class="params">(b *testing.B)</span></span> &#123;</span><br><span class="line">b.Log(<span class="string">"benchmark2"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>如何只对TestDemo1测试？</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go test -v  demo_test.go -test.run Demo1</span><br></pre></td></tr></table></figure><ul><li>输出</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="keyword">go</span> test -v  demo_test.<span class="keyword">go</span> -test.run Demo1</span><br><span class="line">=== RUN   TestDemo1</span><br><span class="line">--- PASS: TestDemo1 (<span class="number">0.00s</span>)</span><br><span class="line">    demo_test.<span class="keyword">go</span>:<span class="number">13</span>: test1</span><br><span class="line">PASS</span><br><span class="line">ok      command-line-arguments  (cached)</span><br></pre></td></tr></table></figure><h3 id="go-benchmark">go benchmark</h3><ul><li>那如何只对benchMarkDemo3做性能测试呢？</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go test -v  demo_test.go -test.bench Demo3 -test.run Demo3</span><br></pre></td></tr></table></figure><ul><li>输出</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ go test -v  demo_test.go -test.bench Demo3 -test.run Demo3</span><br><span class="line">goos: windows</span><br><span class="line">goarch: amd64</span><br><span class="line">BenchmarkDemo3-<span class="number">12</span>       <span class="number">2000000000</span>               <span class="number">0.00</span> ns/op</span><br><span class="line">--- BENCH: BenchmarkDemo3-<span class="number">12</span></span><br><span class="line">    demo_test.go:<span class="number">21</span>: benchmark1</span><br><span class="line">    demo_test.go:<span class="number">21</span>: benchmark1</span><br><span class="line">    demo_test.go:<span class="number">21</span>: benchmark1</span><br><span class="line">    demo_test.go:<span class="number">21</span>: benchmark1</span><br><span class="line">    demo_test.go:<span class="number">21</span>: benchmark1</span><br><span class="line">    demo_test.go:<span class="number">21</span>: benchmark1</span><br><span class="line">PASS</span><br></pre></td></tr></table></figure><p>go test 参数解读</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go test [-c] [-i] [build/test flags] [packages] [build/test flags &amp; test binary flags]</span><br></pre></td></tr></table></figure><p>参数解读:</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">-c : 编译go test成为可执行的二进制文件，但是不运行测试。</span><br><span class="line"></span><br><span class="line">-i : 安装测试包依赖的package，但是不运行测试。</span><br><span class="line"></span><br><span class="line">关于build flags，调用go help build，这些是编译运行过程中需要使用到的参数，一般设置为空</span><br><span class="line"></span><br><span class="line">关于packages，调用go help packages，这些是关于包的管理，一般设置为空</span><br><span class="line"></span><br><span class="line">关于flags <span class="keyword">for</span> test binary，调用go help testflag，这些是go test过程中经常使用到的参数</span><br><span class="line"></span><br><span class="line">-test.v : 是否输出全部的单元测试用例（不管成功或者失败），默认没有加上，所以只输出失败的单元测试用例。</span><br><span class="line"></span><br><span class="line">-test.run pattern: 只跑哪些单元测试用例</span><br><span class="line"></span><br><span class="line">-test.bench patten: 只跑那些性能测试用例</span><br><span class="line"></span><br><span class="line">-test.benchmem : 是否在性能测试的时候输出内存情况</span><br><span class="line"></span><br><span class="line">-test.benchtime t : 性能测试运行的时间，默认是<span class="number">1</span>s</span><br><span class="line"></span><br><span class="line">-test.cpuprofile cpu.out : 是否输出cpu性能分析文件</span><br><span class="line"></span><br><span class="line">-test.memprofile mem.out : 是否输出内存性能分析文件</span><br><span class="line"></span><br><span class="line">-test.blockprofile block.out : 是否输出内部goroutine阻塞的性能分析文件</span><br><span class="line"></span><br><span class="line">-test.memprofilerate n : 内存性能分析的时候有一个分配了多少的时候才打点记录的问题。这个参数就是设置打点的内存分配间隔，也就是profile中一个sample代表的内存大小。默认是设置为<span class="number">512</span> * <span class="number">1024</span>的。如果你将它设置为<span class="number">1</span>，则每分配一个内存块就会在profile中有个打点，那么生成的profile的sample就会非常多。如果你设置为<span class="number">0</span>，那就是不做打点了。</span><br><span class="line"></span><br><span class="line">你可以通过设置memprofilerate=<span class="number">1</span>和GOGC=off来关闭内存回收，并且对每个内存块的分配进行观察。</span><br><span class="line"></span><br><span class="line">-test.blockprofilerate n: 基本同上，控制的是goroutine阻塞时候打点的纳秒数。默认不设置就相当于-test.blockprofilerate=<span class="number">1</span>，每一纳秒都打点记录一下</span><br><span class="line"></span><br><span class="line">-test.parallel n : 性能测试的程序并行cpu数，默认等于GOMAXPROCS。</span><br><span class="line"></span><br><span class="line">-test.timeout t : 如果测试用例运行时间超过t，则抛出panic</span><br><span class="line"></span><br><span class="line">-test.cpu <span class="number">1</span>,<span class="number">2</span>,<span class="number">4</span> : 程序运行在哪些CPU上面，使用二进制的<span class="number">1</span>所在位代表，和nginx的nginx_worker_cpu_affinity是一个道理</span><br><span class="line"></span><br><span class="line">-test.short : 将那些运行时间较长的测试用例运行时间缩短</span><br></pre></td></tr></table></figure>    <div id="aplayer-eoemItdF" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="003ebMYY2PGmn6" data-server="tencent" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="false" data-listmaxheight="340px" data-preload="none" data-theme="#ad7a86"></div><div><h2 id="推荐文章">推荐文章<span style="font-size:0.45em; color:gray"></span></h2><ul><li><a href="https://lailin.xyz/post/11996.html">Go Web 小技巧（三）Gin 参数绑定</a></li><li><a href="https://lailin.xyz/post/17394.html">Go Web 小技巧（二）GORM 使用自定义类型</a></li><li><a href="https://lailin.xyz/post/38237.html">Go Web 小技巧（一）简化Gin接口代码</a></li></ul></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="go" scheme="https://hanyajun.com/categories/go/"/>
    
    
      <category term="go" scheme="https://hanyajun.com/tags/go/"/>
    
  </entry>
  
  <entry>
    <title>go里面如何将[]int64序列化为 []string</title>
    <link href="https://hanyajun.com/golang/int2sting/"/>
    <id>https://hanyajun.com/golang/int2sting/</id>
    <published>2019-08-07T08:29:00.000Z</published>
    <updated>2019-08-08T10:19:41.884Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="背景">背景</h3><p>有时我们会遇到必须用int64的情景(snowflake id等)，这个时候会遇到一个很尴尬的问题，就是js的number类型最大只支持2^53，就会出现精度丢失的情况，这个时候最好是用string与前端交互比较合适。</p><h3 id="对于单一的int-序列化为string">对于单一的int 序列化为string</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Demo <span class="keyword">struct</span> &#123;</span><br><span class="line">ID <span class="keyword">int64</span> <span class="string">`json:"id,string"`</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>注意json tag以下的用法：</p><p>1、<code>json:&quot;-&quot;</code>：编码的时候会忽略这个字段。</p><p>2、<code>json:&quot;newName&quot;</code>：指定字段在JSON字符串的key名字。</p><p>3、<code>json:&quot;newName,omitempty&quot;</code>：如果这个字段是空值，则不编码到JSON里面，否则用newName为名字编码。</p><p>4、<code>json:&quot;,omitempty&quot;</code>：同上，不为空的话，这个字段的key还是用默认的struct字段名。</p><p>5、<code>json:&quot;,string&quot;</code>：编码成字符串，这个string选项只适用字符串，浮点型和整型数据。</p></li></ul><p>6、struct字段需要可导出才能编码成json，否则会忽略。</p><h3 id="将int-序列化为string">将[]int 序列化为[]string</h3><p>这里就需要用到自定义序列化，也就是实现json/encode 里面的MarshalJson和UnmarshalJson方法。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"encoding/json"</span></span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"strconv"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* @Author:hanyajun</span></span><br><span class="line"><span class="comment">* @Date:2019/8/6 10:21</span></span><br><span class="line"><span class="comment">* @Name:json</span></span><br><span class="line"><span class="comment">* @Function:</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> IntString <span class="keyword">int64</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> RequestParam <span class="keyword">struct</span> &#123;</span><br><span class="line">LoadWaybills []IntString <span class="string">`json:"load_waybills"`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(i IntString)</span> <span class="title">MarshalJSON</span><span class="params">()</span> <span class="params">([]<span class="keyword">byte</span>, error)</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> []<span class="keyword">byte</span>(fmt.Sprintf(<span class="string">"\"%v\""</span>, i)), <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(i *IntString)</span> <span class="title">UnmarshalJSON</span><span class="params">(value []<span class="keyword">byte</span>)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">m, err := strconv.ParseInt(<span class="keyword">string</span>(value[<span class="number">1</span>:<span class="built_in">len</span>(value)<span class="number">-1</span>]), <span class="number">10</span>, <span class="number">32</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line">*i = IntString(m)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> a <span class="keyword">int64</span> = <span class="number">90</span></span><br><span class="line"><span class="keyword">var</span> result = &amp;RequestParam&#123;LoadWaybills: []IntString&#123;IntString(a), <span class="number">123</span>&#125;&#125;</span><br><span class="line">b, _ := json.Marshal(result)</span><br><span class="line">fmt.Printf(<span class="string">"marshal result:%s\n"</span>, b)</span><br><span class="line"><span class="keyword">var</span> result2 RequestParam</span><br><span class="line">_ = json.Unmarshal(b, &amp;result2)</span><br><span class="line">fmt.Printf(<span class="string">"unmarshal result:%v"</span>, result2.LoadWaybills)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>输出结果</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">marshal result:&#123;"load_waybills":["123","567"]&#125;</span><br><span class="line">unmarshal result:&#123;[123 567]&#125;</span><br></pre></td></tr></table></figure><div><h2 id="推荐文章">推荐文章<span style="font-size:0.45em; color:gray"></span></h2><ul><li><a href="https://hanyajun.com/golang/go_article_2019/">go技术文章精选(2019)</a></li><li><a href="https://hanyajun.com/golang/golang_introduction/">go复盘笔记--go语言介绍</a></li></ul></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="golang" scheme="https://hanyajun.com/categories/golang/"/>
    
    
      <category term="golang" scheme="https://hanyajun.com/tags/golang/"/>
    
  </entry>
  
  <entry>
    <title>git操作整理</title>
    <link href="https://hanyajun.com/article/git/"/>
    <id>https://hanyajun.com/article/git/</id>
    <published>2019-06-16T14:12:00.000Z</published>
    <updated>2019-06-16T14:31:08.906Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="git-操作整理">git 操作整理</h1><h2 id="统一概念">统一概念：</h2><pre><code>- 工作区：改动（增删文件和内容）- 暂存区：输入命令：`git add 改动的文件名`，此次改动就放到了 ‘暂存区’- 本地仓库(简称：本地)：输入命令：`git commit 此次修改的描述`，此次改动就放到了 ’本地仓库’，每个 commit，我叫它为一个 ‘版本’。- 远程仓库(简称：远程)：输入命令：`git push 远程仓库`，此次改动就放到了 ‘远程仓库’（GitHub 等)- commit-id：输出命令：`git log`，最上面那行 `commit xxxxxx`，后面的字符串就是 commit-id</code></pre><h2 id="展示帮助信息">展示帮助信息</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">help</span> -g</span><br></pre></td></tr></table></figure><p>The command output as below:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">The common Git guides are:</span><br><span class="line">   attributes          Defining attributes per path</span><br><span class="line">   cli                 Git command-line interface and conventions</span><br><span class="line">   core-tutorial       A Git core tutorial for developers</span><br><span class="line">   cvs-migration       Git for CVS users</span><br><span class="line">   diffcore            Tweaking diff output</span><br><span class="line">   everyday            A useful minimum set of commands for Everyday Git</span><br><span class="line">   glossary            A Git Glossary</span><br><span class="line">   hooks               Hooks used by Git</span><br><span class="line">   ignore              Specifies intentionally untracked files to ignore</span><br><span class="line">   modules             Defining submodule properties</span><br><span class="line">   namespaces          Git namespaces</span><br><span class="line">   repository-layout    Git Repository Layout</span><br><span class="line">   revisions           Specifying revisions and ranges for Git</span><br><span class="line">   tutorial            A tutorial introduction to Git</span><br><span class="line">   tutorial-2          A tutorial introduction to Git: part two</span><br><span class="line">   workflows           An overview of recommended workflows with Git</span><br><span class="line"></span><br><span class="line">&apos;git help -a&apos; and &apos;git help -g&apos; list available subcommands and some concept guides. See &apos;git help &lt;command&gt;&apos; or &apos;git help &lt;concept&gt;&apos; to read about a specific subcommand or concept.</span><br></pre></td></tr></table></figure><h2 id="回到远程仓库的状态">回到远程仓库的状态</h2><p>抛弃本地所有的修改，回到远程仓库的状态。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git fetch --all &amp;&amp; git reset --hard origin/master</span><br></pre></td></tr></table></figure><h2 id="重设第一个-commit">重设第一个 commit</h2><p>也就是把所有的改动都重新放回工作区，并<strong>清空所有的 commit</strong>，这样就可以重新提交第一个 commit 了</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git update-ref -d HEAD</span><br></pre></td></tr></table></figure><h2 id="展示工作区和暂存区的不同">展示工作区和暂存区的不同</h2><p>输出<strong>工作区</strong>和<strong>暂存区</strong>的 different (不同)。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git diff</span><br></pre></td></tr></table></figure><p>还可以展示本地仓库中任意两个 commit 之间的文件变动：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git diff &lt;commit-id&gt; &lt;commit-id&gt;</span><br></pre></td></tr></table></figure><h2 id="展示暂存区和最近版本的不同">展示暂存区和最近版本的不同</h2><p>输出<strong>暂存区</strong>和本地最近的版本 (commit) 的 different (不同)。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git diff --cached</span><br></pre></td></tr></table></figure><h2 id="展示暂存区-工作区和最近版本的不同">展示暂存区、工作区和最近版本的不同</h2><p>输出<strong>工作区</strong>、<strong>暂存区</strong> 和本地最近的版本 (commit) 的 different (不同)。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git diff HEAD</span><br></pre></td></tr></table></figure><h2 id="快速切换到上一个分支">快速切换到上一个分支</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -</span><br></pre></td></tr></table></figure><h2 id="删除已经合并到-master-的分支">删除已经合并到 master 的分支</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch --merged master | grep -v <span class="string">'^\*\|  master'</span> | xargs -n 1 git branch -d</span><br></pre></td></tr></table></figure><h2 id="展示本地分支关联远程仓库的情况">展示本地分支关联远程仓库的情况</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -vv</span><br></pre></td></tr></table></figure><h2 id="关联远程分支">关联远程分支</h2><p>关联之后，<code>git branch -vv</code> 就可以展示关联的远程分支名了，同时推送到远程仓库直接：<code>git push</code>，不需要指定远程仓库了。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -u origin/mybranch</span><br></pre></td></tr></table></figure><p>或者在 push 时加上 <code>-u</code> 参数</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin/mybranch -u</span><br></pre></td></tr></table></figure><h2 id="列出所有远程分支">列出所有远程分支</h2><p>-r 参数相当于：remote</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -r</span><br></pre></td></tr></table></figure><h2 id="列出本地和远程分支">列出本地和远程分支</h2><p>-a 参数相当于：all</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -a</span><br></pre></td></tr></table></figure><h2 id="查看远程分支和本地分支的对应关系">查看远程分支和本地分支的对应关系</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote show origin</span><br></pre></td></tr></table></figure><h2 id="远程删除了分支本地也想删除">远程删除了分支本地也想删除</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote prune origin</span><br></pre></td></tr></table></figure><h2 id="创建并切换到本地分支">创建并切换到本地分支</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b &lt;branch-name&gt;</span><br></pre></td></tr></table></figure><h2 id="从远程分支中创建并切换到本地分支">从远程分支中创建并切换到本地分支</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b &lt;branch-name&gt; origin/&lt;branch-name&gt;</span><br></pre></td></tr></table></figure><h2 id="删除本地分支">删除本地分支</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -d &lt;<span class="built_in">local</span>-branchname&gt;</span><br></pre></td></tr></table></figure><h2 id="删除远程分支">删除远程分支</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin --delete &lt;remote-branchname&gt;</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin :&lt;remote-branchname&gt;</span><br></pre></td></tr></table></figure><h2 id="重命名本地分支">重命名本地分支</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -m &lt;new-branch-name&gt;</span><br></pre></td></tr></table></figure><h2 id="查看标签">查看标签</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git tag</span><br></pre></td></tr></table></figure><p>展示当前分支的最近的 tag</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git describe --tags --abbrev=0</span><br></pre></td></tr></table></figure><h2 id="查看标签详细信息">查看标签详细信息</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git tag -ln</span><br></pre></td></tr></table></figure><h2 id="本地创建标签">本地创建标签</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git tag &lt;version-number&gt;</span><br></pre></td></tr></table></figure><p>默认 tag 是打在最近的一次 commit 上，如果需要指定 commit 打 tag：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git tag -a &lt;version-number&gt; -m <span class="string">"v1.0 发布(描述)"</span> &lt;commit-id&gt;</span><br></pre></td></tr></table></figure><h2 id="推送标签到远程仓库">推送标签到远程仓库</h2><p>首先要保证本地创建好了标签才可以推送标签到远程仓库：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin &lt;<span class="built_in">local</span>-version-number&gt;</span><br></pre></td></tr></table></figure><p>一次性推送所有标签，同步到远程仓库：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin --tags</span><br></pre></td></tr></table></figure><h2 id="删除本地标签">删除本地标签</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git tag -d &lt;tag-name&gt;</span><br></pre></td></tr></table></figure><h2 id="删除远程标签">删除远程标签</h2><p>删除远程标签需要<strong>先删除本地标签</strong>，再执行下面的命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin :refs/tags/&lt;tag-name&gt;</span><br></pre></td></tr></table></figure><h2 id="切回到某个标签">切回到某个标签</h2><p>一般上线之前都会打 tag，就是为了防止上线后出现问题，方便快速回退到上一版本。下面的命令是回到某一标签下的状态：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b branch_name tag_name</span><br></pre></td></tr></table></figure><h2 id="放弃工作区的修改">放弃工作区的修改</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout &lt;file-name&gt;</span><br></pre></td></tr></table></figure><p>放弃所有修改：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout .</span><br></pre></td></tr></table></figure><h2 id="恢复删除的文件">恢复删除的文件</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git rev-list -n 1 HEAD -- &lt;file_path&gt; <span class="comment">#得到 deleting_commit</span></span><br><span class="line"></span><br><span class="line">git checkout &lt;deleting_commit&gt;^ -- &lt;file_path&gt; <span class="comment">#回到删除文件 deleting_commit 之前的状态</span></span><br></pre></td></tr></table></figure><h2 id="以新增一个-commit-的方式还原某一个-commit-的修改">以新增一个 commit 的方式还原某一个 commit 的修改</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git revert &lt;commit-id&gt;</span><br></pre></td></tr></table></figure><h2 id="回到某个-commit-的状态并删除后面的-commit">回到某个 commit 的状态，并删除后面的 commit</h2><p>和 revert 的区别：reset 命令会抹去某个 commit id 之后的所有 commit</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">git reset &lt;commit-id&gt;  <span class="comment">#默认就是-mixed参数。</span></span><br><span class="line"></span><br><span class="line">git reset –mixed HEAD^  <span class="comment">#回退至上个版本，它将重置HEAD到另外一个commit,并且重置暂存区以便和HEAD相匹配，但是也到此为止。工作区不会被更改。</span></span><br><span class="line"></span><br><span class="line">git reset –soft HEAD~3  <span class="comment">#回退至三个版本之前，只回退了commit的信息，暂存区和工作区与回退之前保持一致。如果还要提交，直接commit即可  </span></span><br><span class="line"></span><br><span class="line">git reset –hard &lt;commit-id&gt;  <span class="comment">#彻底回退到指定commit-id的状态，暂存区和工作区也会变为指定commit-id版本的内容</span></span><br></pre></td></tr></table></figure><h2 id="修改上一个-commit-的描述">修改上一个 commit 的描述</h2><p>如果暂存区有改动，同时也会将暂存区的改动提交到上一个 commit</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit --amend</span><br></pre></td></tr></table></figure><h2 id="查看-commit-历史">查看 commit 历史</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">log</span></span><br></pre></td></tr></table></figure><h2 id="查看某段代码是谁写的">查看某段代码是谁写的</h2><p>blame 的意思为‘责怪’，你懂的。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git blame &lt;file-name&gt;</span><br></pre></td></tr></table></figure><h2 id="显示本地更新过-head-的-git-命令记录">显示本地更新过 HEAD 的 git 命令记录</h2><p>每次更新了 HEAD 的 git 命令比如 commint、amend、cherry-pick、reset、revert 等都会被记录下来（不限分支），就像 shell 的 history 一样。<br>这样你可以 reset 到任何一次更新了 HEAD 的操作之后，而不仅仅是回到当前分支下的某个 commit 之后的状态。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reflog</span><br></pre></td></tr></table></figure><h2 id="修改作者名">修改作者名</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit --amend --author=<span class="string">'Author Name &lt;email@address.com&gt;'</span></span><br></pre></td></tr></table></figure><h2 id="修改远程仓库的-url">修改远程仓库的 url</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote <span class="built_in">set</span>-url origin &lt;URL&gt;</span><br></pre></td></tr></table></figure><h2 id="增加远程仓库">增加远程仓库</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin &lt;remote-url&gt;</span><br></pre></td></tr></table></figure><h2 id="列出所有远程仓库">列出所有远程仓库</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote</span><br></pre></td></tr></table></figure><h2 id="查看两个星期内的改动">查看两个星期内的改动</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git whatchanged --since=<span class="string">'2 weeks ago'</span></span><br></pre></td></tr></table></figure><h2 id="把-a-分支的某一个-commit放到-b-分支上">把 A 分支的某一个 commit，放到 B 分支上</h2><p>这个过程需要 <code>cherry-pick</code> 命令，<a href="http://sg552.iteye.com/blog/1300713#bc2367928" target="_blank" rel="noopener">参考</a></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout &lt;branch-name&gt; &amp;&amp; git cherry-pick &lt;commit-id&gt;</span><br></pre></td></tr></table></figure><h2 id="给-git-命令起别名">给 git 命令起别名</h2><p>简化命令</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git config --global <span class="built_in">alias</span>.&lt;handle&gt; &lt;<span class="built_in">command</span>&gt;</span><br><span class="line"></span><br><span class="line">比如：git status 改成 git st，这样可以简化命令</span><br><span class="line"></span><br><span class="line">git config --global alias.st status</span><br></pre></td></tr></table></figure><h2 id="存储当前的修改但不用提交-commit">存储当前的修改，但不用提交 commit</h2><p>详解可以参考<a href="http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/00137602359178794d966923e5c4134bc8bf98dfb03aea3000" target="_blank" rel="noopener">廖雪峰老师的 git 教程</a></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git stash</span><br></pre></td></tr></table></figure><h2 id="保存当前状态包括-untracked-的文件">保存当前状态，包括 untracked 的文件</h2><p>untracked 文件：新建的文件</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git stash -u</span><br></pre></td></tr></table></figure><h2 id="展示所有-stashes">展示所有 stashes</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git stash list</span><br></pre></td></tr></table></figure><h2 id="回到某个-stash-的状态">回到某个 stash 的状态</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git stash apply &lt;stash@&#123;n&#125;&gt;</span><br></pre></td></tr></table></figure><h2 id="回到最后一个-stash-的状态并删除这个-stash">回到最后一个 stash 的状态，并删除这个 stash</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git stash pop</span><br></pre></td></tr></table></figure><h2 id="删除所有的-stash">删除所有的 stash</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git stash clear</span><br></pre></td></tr></table></figure><h2 id="从-stash-中拿出某个文件的修改">从 stash 中拿出某个文件的修改</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout &lt;stash@&#123;n&#125;&gt; -- &lt;file-path&gt;</span><br></pre></td></tr></table></figure><h2 id="展示所有-tracked-的文件">展示所有 tracked 的文件</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git ls-files -t</span><br></pre></td></tr></table></figure><h2 id="展示所有-untracked-的文件">展示所有 untracked 的文件</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git ls-files --others</span><br></pre></td></tr></table></figure><h2 id="展示所有忽略的文件">展示所有忽略的文件</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git ls-files --others -i --exclude-standard</span><br></pre></td></tr></table></figure><h2 id="强制删除-untracked-的文件">强制删除 untracked 的文件</h2><p>可以用来删除新建的文件。如果不指定文件文件名，则清空所有工作的 untracked 文件。<code>clean</code> 命令，<strong>注意两点</strong>：</p><ol><li>clean 后，删除的文件无法找回</li><li>不会影响 tracked 的文件的改动，只会删除 untracked 的文件</li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clean &lt;file-name&gt; -f</span><br></pre></td></tr></table></figure><h2 id="强制删除-untracked-的目录">强制删除 untracked 的目录</h2><p>可以用来删除新建的目录，<strong>注意</strong>:这个命令也可以用来删除 untracked 的文件。详情见上一条</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clean &lt;directory-name&gt; -df</span><br></pre></td></tr></table></figure><h2 id="展示简化的-commit-历史">展示简化的 commit 历史</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">log</span> --pretty=oneline --graph --decorate --all</span><br></pre></td></tr></table></figure><h2 id="把某一个分支到导出成一个文件">把某一个分支到导出成一个文件</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git bundle create &lt;file&gt; &lt;branch-name&gt;</span><br></pre></td></tr></table></figure><h2 id="从包中导入分支">从包中导入分支</h2><p>新建一个分支，分支内容就是上面 <code>git bundle create</code> 命令导出的内容</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> repo.bundle &lt;repo-dir&gt; -b &lt;branch-name&gt;</span><br></pre></td></tr></table></figure><h2 id="执行-rebase-之前自动-stash">执行 rebase 之前自动 stash</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git rebase --autostash</span><br></pre></td></tr></table></figure><h2 id="从远程仓库根据-id拉下某一状态到本地分支">从远程仓库根据 ID，拉下某一状态，到本地分支</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git fetch origin pull/&lt;id&gt;/head:&lt;branch-name&gt;</span><br></pre></td></tr></table></figure><h2 id="详细展示一行中的修改">详细展示一行中的修改</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git diff --word-diff</span><br></pre></td></tr></table></figure><h2 id="清除-gitignore-文件中记录的文件">清除 gitignore 文件中记录的文件</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clean -X -f</span><br></pre></td></tr></table></figure><h2 id="展示所有-alias-和-configs">展示所有 alias 和 configs</h2><p><strong>注意：</strong> config 分为：当前目录（local）和全局（golbal）的 config，默认为当前目录的 config</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --<span class="built_in">local</span> --list (当前目录)</span><br><span class="line">git config --global --list (全局)</span><br></pre></td></tr></table></figure><h2 id="展示忽略的文件">展示忽略的文件</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git status --ignored</span><br></pre></td></tr></table></figure><h2 id="commit-历史中显示-branch1-有的但是-branch2-没有-commit">commit 历史中显示 Branch1 有的，但是 Branch2 没有 commit</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">log</span> Branch1 ^Branch2</span><br></pre></td></tr></table></figure><h2 id="在-commit-log-中显示-gpg-签名">在 commit log 中显示 GPG 签名</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">log</span> --show-signature</span><br></pre></td></tr></table></figure><h2 id="删除全局设置">删除全局设置</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global --<span class="built_in">unset</span> &lt;entry-name&gt;</span><br></pre></td></tr></table></figure><h2 id="新建并切换到新分支上同时这个分支没有任何-commit">新建并切换到新分支上，同时这个分支没有任何 commit</h2><p>相当于保存修改，但是重写 commit 历史</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout --orphan &lt;branch-name&gt;</span><br></pre></td></tr></table></figure><h2 id="展示任意分支某一文件的内容">展示任意分支某一文件的内容</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git show &lt;branch-name&gt;:&lt;file-name&gt;</span><br></pre></td></tr></table></figure><h2 id="clone-下来指定的单一分支">clone 下来指定的单一分支</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> -b &lt;branch-name&gt; --single-branch https://github.com/user/repo.git</span><br></pre></td></tr></table></figure><h2 id="clone-最新一次提交">clone 最新一次提交</h2><p>只会 clone 最近一次提交，将减少 clone 时间</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> --depth=1 https://github.com/user/repo.git</span><br></pre></td></tr></table></figure><h2 id="忽略某个文件的改动">忽略某个文件的改动</h2><p>关闭 track 指定文件的改动，也就是 Git 将不会在记录这个文件的改动</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git update-index --assume-unchanged path/to/file</span><br></pre></td></tr></table></figure><p>恢复 track 指定文件的改动</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git update-index --no-assume-unchanged path/to/file</span><br></pre></td></tr></table></figure><h2 id="忽略文件的权限变化">忽略文件的权限变化</h2><p>不再将文件的权限变化视作改动</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config core.fileMode <span class="literal">false</span></span><br></pre></td></tr></table></figure><h2 id="以最后提交的顺序列出所有-git-分支">以最后提交的顺序列出所有 Git 分支</h2><p>最新的放在最上面</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="keyword">for</span>-each-ref --sort=-committerdate --format=<span class="string">'%(refname:short)'</span> refs/heads/</span><br></pre></td></tr></table></figure><h2 id="在-commit-log-中查找相关内容">在 commit log 中查找相关内容</h2><p>通过 grep 查找，given-text：所需要查找的字段</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">log</span> --all --grep=<span class="string">'&lt;given-text&gt;'</span></span><br></pre></td></tr></table></figure><h2 id="把暂存区的指定-file-放到工作区中">把暂存区的指定 file 放到工作区中</h2><p>不添加参数，默认是 <code>-mixed</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset &lt;file-name&gt;</span><br></pre></td></tr></table></figure><h2 id="强制推送">强制推送</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -f &lt;remote-name&gt; &lt;branch-name&gt;</span><br></pre></td></tr></table></figure><h2 id="git-配置-http-和-socks-代理">git 配置 http 和 socks 代理</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config --global https.proxy <span class="string">'http://127.0.0.1:8001'</span>   <span class="comment"># 适用于 privoxy 将 socks 协议转为 http 协议的 http 端口</span></span><br><span class="line">git config --global http.proxy <span class="string">'http://127.0.0.1:8001'</span></span><br><span class="line">git config --global socks.proxy <span class="string">"127.0.0.1:1080"</span></span><br></pre></td></tr></table></figure><h2 id="git-配置-ssh-代理">git 配置 ssh 代理</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ cat ~/.ssh/config</span><br><span class="line">Host gitlab.com</span><br><span class="line">ProxyCommand nc -X 5 -x 127.0.0.1:1080 %h %p    <span class="comment"># 直接使用 shadowsocks 提供的 socks5 代理端口</span></span><br><span class="line"></span><br><span class="line">Host github.com</span><br><span class="line">ProxyCommand nc -X 5 -x 127.0.0.1:1080 %h %p</span><br></pre></td></tr></table></figure><h2 id="一图详解">一图详解</h2><p><img src="http://cdn.hanyajun.com/20190610_022759_git.png" alt=""></p><h2 id="优雅的提交commit信息">优雅的提交Commit信息</h2><p>使用<a href="https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#-git-commit-guidelines" target="_blank" rel="noopener">Angular团队提交规范</a></p><p>主要有以下组成</p><ul><li>标题行: 必填, 描述主要修改类型和内容</li><li>主题内容: 描述为什么修改, 做了什么样的修改, 以及开发的思路等等</li><li>页脚注释: 放 Breaking Changes 或 Closed Issues</li></ul><p>常用的修改项</p><ul><li>type: commit 的类型</li><li>feat: 新特性</li><li>fix: 修改问题</li><li>refactor: 代码重构</li><li>docs: 文档修改</li><li>style: 代码格式修改, 注意不是 css 修改</li><li>test: 测试用例修改</li><li>chore: 其他修改, 比如构建流程, 依赖管理.</li><li>scope: commit 影响的范围, 比如: route, component, utils, build…</li><li>subject: commit 的概述</li><li>body: commit 具体修改内容, 可以分为多行</li><li>footer: 一些备注, 通常是 BREAKING CHANGE 或修复的 bug 的链接.</li></ul><h3 id="使用commitizen代替-git-commit">使用<code>Commitizen</code>代替 git commit</h3><p>可以使用<a href="https://github.com/commitizen/cz-cli" target="_blank" rel="noopener">cz-cli</a>工具代替 <code>git commit</code></p><p>全局安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install -g commitizen cz-conventional-changelog</span><br><span class="line"></span><br><span class="line">echo '&#123; "path": "cz-conventional-changelog" &#125;' &gt; ~/.czrc</span><br></pre></td></tr></table></figure><p>全局安装后使用 <code>git cz</code> 代替 <code>git commit</code>就可以了,如下图</p><p><img src="http://cdn.hanyajun.com/20190610_022946_gitcz.png" alt=""><br>参考文章：<a href="https://github.com/521xueweihan/git-tips" target="_blank" rel="noopener">https://github.com/521xueweihan/git-tips</a><br><br><br>今天是父亲节，祝天下的父亲节日快乐，你们辛苦了。<br><br></p><div align="center">  <iframe  frameborder="0" src="https://v.qq.com/txp/iframe/player.html?vid=l0307ptb3f7" allowfullscreen="true" style="z-index:1;" height="auto" width="auto"></iframe></div><br><br><div><h2 id="推荐文章">推荐文章<span style="font-size:0.45em; color:gray"></span></h2><ul><li><a href="https://xugaoxiang.com/2019/09/12/Hexo博客安装配置/">Hexo博客安装配置</a></li><li><a href="http://xugaoxiang.com/2019/09/12/Hexo博客安装配置/">Hexo博客安装配置</a></li><li><a href="https://kezunlin.me/post/d29c6c94/">git tutorial</a></li></ul></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="git" scheme="https://hanyajun.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>go程序基于阿里云CodePipeline的一次devops实践</title>
    <link href="https://hanyajun.com/devops/code_pipeline_devops/"/>
    <id>https://hanyajun.com/devops/code_pipeline_devops/</id>
    <published>2019-05-29T17:53:00.000Z</published>
    <updated>2019-05-30T02:31:45.157Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="背景">背景</h3><p>最近朋友有个项目代码托管用的码云，测试服务器（阿里云ECS）只有一台，三四个人开发，于是想基于阿里云的<a href="https://www.aliyun.com/product/codepipeline" target="_blank" rel="noopener">CodePipeline</a>快速打造一套自动化cicd的流程,使用docker来进行多套环境部署。</p><h3 id="codepipeline-介绍">CodePipeline 介绍</h3><p>阿里云CodePipeline是兼容Jenkins标准的、提供快速可靠的持续集成与持续交付服务。基于容器技术和阿里云基础服务架构，提供稳定和安全的代码/Docker编译构建，测试，扫描和部署的工具服务，并提供Pipeline As Code的编码级配置模式，满足应用程序和基础设施快速可靠的交付和更新。</p><p><img src="http://cdn.hanyajun.com/20190530_101325_20190530002909490.png" alt=""><br>上面是阿里云的官方介绍，兼容jekins的标准，一次无意的点击出现了下图的图标，感觉就是jenkins的基础上做了一次二次开发。<br><img src="http://cdn.hanyajun.com/20190530_101325_20190530002838950.png" alt=""></p><h3 id="新建构建项目">新建构建项目</h3><p><img src="http://cdn.hanyajun.com/20190530_101326_20190530003308638.png" alt=""></p><h3 id="构建项目基本配置">构建项目基本配置</h3><h4 id="基本信息配置">基本信息配置</h4><p><img src="http://cdn.hanyajun.com/20190530_101326_20190530003652325.png" alt=""><br>由于项目使用到了一些国外的lib，当然选择国内的节点也是可以的，不过在写Dockerfile的时候记得加上代理。</p><h4 id="源码管理配置">源码管理配置</h4><p><img src="http://cdn.hanyajun.com/20190530_101326_20190530003902564.png" alt=""><br>选择合适的代码仓库，也可以是私仓，不过需要配上自己的账号和ssh key相关信息。</p><h4 id="构建配置">构建配置</h4><p><img src="http://cdn.hanyajun.com/20190530_101327_20190530013925448.png" alt=""></p><p>我这里使用的是阿里云的私有的镜像仓库基于Dockerfile来构建镜像，注意配置凭证。<br>![在这里插入图片描述]<img src="http://cdn.hanyajun.com/20190530_101326_20190530004839569.png" alt=""></p><h5 id="项目目录">项目目录</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">gin_demo</span><br><span class="line">├── app</span><br><span class="line">│   └── app.go</span><br><span class="line">├── conf</span><br><span class="line">│   └── app.ini</span><br><span class="line">├── Dockerfile</span><br><span class="line">├── docs</span><br><span class="line">│   └── sql</span><br><span class="line">│       └── mjs.sql</span><br><span class="line">├── go.mod</span><br><span class="line">├── go.sum</span><br><span class="line">├── main.go</span><br><span class="line">├── middleware</span><br><span class="line">│   ├── jwt</span><br><span class="line">│   │   └── jwt.go</span><br><span class="line">│   └── logging</span><br><span class="line">│       └── logger.go</span><br><span class="line">├── mjs.exe</span><br><span class="line">├── models</span><br><span class="line">│   ├── mongo</span><br><span class="line">│   │   └── db.go</span><br><span class="line">│   └── mysql</span><br><span class="line">│       ├── db.go</span><br><span class="line">│       ├── teacher.go</span><br><span class="line">│       └── user.go</span><br><span class="line">├── pkg</span><br><span class="line">│   ├── app</span><br><span class="line">│   │   ├── form.go</span><br><span class="line">│   │   ├── request.go</span><br><span class="line">│   │   └── response.go</span><br><span class="line">│   ├── def</span><br><span class="line">│   │   └── def.go</span><br><span class="line">│   ├── e</span><br><span class="line">│   │   ├── code.go</span><br><span class="line">│   │   ├── def.go</span><br><span class="line">│   │   └── msg.go</span><br><span class="line">│   ├── file</span><br><span class="line">│   │   └── file.go</span><br><span class="line">│   ├── gredis</span><br><span class="line">│   │   └── redis.go</span><br><span class="line">│   ├── logging</span><br><span class="line">│   │   ├── file.go</span><br><span class="line">│   │   └── log.go</span><br><span class="line">│   ├── setting</span><br><span class="line">│   │   └── setting.go</span><br><span class="line">│   ├── upload</span><br><span class="line">│   │   └── image.go</span><br><span class="line">│   └── util</span><br><span class="line">│       ├── jwt.go</span><br><span class="line">│       ├── md5.go</span><br><span class="line">│       ├── pagination.go</span><br><span class="line">│       └── util.go</span><br><span class="line">├── README.en.md</span><br><span class="line">├── README.md</span><br><span class="line">├── routers</span><br><span class="line">│   ├── api</span><br><span class="line">│   │   └── v1</span><br><span class="line">│   └── router.go</span><br><span class="line">├── runtime</span><br><span class="line">│   └── logs</span><br><span class="line">│       ├── log20190528.log</span><br><span class="line">│       └── log20190529.log</span><br><span class="line">└── service</span><br><span class="line">    ├── teacher_service</span><br><span class="line">    │   └── teacher.go</span><br><span class="line">    └── user_service</span><br><span class="line">        └── user.go</span><br></pre></td></tr></table></figure><h5 id="dockerfile">Dockerfile</h5><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> golang:<span class="number">1.12</span>.<span class="number">4</span> as build</span><br><span class="line"></span><br><span class="line"><span class="comment">#ENV GOPROXY https://goproxy.io </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">WORKDIR</span> /go/cache</span><br><span class="line"></span><br><span class="line">ADD go.mod .</span><br><span class="line">ADD go.sum .</span><br><span class="line">RUN go mod download</span><br><span class="line"></span><br><span class="line">WORKDIR /go/release</span><br><span class="line"></span><br><span class="line">ADD . .</span><br><span class="line"></span><br><span class="line">RUN GOOS=linux CGO_ENABLED=0 go build -ldflags="-s -w" -installsuffix cgo -o gin_demo main.go</span><br><span class="line"></span><br><span class="line">FROM scratch as prod</span><br><span class="line"></span><br><span class="line">COPY --from=build /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br><span class="line">COPY --from=build /go/release/gin_demo /</span><br><span class="line">COPY --from=build /go/release/conf ./conf</span><br><span class="line">CMD ["/gin_demo"]</span><br></pre></td></tr></table></figure><p>注：如果选择国内节点构建必须配上代理   ENV GOPROXY <a href="https://goproxy.io" target="_blank" rel="noopener">https://goproxy.io</a></p><h4 id="配置触发器">配置触发器</h4><p><img src="http://cdn.hanyajun.com/20190530_101326_20190530010659696.png" alt=""><br>这里选择一个构建的代码分支，然后点击生成，将生成后的url可以在对应的代码仓库配上webhook之类的配置。选择合适的触发方式。<br><img src="http://cdn.hanyajun.com/20190530_101813_20190530010911216.png" alt=""></p><h4 id="配置部署">配置部署</h4><p><img src="http://cdn.hanyajun.com/20190530_101326_20190530005503735.png" alt=""><br>阿里云构建步骤里面部署到ECS上（不方便）和部署到k8s（收费）都不能满足项目场景需求，不过上面支持shell脚本，于是自己想在朋友的那台阿里云ECS上跑个ci的web server，这里构建完之后就去通知下这个接口，然后去执行一些docker指令的脚本，拉取构建完之后的镜像并且重新启动，启动完之后邮件通知。于是写了这样一个很简单的web server。<br>main</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"log"</span></span><br><span class="line"><span class="string">"net/http"</span></span><br><span class="line"><span class="string">"os/exec"</span></span><br><span class="line"><span class="string">"path"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* @Author:hanyajun</span></span><br><span class="line"><span class="comment">* @Date:2019/5/28 16:44</span></span><br><span class="line"><span class="comment">* @Name:ci_tools</span></span><br><span class="line"><span class="comment">* @Function: ci 工具</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">HandleCi</span><span class="params">(w http.ResponseWriter, req *http.Request)</span></span> &#123;</span><br><span class="line">user := path.Base(req.URL.Path)</span><br><span class="line"><span class="comment">//针对不同开发人员的push拉取不同的镜像和映射不同的端口</span></span><br><span class="line"><span class="keyword">var</span> port <span class="keyword">string</span></span><br><span class="line"><span class="keyword">switch</span> user &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">"zhangsan"</span>:</span><br><span class="line">port = <span class="string">"8088"</span></span><br><span class="line"><span class="keyword">case</span> <span class="string">"lisi"</span>:</span><br><span class="line">port = <span class="string">"8087"</span></span><br><span class="line"><span class="keyword">case</span> <span class="string">"wangmazi"</span>:</span><br><span class="line">port = <span class="string">"8086"</span></span><br><span class="line"><span class="keyword">case</span> <span class="string">"dev"</span>:</span><br><span class="line">port = <span class="string">"8085"</span></span><br><span class="line"><span class="keyword">case</span> <span class="string">"master"</span>:</span><br><span class="line">port = <span class="string">"8084"</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">println</span>(user)</span><br><span class="line">result := Run(user,port)</span><br><span class="line">client:=NewMailClient(<span class="string">"smtp.qq.com"</span>,<span class="number">465</span>,<span class="string">"******@qq.com"</span>,<span class="string">"*********"</span>)<span class="comment">//注意使用465 ssl发送，25端口阿里云ecs禁止了。</span></span><br><span class="line">s:=&amp;SendObject&#123;</span><br><span class="line">ToMails:[]<span class="keyword">string</span>&#123;<span class="string">"******@qq.com"</span>,<span class="string">"******@qq.com"</span>,<span class="string">"******@qq.com"</span>&#125;,</span><br><span class="line">CcMails:[]<span class="keyword">string</span>&#123;<span class="string">"******@qq.com"</span>&#125;,</span><br><span class="line">Object:<span class="string">"cicd流程结果通知"</span>,</span><br><span class="line">ContentType:<span class="string">"text/html"</span>,</span><br><span class="line">Content:user+<span class="string">" has push something to the branch: "</span>+user+<span class="string">"\n"</span>+<span class="string">"result: "</span>+<span class="keyword">string</span>(result),</span><br><span class="line">&#125;</span><br><span class="line">err:=client.SendMail(s)</span><br><span class="line"><span class="keyword">if</span> err!=<span class="literal">nil</span>&#123;</span><br><span class="line"><span class="built_in">println</span>(<span class="string">"send mail fail"</span>,err)</span><br><span class="line">&#125;</span><br><span class="line">_, _ = w.Write(result)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">http.HandleFunc(<span class="string">"/ci/"</span>, HandleCi)</span><br><span class="line">err := http.ListenAndServe(<span class="string">":8080"</span>, <span class="literal">nil</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(<span class="string">"ListenAndServe: "</span>, err)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Run</span><span class="params">(user <span class="keyword">string</span>,port <span class="keyword">string</span>)</span> []<span class="title">byte</span></span> &#123;</span><br><span class="line"></span><br><span class="line">shellPath := <span class="string">"/root/ci/ci.sh"</span></span><br><span class="line">command := exec.Command(shellPath, user,port) </span><br><span class="line">err := command.Start()                   </span><br><span class="line"><span class="keyword">if</span> <span class="literal">nil</span> != err &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line"><span class="keyword">return</span> []<span class="keyword">byte</span>(err.Error())</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(<span class="string">"Process PID:"</span>, command.Process.Pid)</span><br><span class="line">err = command.Wait() <span class="comment">//等待执行完成</span></span><br><span class="line"><span class="keyword">if</span> <span class="literal">nil</span> != err &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line"><span class="keyword">return</span> []<span class="keyword">byte</span>(err.Error())</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(<span class="string">"ProcessState PID:"</span>, command.ProcessState.Pid())</span><br><span class="line"><span class="keyword">return</span> []<span class="keyword">byte</span>(<span class="string">"success"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>mail.go</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"gopkg.in/gomail.v2"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* @Author:15815</span></span><br><span class="line"><span class="comment">* @Date:2019/5/8 17:47</span></span><br><span class="line"><span class="comment">* @Name:mail</span></span><br><span class="line"><span class="comment">* @Function:邮件发送</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Client <span class="keyword">struct</span> &#123;</span><br><span class="line">Host     <span class="keyword">string</span></span><br><span class="line">Port     <span class="keyword">int</span></span><br><span class="line">Mail     <span class="keyword">string</span></span><br><span class="line">Password <span class="keyword">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> SendObject <span class="keyword">struct</span> &#123;</span><br><span class="line">ToMails     []<span class="keyword">string</span></span><br><span class="line">CcMails     []<span class="keyword">string</span></span><br><span class="line">Object      <span class="keyword">string</span></span><br><span class="line">ContentType <span class="keyword">string</span></span><br><span class="line">Content     <span class="keyword">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">NewMailClient</span><span class="params">(host <span class="keyword">string</span>, port <span class="keyword">int</span>, sendMail, password <span class="keyword">string</span>)</span> *<span class="title">Client</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> &amp;Client&#123;</span><br><span class="line">Host:     host,</span><br><span class="line">Port:     port,</span><br><span class="line">Mail:     sendMail,</span><br><span class="line">Password: password,</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(m *Client)</span> <span class="title">SendMail</span><span class="params">(s *SendObject)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">mgs := gomail.NewMessage()</span><br><span class="line">mgs.SetHeader(<span class="string">"From"</span>, m.Mail)</span><br><span class="line">mgs.SetHeader(<span class="string">"To"</span>, s.ToMails...)</span><br><span class="line">mgs.SetHeader(<span class="string">"Cc"</span>, s.CcMails...)</span><br><span class="line">mgs.SetHeader(<span class="string">"Subject"</span>, s.Object)</span><br><span class="line">mgs.SetBody(s.ContentType, s.Content)</span><br><span class="line">d := gomail.NewDialer(m.Host, m.Port, m.Mail, m.Password)</span><br><span class="line"><span class="keyword">if</span> err := d.DialAndSend(mgs); err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Printf(<span class="string">"send mail err:%v"</span>, err)</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="http://ci.sh" target="_blank" rel="noopener">ci.sh</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>!/bin/bash</span><br><span class="line">funCiTools()</span><br><span class="line">&#123;</span><br><span class="line">    docker pull registry.cn-shanghai.aliyuncs.com/***/***:$1</span><br><span class="line">    docker rm -f $1</span><br><span class="line">    docker run -d -p $2:8000 --name $1 registry.cn-shanghai.aliyuncs.com/***/***:$1</span><br><span class="line">&#125;</span><br><span class="line">funCiTools $1 $2</span><br></pre></td></tr></table></figure><p>第一个参数是对应开发人员启动容器的名字以及构建镜像的tag和上面构建的配置一致，第二个参数是映射的端口。<br><strong>构建ci_web_server</strong><br><br>自己的电脑是windows的，朋友的阿里云ecs上又没有go环境，想构建基于linux的二进制程序，于是直接利用docker image 来构建了镜像，一个指令解决问题。<br><a href="http://build.sh" target="_blank" rel="noopener">build.sh</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --rm -i -v `pwd`:/go/src/ci -w /go/src/ci  golang:1.11.5   go build -o ci  ci</span><br></pre></td></tr></table></figure><p><strong>使用nohup直接将ci server放置后台运行。</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup ./ci  &gt;output 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure><h3 id="效果测试">效果测试</h3><p>直接修改点东西提交代码后就等邮件通知了，是不是感觉很爽。<br><img src="http://cdn.hanyajun.com/20190530_101326_2019053001262919.png" alt=""><br>提交完代码后就开始触发构建了。<br><img src="http://cdn.hanyajun.com/20190530_102143_20190530013400694.png" alt=""><br>最后构建完完成后触发ci server 进行deploy，完成邮件通知。<br><img src="http://cdn.hanyajun.com/20190530_102230_20190530013602672.png" alt=""><br>登录到阿里云Ecs上我们发现我们的容器已经启动成功了。<br><img src="http://cdn.hanyajun.com/20190530_101327_20190530014130290.png" alt=""></p>    <div id="aplayer-oARApXki" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="003A0yPO3podbq" data-server="tencent" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="false" data-listmaxheight="340px" data-preload="none" data-theme="#ad7a86"></div><p><br><br><br></p><div><h2 id="推荐文章">推荐文章<span style="font-size:0.45em; color:gray"></span></h2><ul><li><a href="https://hanyajun.com/devops/travis-ci/">如何使用travis-ci自动化构建部署GitHub Pages（gitbook）</a></li><li><a href="https://hanyajun.com/article/github_travis_ci/">github上Go项目使用Travis CI和Docker Hub实现持续集成</a></li><li><a href="https://hanyajun.com/devops/gitbook_coding_ci/">基于Travis CI实现 Gitbook在 Github 和 Coding 的同步部署</a></li></ul></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="devops" scheme="https://hanyajun.com/categories/devops/"/>
    
    
      <category term="devops" scheme="https://hanyajun.com/tags/devops/"/>
    
  </entry>
  
  <entry>
    <title>七牛云文件上传助手</title>
    <link href="https://hanyajun.com/tools/qiniuyun_uoload_tools/"/>
    <id>https://hanyajun.com/tools/qiniuyun_uoload_tools/</id>
    <published>2019-05-25T18:05:00.000Z</published>
    <updated>2019-05-25T18:14:10.007Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h4 id="qiniuyun_upload_tools"><a href="https://github.com/Han-Ya-Jun/qiniuyun_upload_tools" target="_blank" rel="noopener">qiniuyun_upload_tools</a></h4><p>最近写博客发现经常要上传图片到七牛云上去，每次打开网页登录然后上传感觉很慢，windows也没有一个好的上传工具，于是写了这样的一个工具。</p><h4 id="效果">效果</h4><p><img src="https://user-gold-cdn.xitu.io/2019/5/26/16af0222b210bbd5?w=1844&amp;h=974&amp;f=gif&amp;s=1845161" alt=""></p><h4 id="使用方法">使用方法</h4><h5 id="下载程序包点击下载">下载程序包<a href="https://github.com/Han-Ya-Jun/qiniuyun_upload_tools/releases/download/1.0.0/qiniu_upload_tools.zip" target="_blank" rel="noopener">点击下载</a></h5><h5 id="解压后直接在configjson文件里面天上自己七牛云相关的信息">解压后直接在config.json文件里面天上自己七牛云相关的信息。<br></h5><p>config</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"access_key"</span>: <span class="string">"************"</span>, </span><br><span class="line">    <span class="attr">"secret_key"</span>: <span class="string">"***************"</span>, </span><br><span class="line">    <span class="attr">"zone"</span>: <span class="number">0</span>,                                     </span><br><span class="line">    <span class="attr">"Bucket"</span>: <span class="string">"hanyajun"</span>,                        </span><br><span class="line">    <span class="attr">"use_https"</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">"use_cdn_domains"</span>:<span class="literal">false</span>,</span><br><span class="line">    <span class="attr">"domain"</span>: <span class="string">"http://cdn.hanyajun.com/"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：</p><ul><li>zone: 空间对应的机房-- 0:华东, 1:华北, 2:华南, 3:北美</li><li>Bucket：空间的名字</li><li>use_https: 是否使用https域名</li><li>use_cdn_domains: 上传是否使用CDN上传加速</li><li>domain: 绑定的域名</li></ul><h5 id="将自己要上传的图片放到need_upload_data文件夹里面">将自己要上传的图片放到need_upload_data文件夹里面</h5><h5 id="运行程序上传成功即可直接复制粘贴到博客文章中">运行程序上传成功，即可直接复制粘贴到博客文章中</h5><h4 id="to-do">to do</h4><p>尝试实现GUI界面操作，可以批量选择图片然后也可以粘贴图片上传</p>    <div id="aplayer-KYcstZsM" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="000JzzCG3UCUUk" data-server="tencent" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="false" data-listmaxheight="340px" data-preload="none" data-theme="#ad7a86"></div><p><br><br><br></p><div><h2 id="推荐文章">推荐文章<span style="font-size:0.45em; color:gray"></span></h2><ul><li><a href="https://hanyajun.com/tools/gocn_news_push/">爬取GoCn每日新闻并推送到微信/邮箱</a></li><li><a href="https://hanyajun.com/tools/windows_tree_skill/">windows上如何使用tree生成目录树</a></li><li><a href="https://hanyajun.com/tools/qrcode2console/">如何将链接生成二维码或者二维码图片输出到console？</a></li></ul></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="tools" scheme="https://hanyajun.com/categories/tools/"/>
    
    
      <category term="tools" scheme="https://hanyajun.com/tags/tools/"/>
    
  </entry>
  
  <entry>
    <title>基于Travis CI实现 Gitbook在 Github 和 Coding 的同步部署</title>
    <link href="https://hanyajun.com/devops/gitbook_coding_ci/"/>
    <id>https://hanyajun.com/devops/gitbook_coding_ci/</id>
    <published>2019-05-17T16:57:00.000Z</published>
    <updated>2019-05-30T14:41:02.350Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="前言">前言</h3><p>最近发现自己的<a href="https://hanyajun.com">博客</a>在使用vpn的情况下打开很慢，百度站点也抓取失败，于是将自己的博客借助hexo-deploy 插件很容易同步部署到了coding上。只需要在你的hexo配置文件_config.yml的deploy配上coding的coding page项目url(注意将ssh key 设置好)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">- type: git</span><br><span class="line">  repository: </span><br><span class="line">    - git@github.com:Han-Ya-Jun/Han-Ya-Jun.github.io.git</span><br><span class="line">    - git@git.dev.tencent.com:hanyajun0123/hanyajun0123.git</span><br><span class="line">  branch: master</span><br><span class="line">  message: update</span><br><span class="line">- type: baidu_url_submitter</span><br></pre></td></tr></table></figure><p><img src="http://cdn.hanyajun.com/20190517_223401_coding1.png" alt=""></p><p>配置后于是在阿里云的域名解析上新增两条CNAME记录指向 <a href="http://hanyajun0123.coding.me" target="_blank" rel="noopener">hanyajun0123.coding.me</a>，选择默认解析，原来github的解析换成国外的dns解析路线，这样国内的就指向coding，<a href="http://xn--github-vi6j56qdnff53a752c.io" target="_blank" rel="noopener">国外的指向github.io</a><br><img src="http://cdn.hanyajun.com/20190517_223401_coding.png" alt=""><br>访问的时候出现了下面的这种异常（您的链接不是私密链接）<br><img src="http://cdn.hanyajun.com/20190517_223403_coding3.png" alt=""><br>看了下coding的证书申请情况也是一直失败<br><img src="http://cdn.hanyajun.com/20190517_223403_coding4.png" alt=""><br>后来查了下资料发现得先暂停掉原先指向github.io的解析，这个会对与coding page进行校验。后来停掉再次申请ssl证书就成功了，本来以为完美解决了，谁知自己部署在github page的gitbook的项目访问不了，翻墙之后就可以访问了，这个很好解释，不翻墙就解析到了coding上。于是自己又琢磨了下如何基于travis ci实现gitbook在github和coding的自动化ci。如果之前没有尝试过使用travis ci来部署gitbo的可以参考下我之前写的一篇博客<a href="https://hanyajun.com/devops/travis-ci/">《如何使用travis-ci自动化构建部署GitHub Pages（gitbook)》</a></p><h3 id="ci流程">CI流程</h3><p><img src="http://cdn.hanyajun.com/20190518_002929_gitbook_ci.jpg" alt=""></p><h3 id="获取coding访问令牌">获取coding访问令牌</h3><p><img src="http://cdn.hanyajun.com/20190518_003850_token_coding.png" alt=""></p><h3 id="travis添加coding-token环境变量">travis添加coding token环境变量</h3><p>在Travis上原来github部署ci的gitbook项目里面添加访问coding token。<br><img src="http://cdn.hanyajun.com/20190518_004210_coding_token.png" alt=""></p><h3 id="修改travisyaml-文件">修改.travis.yaml 文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">after_script:</span><br><span class="line">   - cd ./_book</span><br><span class="line">   - git init</span><br><span class="line">   - git config user.name &quot;*****&quot; </span><br><span class="line">   - git config user.email &quot;******&quot;</span><br><span class="line">   - git add .</span><br><span class="line">   - git commit -m &quot;Update Gitbook By TravisCI With Build $TRAVIS_BUILD_NUMBER&quot;</span><br><span class="line">   - git push --force --quiet &quot;https://hanyajun0123:$&#123;CODING_TOKEN&#125;@$&#123;CO_REF&#125;&quot; master:master</span><br><span class="line">   - git tag v0.0.$TRAVIS_BUILD_NUMBER -a -m &quot;Auto Taged By TravisCI With Build $TRAVIS_BUILD_NUMBER&quot;</span><br><span class="line">   - git push --quiet &quot;https://hanyajun0123:$&#123;CODING_TOKEN&#125;@$&#123;CO_REF&#125;&quot; master:master --tags</span><br><span class="line"></span><br><span class="line"># git@git.dev.tencent.com:hanyajun0123/coding_basis_review.git</span><br><span class="line">env:</span><br><span class="line"> global:</span><br><span class="line">   # Coding Pages</span><br><span class="line">   - CO_REF: git.dev.tencent.com/hanyajun0123/coding_basis_review.git</span><br></pre></td></tr></table></figure><p><a href="https://github.com/Han-Ya-Jun/coding_basis_review/blob/master/.travis.yml" target="_blank" rel="noopener">完整.travis.yaml文件</a></p><h3 id="触发ci">触发ci</h3><p>修改本地gitbook项目，推送到github上去，就可以粗发ci了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line">Creating a brand new local repo from scratch in dir /tmp/d20190517-7047-qvpbfn/work...</span><br><span class="line">dpl.2</span><br><span class="line">Preparing deploy</span><br><span class="line">dpl.3</span><br><span class="line">Deploying application</span><br><span class="line">Initialized empty Git repository in /tmp/d20190517-7047-qvpbfn/work/.git/</span><br><span class="line">Repo created successfully</span><br><span class="line">Switched to a new branch &apos;gh-pages&apos;</span><br><span class="line">An orphan branch gh-pages created successfully</span><br><span class="line">cd -</span><br><span class="line">cd /tmp/d20190517-7047-qvpbfn/work</span><br><span class="line">Copying /home/travis/build/Han-Ya-Jun/coding_basis_review/_book contents to /tmp/d20190517-7047-qvpbfn/work (workdir: /tmp/d20190517-7047-qvpbfn/work)...</span><br><span class="line">Configuring git committer to be Deployment Bot (from Travis CI) &lt;deploy@travis-ci.org&gt; (workdir: /tmp/d20190517-7047-qvpbfn/work)</span><br><span class="line">Preparing to deploy gh-pages branch to gh-pages (workdir: /tmp/d20190517-7047-qvpbfn/work)</span><br><span class="line">commit 76413d48b1f036c4b9c9b4e3fbad583fa24aa87a</span><br><span class="line">Author: Deployment Bot (from Travis CI) &lt;deploy@travis-ci.org&gt;</span><br><span class="line">Date:   Fri May 17 01:15:08 2019 +0800</span><br><span class="line">    Deploy Han-Ya-Jun/coding_basis_review to github.com/Han-Ya-Jun/coding_basis_review.git:gh-pages</span><br><span class="line"> .travis.yml                                        |  49 ++</span><br><span class="line"> generation                                         |   0</span><br><span class="line"> gitbook/fonts/fontawesome/FontAwesome.otf          | Bin 0 -&gt; 124988 bytes</span><br><span class="line"> gitbook/fonts/fontawesome/fontawesome-webfont.eot  | Bin 0 -&gt; 76518 bytes</span><br><span class="line"> gitbook/fonts/fontawesome/fontawesome-webfont.svg  | 685 +++++++++++++++++++++</span><br><span class="line"> gitbook/fonts/fontawesome/fontawesome-webfont.ttf  | Bin 0 -&gt; 152796 bytes</span><br><span class="line"> gitbook/fonts/fontawesome/fontawesome-webfont.woff | Bin 0 -&gt; 90412 bytes</span><br><span class="line"> .../fonts/fontawesome/fontawesome-webfont.woff2    | Bin 0 -&gt; 71896 bytes</span><br><span class="line"> gitbook/gitbook-plugin-3-ba/plugin.js              |  20 +</span><br><span class="line"> .../gitbook-plugin-back-to-top-button/plugin.css   |  55 ++</span><br><span class="line"> ...</span><br><span class="line"> 51 files changed, 6434 insertions(+)</span><br><span class="line">Doing the git push (workdir: /tmp/d20190517-7047-qvpbfn/work)...</span><br><span class="line">On branch gh-pages</span><br><span class="line">nothing to commit, working tree clean</span><br><span class="line">cd -</span><br><span class="line">App has been pushed</span><br><span class="line">after_script.1</span><br><span class="line">0.01s$ cd ./_book</span><br><span class="line">after_script.2</span><br><span class="line">0.01s$ git init</span><br><span class="line">Initialized empty Git repository in /home/travis/build/Han-Ya-Jun/coding_basis_review/_book/.git/</span><br><span class="line">after_script.3</span><br><span class="line">0.01s$ git config user.name &quot;hanyajun0123&quot;</span><br><span class="line">after_script.4</span><br><span class="line">0.01s$ git config user.email &quot;1581532052@qq.com&quot;</span><br><span class="line">after_script.5</span><br><span class="line">0.05s$ git add .</span><br><span class="line">after_script.6</span><br><span class="line">0.02s$ git commit -m &quot;Update Gitbook By TravisCI With Build $TRAVIS_BUILD_NUMBER&quot;</span><br><span class="line">[master (root-commit) 1c86337] Update Gitbook By TravisCI With Build 10</span><br><span class="line"> 51 files changed, 6434 insertions(+)</span><br><span class="line"> create mode 100644 .travis.yml</span><br><span class="line"> create mode 100644 generation</span><br><span class="line"> create mode 100644 gitbook/fonts/fontawesome/FontAwesome.otf</span><br><span class="line"> create mode 100644 gitbook/fonts/fontawesome/fontawesome-webfont.eot</span><br><span class="line"> create mode 100644 gitbook/fonts/fontawesome/fontawesome-webfont.svg</span><br><span class="line"> create mode 100644 gitbook/fonts/fontawesome/fontawesome-webfont.ttf</span><br><span class="line"> create mode 100644 gitbook/fonts/fontawesome/fontawesome-webfont.woff</span><br><span class="line"> create mode 100644 gitbook/fonts/fontawesome/fontawesome-webfont.woff2</span><br><span class="line"> create mode 100644 gitbook/gitbook-plugin-3-ba/plugin.js</span><br><span class="line"> create mode 100644 gitbook/gitbook-plugin-back-to-top-button/plugin.css</span><br><span class="line"> create mode 100644 gitbook/gitbook-plugin-back-to-top-button/plugin.js</span><br><span class="line"> create mode 100644 gitbook/gitbook-plugin-disqus/plugin.css</span><br><span class="line"> create mode 100644 gitbook/gitbook-plugin-disqus/plugin.js</span><br><span class="line"> create mode 100644 gitbook/gitbook-plugin-donate/plugin.css</span><br><span class="line"> create mode 100644 gitbook/gitbook-plugin-donate/plugin.js</span><br><span class="line"> create mode 100644 gitbook/gitbook-plugin-editlink/plugin.js</span><br><span class="line"> create mode 100644 gitbook/gitbook-plugin-fontsettings/fontsettings.js</span><br><span class="line"> create mode 100644 gitbook/gitbook-plugin-fontsettings/website.css</span><br><span class="line"> create mode 100644 gitbook/gitbook-plugin-ga/plugin.js</span><br><span class="line"> create mode 100644 gitbook/gitbook-plugin-github-buttons/plugin.js</span><br><span class="line"> create mode 100644 gitbook/gitbook-plugin-github-buttons/plugin.js.map</span><br><span class="line"> create mode 100644 gitbook/gitbook-plugin-github/plugin.js</span><br><span class="line"> create mode 100644 gitbook/gitbook-plugin-image-captions/image-captions.css</span><br><span class="line"> create mode 100644 gitbook/gitbook-plugin-page-toc-button/plugin.css</span><br><span class="line"> create mode 100644 gitbook/gitbook-plugin-page-toc-button/plugin.js</span><br><span class="line"> create mode 100644 gitbook/gitbook-plugin-prism/prism-coy.css</span><br><span class="line"> create mode 100644 gitbook/gitbook-plugin-prism/prism-dark.css</span><br><span class="line"> create mode 100644 gitbook/gitbook-plugin-prism/prism-funky.css</span><br><span class="line"> create mode 100644 gitbook/gitbook-plugin-prism/prism-okaidia.css</span><br><span class="line"> create mode 100644 gitbook/gitbook-plugin-prism/prism-solarizedlight.css</span><br><span class="line"> create mode 100644 gitbook/gitbook-plugin-prism/prism-tomorrow.css</span><br><span class="line"> create mode 100644 gitbook/gitbook-plugin-prism/prism-twilight.css</span><br><span class="line"> create mode 100644 gitbook/gitbook-plugin-prism/prism.css</span><br><span class="line"> create mode 100644 gitbook/gitbook-plugin-search-plus/jquery.mark.min.js</span><br><span class="line"> create mode 100644 gitbook/gitbook-plugin-search-plus/search.css</span><br><span class="line"> create mode 100644 gitbook/gitbook-plugin-search-plus/search.js</span><br><span class="line"> create mode 100644 gitbook/gitbook-plugin-sharing/buttons.js</span><br><span class="line"> create mode 100644 gitbook/gitbook-plugin-splitter/splitter.css</span><br><span class="line"> create mode 100644 gitbook/gitbook-plugin-splitter/splitter.js</span><br><span class="line"> create mode 100644 gitbook/gitbook-plugin-tbfed-pagefooter/footer.css</span><br><span class="line"> create mode 100644 gitbook/gitbook.js</span><br><span class="line"> create mode 100644 gitbook/images/apple-touch-icon-precomposed-152.png</span><br><span class="line"> create mode 100644 gitbook/images/favicon.ico</span><br><span class="line"> create mode 100644 gitbook/style.css</span><br><span class="line"> create mode 100644 gitbook/theme.js</span><br><span class="line"> create mode 100644 index.html</span><br><span class="line"> create mode 100644 network/TCP_IP.html</span><br><span class="line"> create mode 100644 network/summary.html</span><br><span class="line"> create mode 100644 package-lock.json</span><br><span class="line"> create mode 100644 search_plus_index.json</span><br><span class="line"> create mode 100644 sitemap.xml</span><br><span class="line">after_script.7</span><br><span class="line">3.87s$ git push --force --quiet &quot;https://hanyajun0123:$&#123;CODING_TOKEN&#125;@$&#123;CO_REF&#125;&quot; master:master</span><br><span class="line">after_script.8</span><br><span class="line">0.01s$ git tag v0.0.$TRAVIS_BUILD_NUMBER -a -m &quot;Auto Taged By TravisCI With Build $TRAVIS_BUILD_NUMBER&quot;</span><br><span class="line">after_script.9</span><br><span class="line">1.65s$ git push --quiet &quot;https://hanyajun0123:$&#123;CODING_TOKEN&#125;@$&#123;CO_REF&#125;&quot; master:master --tags</span><br><span class="line">Done. Your build exited with 0.</span><br></pre></td></tr></table></figure>    <div id="aplayer-eMKUixeN" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="002sun3u2HDgYl" data-server="tencent" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="false" data-listmaxheight="340px" data-preload="none" data-theme="#ad7a86"></div><p><br><br><br></p><div><h2 id="推荐文章">推荐文章<span style="font-size:0.45em; color:gray"></span></h2><ul><li><a href="https://hanyajun.com/devops/travis-ci/">如何使用travis-ci自动化构建部署GitHub Pages（gitbook）</a></li><li><a href="https://hanyajun.com/article/github_travis_ci/">github上Go项目使用Travis CI和Docker Hub实现持续集成</a></li><li><a href="https://hanyajun.com/devops/code_pipeline_devops/">go程序基于阿里云CodePipeline的一次devops实践</a></li></ul></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="devops" scheme="https://hanyajun.com/categories/devops/"/>
    
    
      <category term="devops" scheme="https://hanyajun.com/tags/devops/"/>
    
  </entry>
  
  <entry>
    <title>github上Go项目使用Travis CI和Docker Hub实现持续集成</title>
    <link href="https://hanyajun.com/article/github_travis_ci/"/>
    <id>https://hanyajun.com/article/github_travis_ci/</id>
    <published>2019-05-15T17:44:00.000Z</published>
    <updated>2019-05-17T17:07:49.599Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><img src="http://cdn.hanyajun.com/20190515_235500_go_travers_ci.png" alt=""></p><h3 id="介绍">介绍</h3><p>在本文中，我们将介绍如何使用Github，Travis-CI和Docker Hub创建一个简单的持续集成过程。</p><h3 id="项目">项目</h3><p>这次使用的一个项目是自己写的一个爬虫小程序(<a href="https://github.com/Han-Ya-Jun/news_watch_notice" target="_blank" rel="noopener">https://github.com/Han-Ya-Jun/news_watch_notice</a>)</p><h4 id="项目目录">项目目录</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">news_watch_notice</span><br><span class="line">├── cmd    //main</span><br><span class="line">├── conf</span><br><span class="line">├── dis</span><br><span class="line">├── Dockerfile</span><br><span class="line">├── Makefile</span><br><span class="line">├── pkg</span><br><span class="line">├── qrcode</span><br><span class="line">├── .travis.yml</span><br><span class="line">├── README.md</span><br><span class="line">├── vendor</span><br><span class="line">├── utils</span><br></pre></td></tr></table></figure><h4 id="dockerfile">Dockerfile</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">FROM alpine:3.6</span><br><span class="line"></span><br><span class="line">MAINTAINER hanyajun0123@gmail.com</span><br><span class="line">RUN apk update &amp;&amp; apk add curl bash tree tzdata \</span><br><span class="line">    &amp;&amp; cp -r -f /usr/share/zoneinfo/Hongkong /etc/localtime</span><br><span class="line">ADD news_watch_notice /usr/bin/</span><br><span class="line">ADD news_watch_notice.sha /usr/bin/</span><br><span class="line">CMD [&quot;news_watch_notice&quot;]</span><br></pre></td></tr></table></figure><h4 id="makefile">makefile</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">TARGET=news_watch_notice</span><br><span class="line">PKG=$(TARGET)</span><br><span class="line">TAG=latest</span><br><span class="line">IMAGE_PREFIX?=hanyajun</span><br><span class="line">IMAGE_PREFIX_PRD=hanyajun</span><br><span class="line">TARGET_IMAGE_DEV=$(IMAGE_PREFIX)/$(TARGET):$(TAG)</span><br><span class="line">TARGET_IMAGE_PRD=$(IMAGE_PREFIX_PRD)/$(TARGET):$(TAG)</span><br><span class="line">all: image</span><br><span class="line"></span><br><span class="line">$(TARGET):</span><br><span class="line">CGO_ENABLED=0 go build -o dist/$(TARGET) $(PKG)/cmd</span><br><span class="line"></span><br><span class="line">gitlog:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">target:</span><br><span class="line">mkdir -p dist</span><br><span class="line">git log | head -n 1 &gt; dist/news_watch_notice.sha</span><br><span class="line">docker run --rm -i -v `pwd`:/go/src/$(PKG) \</span><br><span class="line">  -w /go/src/$(PKG) golang:1.11.5 \</span><br><span class="line">  make $(TARGET)</span><br><span class="line"></span><br><span class="line">image-dev: target</span><br><span class="line">cd dist &amp;&amp; cp ../Dockerfile ./ &amp;&amp; \</span><br><span class="line">docker build -t $(TARGET_IMAGE_DEV) .</span><br><span class="line"></span><br><span class="line">push-dev:</span><br><span class="line">docker push $(TARGET_IMAGE_DEV)</span><br><span class="line"></span><br><span class="line">image-prd: target</span><br><span class="line">cd dist &amp;&amp; cp ../Dockerfile ./ &amp;&amp; \</span><br><span class="line">docker build -t $(TARGET_IMAGE_PRD) .</span><br><span class="line"></span><br><span class="line">push-prd:</span><br><span class="line">docker push $(TARGET_IMAGE_PRD)</span><br><span class="line">clean:</span><br><span class="line">rm -rf dist</span><br><span class="line"></span><br><span class="line">.PHONY: image target clean push $(TARGET)</span><br></pre></td></tr></table></figure><h4 id="travisyml">.travis.yml</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">language: go</span><br><span class="line">go:          # 语言版本号</span><br><span class="line">  - &quot;1.11.5&quot;   # 默认使用最新版本,注意，需要 &quot;1.10&quot; 版本的时候必须表示为字符串形式，如果写成 1.10 则会使用 1.1 版本;x表示对应前缀的最新版本</span><br><span class="line">services:</span><br><span class="line">  - docker  #需要的docker环境</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">install:</span><br><span class="line">  - make image-dev  #build</span><br><span class="line"></span><br><span class="line">script:</span><br><span class="line">  - echo &quot;$DOCKER_PASSWORD&quot; | docker login -u &quot;$DOCKER_USERNAME&quot; --password-stdin</span><br><span class="line">  - make push-dev  # push</span><br></pre></td></tr></table></figure><h3 id="travis的配置httpstravis-ciorg">travis的配置(<a href="https://travis-ci.org" target="_blank" rel="noopener">https://travis-ci.org</a>)</h3><h4 id="打开项目ci开关">打开项目ci开关</h4><p><img src="http://cdn.hanyajun.com/20190516_003323_travis_ci1.png" alt=""></p><h4 id="设置docker-hub的用户和密码环境变量push需要登录认证">设置docker hub的用户和密码环境变量（push需要登录认证）</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">DOCKER_PASSWORD</span><br><span class="line"></span><br><span class="line">DOCKER_USERNAME</span><br></pre></td></tr></table></figure><p><img src="http://cdn.hanyajun.com/20190516_003732_docker_user.png" alt=""></p><h3 id="提交项目代码触发ci">提交项目代码触发ci</h3><p><img src="http://cdn.hanyajun.com/20190516_004430_ci_success.png" alt=""></p><h4 id="部分ci日志">部分ci日志</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br></pre></td><td class="code"><pre><span class="line">docker_mtu</span><br><span class="line">docker stop/waiting</span><br><span class="line">docker start/running, process 3638</span><br><span class="line">services</span><br><span class="line">0.02s$ sudo service docker start</span><br><span class="line">start: Job is already running: docker</span><br><span class="line">Updating gimme</span><br><span class="line">git.checkout</span><br><span class="line">0.85s$ git clone --depth=50 --branch=master https://github.com/Han-Ya-Jun/news_watch_notice.git Han-Ya-Jun/news_watch_notice</span><br><span class="line">Cloning into &apos;Han-Ya-Jun/news_watch_notice&apos;...</span><br><span class="line">$ cd Han-Ya-Jun/news_watch_notice</span><br><span class="line">$ git checkout -qf e05633a1c6e0c3289c85aedf28461b718fe1af13</span><br><span class="line">$ travis_export_go 1.11.5 github.com/Han-Ya-Jun/news_watch_notice</span><br><span class="line">Setting environment variables from repository settings</span><br><span class="line">$ export DOCKER_PASSWORD=[secure]</span><br><span class="line">$ export DOCKER_USERNAME=[secure]</span><br><span class="line">$ export GOBIN=$GOPATH/src/bin</span><br><span class="line">6.93s$ travis_setup_go</span><br><span class="line">go version go1.11.5 linux/amd64</span><br><span class="line">$ export GOPATH=&quot;/home/travis/gopath&quot;</span><br><span class="line">$ export PATH=&quot;/home/travis/gopath/bin:/home/travis/.gimme/versions/go1.11.5.linux.amd64/bin:/home/travis/bin:/home/travis/bin:/home/travis/.local/bin:/opt/pyenv/shims:/home/travis/.phpenv/shims:/home/travis/perl5/perlbrew/bin:/home/travis/.nvm/versions/node/v8.9.1/bin:/home/travis/.kiex/elixirs/elixir-1.4.5/bin:/home/travis/.kiex/bin:/home/travis/.rvm/gems/ruby-2.4.1/bin:/home/travis/.rvm/gems/ruby-2.4.1@global/bin:/home/travis/.rvm/rubies/ruby-2.4.1/bin:/home/travis/gopath/bin:/home/travis/.gimme/versions/go1.7.4.linux.amd64/bin:/usr/local/phantomjs/bin:/usr/local/phantomjs:/usr/local/neo4j-3.2.7/bin:/usr/local/maven-3.5.2/bin:/usr/local/cmake-3.9.2/bin:/usr/local/clang-5.0.0/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/home/travis/.rvm/bin:/home/travis/.phpenv/bin:/opt/pyenv/bin:/home/travis/.yarn/bin&quot;</span><br><span class="line">$ export GO111MODULE=&quot;auto&quot;</span><br><span class="line">$ gimme version</span><br><span class="line">v1.5.3</span><br><span class="line">$ go version</span><br><span class="line">go version go1.11.5 linux/amd64</span><br><span class="line">go.env</span><br><span class="line">$ go env</span><br><span class="line">GOARCH=&quot;amd64&quot;</span><br><span class="line">GOBIN=&quot;/home/travis/gopath/src/bin&quot;</span><br><span class="line">GOCACHE=&quot;/home/travis/.cache/go-build&quot;</span><br><span class="line">GOEXE=&quot;&quot;</span><br><span class="line">GOFLAGS=&quot;&quot;</span><br><span class="line">GOHOSTARCH=&quot;amd64&quot;</span><br><span class="line">GOHOSTOS=&quot;linux&quot;</span><br><span class="line">GOOS=&quot;linux&quot;</span><br><span class="line">GOPATH=&quot;/home/travis/gopath&quot;</span><br><span class="line">GOPROXY=&quot;&quot;</span><br><span class="line">GORACE=&quot;&quot;</span><br><span class="line">GOROOT=&quot;/home/travis/.gimme/versions/go1.11.5.linux.amd64&quot;</span><br><span class="line">GOTMPDIR=&quot;&quot;</span><br><span class="line">GOTOOLDIR=&quot;/home/travis/.gimme/versions/go1.11.5.linux.amd64/pkg/tool/linux_amd64&quot;</span><br><span class="line">GCCGO=&quot;gccgo&quot;</span><br><span class="line">CC=&quot;gcc&quot;</span><br><span class="line">CXX=&quot;g++&quot;</span><br><span class="line">CGO_ENABLED=&quot;1&quot;</span><br><span class="line">GOMOD=&quot;&quot;</span><br><span class="line">CGO_CFLAGS=&quot;-g -O2&quot;</span><br><span class="line">CGO_CPPFLAGS=&quot;&quot;</span><br><span class="line">CGO_CXXFLAGS=&quot;-g -O2&quot;</span><br><span class="line">CGO_FFLAGS=&quot;-g -O2&quot;</span><br><span class="line">CGO_LDFLAGS=&quot;-g -O2&quot;</span><br><span class="line">PKG_CONFIG=&quot;pkg-config&quot;</span><br><span class="line">GOGCCFLAGS=&quot;-fPIC -m64 -pthread -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build083711362=/tmp/go-build -gno-record-gcc-switches&quot;</span><br><span class="line">install</span><br><span class="line">43.66s$ make image-dev</span><br><span class="line">mkdir -p dist</span><br><span class="line">git log | head -n 1 &gt; dist/news_watch_notice.sha</span><br><span class="line">docker run --rm -i -v `pwd`:/go/src/news_watch_notice \</span><br><span class="line">  -w /go/src/news_watch_notice golang:1.11.5 \</span><br><span class="line">  make news_watch_notice</span><br><span class="line">Unable to find image &apos;golang:1.11.5&apos; locally</span><br><span class="line">1.11.5: Pulling from library/golang</span><br><span class="line">22dbe790f715: Pulling fs layer</span><br><span class="line">0250231711a0: Pulling fs layer</span><br><span class="line">6fba9447437b: Pulling fs layer</span><br><span class="line">c2b4d327b352: Pulling fs layer</span><br><span class="line">619f4932b7ea: Pulling fs layer</span><br><span class="line">e2fd6cbd3c6f: Pulling fs layer</span><br><span class="line">1d96446d2b20: Pulling fs layer</span><br><span class="line">c2b4d327b352: Waiting</span><br><span class="line">e2fd6cbd3c6f: Waiting</span><br><span class="line">1d96446d2b20: Waiting</span><br><span class="line">619f4932b7ea: Waiting</span><br><span class="line">6fba9447437b: Verifying Checksum</span><br><span class="line">6fba9447437b: Download complete</span><br><span class="line">0250231711a0: Download complete</span><br><span class="line">22dbe790f715: Verifying Checksum</span><br><span class="line">22dbe790f715: Download complete</span><br><span class="line">c2b4d327b352: Verifying Checksum</span><br><span class="line">c2b4d327b352: Download complete</span><br><span class="line">619f4932b7ea: Verifying Checksum</span><br><span class="line">619f4932b7ea: Download complete</span><br><span class="line">1d96446d2b20: Verifying Checksum</span><br><span class="line">1d96446d2b20: Download complete</span><br><span class="line">e2fd6cbd3c6f: Verifying Checksum</span><br><span class="line">e2fd6cbd3c6f: Download complete</span><br><span class="line">22dbe790f715: Pull complete</span><br><span class="line">0250231711a0: Pull complete</span><br><span class="line">6fba9447437b: Pull complete</span><br><span class="line">c2b4d327b352: Pull complete</span><br><span class="line">619f4932b7ea: Pull complete</span><br><span class="line">e2fd6cbd3c6f: Pull complete</span><br><span class="line">1d96446d2b20: Pull complete</span><br><span class="line">Digest: sha256:342872745847966ab630e9cc5b6980ed3fe7f4e3ea44b10efac995575730c9b8</span><br><span class="line">Status: Downloaded newer image for golang:1.11.5</span><br><span class="line">CGO_ENABLED=0 go build -o dist/news_watch_notice news_watch_notice/cmd</span><br><span class="line">cd dist &amp;&amp; cp ../Dockerfile ./ &amp;&amp; \</span><br><span class="line">docker build -t [secure]/news_watch_notice:latest .</span><br><span class="line">Sending build context to Docker daemon  14.78MB</span><br><span class="line">Step 1/6 : FROM alpine:3.6</span><br><span class="line">3.6: Pulling from library/alpine</span><br><span class="line">5a3ea8efae5d: Pulling fs layer</span><br><span class="line">5a3ea8efae5d: Verifying Checksum</span><br><span class="line">5a3ea8efae5d: Download complete</span><br><span class="line">5a3ea8efae5d: Pull complete</span><br><span class="line">Digest: sha256:ee0c0e7b6b20b175f5ffb1bbd48b41d94891b0b1074f2721acb008aafdf25417</span><br><span class="line">Status: Downloaded newer image for alpine:3.6</span><br><span class="line"> ---&gt; 43773d1dba76</span><br><span class="line">Step 2/6 : MAINTAINER [secure]0123@gmail.com</span><br><span class="line"> ---&gt; Running in 1f4d4d0db1cb</span><br><span class="line"> ---&gt; 0eadcccd5d22</span><br><span class="line">Removing intermediate container 1f4d4d0db1cb</span><br><span class="line">Step 3/6 : RUN apk update &amp;&amp; apk add curl bash tree tzdata     &amp;&amp; cp -r -f /usr/share/zoneinfo/Hongkong /etc/localtime</span><br><span class="line"> ---&gt; Running in 7f859dd06afc</span><br><span class="line">fetch http://dl-cdn.alpinelinux.org/alpine/v3.6/main/x86_64/APKINDEX.tar.gz</span><br><span class="line">fetch http://dl-cdn.alpinelinux.org/alpine/v3.6/community/x86_64/APKINDEX.tar.gz</span><br><span class="line">v3.6.5-39-gbdcdc921e8 [http://dl-cdn.alpinelinux.org/alpine/v3.6/main]</span><br><span class="line">v3.6.5-34-gf0ba0b43d5 [http://dl-cdn.alpinelinux.org/alpine/v3.6/community]</span><br><span class="line">OK: 8442 distinct packages available</span><br><span class="line">(1/11) Installing ncurses-terminfo-base (6.0_p20171125-r1)</span><br><span class="line">(2/11) Installing ncurses-terminfo (6.0_p20171125-r1)</span><br><span class="line">(3/11) Installing ncurses-libs (6.0_p20171125-r1)</span><br><span class="line">(4/11) Installing readline (6.3.008-r5)</span><br><span class="line">(5/11) Installing bash (4.3.48-r1)</span><br><span class="line">Executing bash-4.3.48-r1.post-install</span><br><span class="line">(6/11) Installing ca-certificates (20161130-r2)</span><br><span class="line">(7/11) Installing libssh2 (1.8.2-r0)</span><br><span class="line">(8/11) Installing libcurl (7.61.1-r2)</span><br><span class="line">(9/11) Installing curl (7.61.1-r2)</span><br><span class="line">(10/11) Installing tree (1.7.0-r0)</span><br><span class="line">(11/11) Installing tzdata (2019a-r0)</span><br><span class="line">Executing busybox-1.26.2-r11.trigger</span><br><span class="line">Executing ca-certificates-20161130-r2.trigger</span><br><span class="line">OK: 17 MiB in 24 packages</span><br><span class="line"> ---&gt; f923b8dbfbf2</span><br><span class="line">Removing intermediate container 7f859dd06afc</span><br><span class="line">Step 4/6 : ADD news_watch_notice /usr/bin/</span><br><span class="line"> ---&gt; a855f5307179</span><br><span class="line">Step 5/6 : ADD news_watch_notice.sha /usr/bin/</span><br><span class="line"> ---&gt; 9014ba35ce0f</span><br><span class="line">Step 6/6 : CMD news_watch_notice</span><br><span class="line"> ---&gt; Running in 109449b18721</span><br><span class="line"> ---&gt; acb6623feb46</span><br><span class="line">Removing intermediate container 109449b18721</span><br><span class="line">Successfully built acb6623feb46</span><br><span class="line">Successfully tagged [secure]/news_watch_notice:latest</span><br><span class="line">0.49s$ echo &quot;$DOCKER_PASSWORD&quot; | docker login -u &quot;$DOCKER_USERNAME&quot; --password-stdin</span><br><span class="line">Login Succeeded</span><br><span class="line">The command &quot;echo &quot;$DOCKER_PASSWORD&quot; | docker login -u &quot;$DOCKER_USERNAME&quot; --password-stdin&quot; exited with 0.</span><br><span class="line">5.21s$ make push-dev</span><br><span class="line">docker push [secure]/news_watch_notice:latest</span><br><span class="line">The push refers to a repository [docker.io/[secure]/news_watch_notice]</span><br><span class="line">c0546ad83870: Preparing</span><br><span class="line">869b27ab7e53: Preparing</span><br><span class="line">47b50a8202a0: Preparing</span><br><span class="line">721384ec99e5: Preparing</span><br><span class="line">721384ec99e5: Layer already exists</span><br><span class="line">c0546ad83870: Pushed</span><br><span class="line">47b50a8202a0: Pushed</span><br><span class="line">869b27ab7e53: Pushed</span><br><span class="line">latest: digest: sha256:74a706f3f8b5b2ead4a7722ca72d8f1eaa450801847662402e4e3e34f4d73158 size: 1157</span><br><span class="line">The command &quot;make push-dev&quot; exited with 0.</span><br></pre></td></tr></table></figure><h4 id="成功将项目打包成image并推送到docker-hub上">成功将项目打包成image并推送到docker hub上</h4><p><img src="http://cdn.hanyajun.com/20190516_004839_docker_hub.png" alt=""></p>    <div id="aplayer-huHRaUtU" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="0028U15R4cIDQZ" data-server="tencent" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="false" data-listmaxheight="340px" data-preload="none" data-theme="#ad7a86"></div><p><br><br><br></p><div><h2 id="推荐文章">推荐文章<span style="font-size:0.45em; color:gray"></span></h2><ul><li><a href="https://hanyajun.com/devops/travis-ci/">如何使用travis-ci自动化构建部署GitHub Pages（gitbook）</a></li><li><a href="https://hanyajun.com/devops/code_pipeline_devops/">go程序基于阿里云CodePipeline的一次devops实践</a></li><li><a href="https://hanyajun.com/devops/gitbook_coding_ci/">基于Travis CI实现 Gitbook在 Github 和 Coding 的同步部署</a></li></ul></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="devops" scheme="https://hanyajun.com/tags/devops/"/>
    
  </entry>
  
  <entry>
    <title>windows上如何使用tree生成目录树</title>
    <link href="https://hanyajun.com/tools/windows_tree_skill/"/>
    <id>https://hanyajun.com/tools/windows_tree_skill/</id>
    <published>2019-05-15T17:41:00.000Z</published>
    <updated>2019-05-15T17:54:29.359Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="前言">前言</h3><p>我们经常在写博客或者项目设计文档时需要列出项目的结构树。我们下可以使用tree列出项目结构，如下面这种：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">news_watch_notice</span><br><span class="line">├── cmd    //main</span><br><span class="line">├── conf</span><br><span class="line">├── dis</span><br><span class="line">├── Dockerfile</span><br><span class="line">├── Makefile</span><br><span class="line">├── pkg</span><br><span class="line">├── qrcode</span><br><span class="line">├── .travis.yml</span><br><span class="line">├── README.md</span><br><span class="line">├── vendor</span><br><span class="line">├── utils</span><br></pre></td></tr></table></figure><h3 id="使用windows自带的tree">使用windows自带的tree</h3><p>windows提供了一个tree命令可供我们使用，但是不太好用。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">TREE [drive:][path] [/F] [/A]</span><br><span class="line"></span><br><span class="line">   /F   显示每个文件夹中文件的名称。</span><br><span class="line">   /A   使用 ASCII 字符，而不使用扩展字符。</span><br></pre></td></tr></table></figure><p>D:\dev\gopath\src\news_watch_notice&gt;tree /a</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">文件夹 PATH 列表</span><br><span class="line">卷序列号为 989E-DB7E</span><br><span class="line">D:.</span><br><span class="line">+---.idea</span><br><span class="line">+---cmd</span><br><span class="line">|   \---qrcode</span><br><span class="line">+---conf</span><br><span class="line">+---dis</span><br><span class="line">|   \---qrcode</span><br><span class="line">+---pkg</span><br><span class="line">|   +---mail</span><br><span class="line">|   +---reptile</span><br><span class="line">|   \---wechat</span><br><span class="line">+---qrcode</span><br><span class="line">+---utils</span><br></pre></td></tr></table></figure><p>D:\dev\gopath\src\news_watch_notice&gt;tree /f</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">文件夹 PATH 列表</span><br><span class="line">卷序列号为 989E-DB7E</span><br><span class="line">D:.</span><br><span class="line">│  .gitignore</span><br><span class="line">│  .travis.yml</span><br><span class="line">│  Dockerfile</span><br><span class="line">│  Makefile</span><br><span class="line">│  README.md</span><br><span class="line">│  tree.md</span><br><span class="line">│</span><br><span class="line">├─.idea</span><br><span class="line">│      .name</span><br><span class="line">│      misc.xml</span><br><span class="line">│      modules.xml</span><br><span class="line">│      news_watch_notice.iml</span><br><span class="line">│      vcs.xml</span><br><span class="line">│      workspace.xml</span><br><span class="line">│</span><br><span class="line">├─cmd</span><br><span class="line">│  │  news_watch_notice.go</span><br><span class="line">│  │</span><br><span class="line">│  └─qrcode</span><br><span class="line">│          qrcode.jpg</span><br></pre></td></tr></table></figure><p>可以看到确实按照我们想要的结构输出了，但是只有两个命令的使用并不能满足我们日常的需要，比如我们想忽略某个文件，想把生成的树状结构输出的一个文件中又该如何操作.</p><h3 id="使用基于node的tree-node-cli">使用基于node的tree-node-cli</h3><h4 id="要想使用这些命令我们需要做一些准备">要想使用这些命令，我们需要做一些准备</h4><ul><li>nodejs安装，可以戳<a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">这里</a>(建议使用LTS的稳定版本，另nodejs自带了npm安装包管理器)</li></ul><h4 id="安装tree-node-cli">安装tree-node-cli</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#安装tree-node-cli模块包</span><br><span class="line">npm install -g tree-node-cli</span><br></pre></td></tr></table></figure><h4 id="使用命令">使用命令</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ tree --help</span><br><span class="line">Usage: tree [options]</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">  -V, --version             output the version number</span><br><span class="line">  -a, --all-files           All files, include hidden files, are printed.</span><br><span class="line">  --dirs-first              List directories before files.</span><br><span class="line">  -d, --dirs-only           List directories only.</span><br><span class="line">  -I, --exclude [patterns]  Exclude files that match the pattern. | separates alternate patterns. Wrap your entire pattern in double quotes. E.g. `&quot;node_modules|coverage&quot;.</span><br><span class="line">  -L, --max-depth &lt;n&gt;       Max display depth of the directory tree.</span><br><span class="line">  -r, --reverse             Sort the output in reverse alphabetic order.</span><br><span class="line">  -F, --trailing-slash      Append a &apos;/&apos; for directories.</span><br><span class="line">  -h, --help                output usage information</span><br></pre></td></tr></table></figure><p>tree -d 只显示文件夹；</p><ul><li>tree -L n 显示项目的层级。n表示层级数。比如想要显示项目三层结构，可以用tree -l 3；</li><li>tree -I pattern 用于过滤不想要显示的文件或者文件夹。比如你想要过滤项目中的vendor文件夹，可以使用tree -I “vendor”；</li><li>tree &gt; <a href="http://tree.md" target="_blank" rel="noopener">tree.md</a> 将项目结构输出到tree.md这个文件。<br></li></ul><p>举例：如果我们要显示某个项目下3层的所有文件结构，同时又过滤node_modules文件夹，<a href="http://xn--tree-ze9f8kj9itq6c8k6e.md" target="_blank" rel="noopener">最后输出到tree.md</a>，可以这么写</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ tree -L 3 -I &quot;vendor&quot; &gt; tree.md</span><br></pre></td></tr></table></figure><p>结果：<a href="http://tree.md" target="_blank" rel="noopener">tree.md</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">news_watch_notice</span><br><span class="line">├── cmd</span><br><span class="line">│   ├── news_watch_notice.go</span><br><span class="line">│   └── qrcode</span><br><span class="line">│       └── qrcode.jpg</span><br><span class="line">├── conf</span><br><span class="line">│   └── conf.conf</span><br><span class="line">├── dis</span><br><span class="line">│   ├── news_watch_notice</span><br><span class="line">│   └── qrcode</span><br><span class="line">│       └── qrcode.jpg</span><br><span class="line">├── Dockerfile</span><br><span class="line">├── Makefile</span><br><span class="line">├── pkg</span><br><span class="line">│   ├── mail</span><br><span class="line">│   │   └── mail.go</span><br><span class="line">│   ├── reptile</span><br><span class="line">│   │   └── reptile.go</span><br><span class="line">│   └── wechat</span><br><span class="line">│       └── wechat.go</span><br><span class="line">├── qrcode</span><br><span class="line">│   └── qrcode.jpg</span><br><span class="line">├── README.md</span><br><span class="line">├── tree.md</span><br><span class="line">├── utils</span><br><span class="line">│   └── common_utils.go</span><br></pre></td></tr></table></figure>    <div id="aplayer-lrcmRjDb" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="003iTLLw3X7eOP" data-server="tencent" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="false" data-listmaxheight="340px" data-preload="none" data-theme="#ad7a86"></div><p><br><br></p><div><h2 id="推荐文章">推荐文章<span style="font-size:0.45em; color:gray"></span></h2><ul><li><a href="https://hanyajun.com/tools/gocn_news_push/">爬取GoCn每日新闻并推送到微信/邮箱</a></li><li><a href="https://hanyajun.com/tools/qiniuyun_uoload_tools/">七牛云文件上传助手</a></li><li><a href="https://hanyajun.com/tools/qrcode2console/">如何将链接生成二维码或者二维码图片输出到console？</a></li></ul></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="tools" scheme="https://hanyajun.com/categories/tools/"/>
    
    
      <category term="tools" scheme="https://hanyajun.com/tags/tools/"/>
    
  </entry>
  
  <entry>
    <title>go复盘笔记--go语言介绍</title>
    <link href="https://hanyajun.com/golang/golang_introduction/"/>
    <id>https://hanyajun.com/golang/golang_introduction/</id>
    <published>2019-05-13T19:33:00.000Z</published>
    <updated>2019-05-13T19:37:33.861Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h4 id="什么是go">什么是Go?</h4><p>Go是一门并发支持 、垃圾回收的编译型系统编程语言，旨在创<br>造一门具有在静态编译语言的 高性能 和动态语言的 高效开发 之间拥有<br>良好平衡点的一门编程语言</p><h4 id="go语言发展历史">Go语言发展历史</h4><p>Go，全称golang，是Google开发的一种静态强类型、编译型、并发型并具有垃圾回收功能的编程语言。 Go从2007年末由Robert Griesemer、Rob Pike、Ken Thompson（C语言发明者）主持开发，于2009年11月正式宣布成为开放源代码项目，并在Linux及Mac OS X平台上进行了实现，后续增加了Windows平台的实现。2012年初，Go语言官方发布了Go 1.0稳定版本，目前Go语言基于1.x每半年发布一个版本。</p><p><img src="http://cdn.hanyajun.com/20190513_234208_go_version.png" alt=""></p><h4 id="语言特性">语言特性</h4><ul><li>静态类型和编译型</li><li>原生的并发编程</li><li>高效的垃圾回收机制</li><li>快速编译和运行（同时解决C语言中头文件太多的问题）</li><li>跨平台</li><li>多编程范式：支持函数式编程，函数类型为第一类型，可以方便地传递和赋值。此外，还支持面向对象编程，有接口类型和实现类型的概念，但用嵌入替代了继承。</li><li>丰富的标准库。</li></ul><h4 id="go语言优势">Go语言优势</h4><ol><li>脚本化的语法；开发效率高，容易上手</li><li>静态类型+编译型，程序运行速度有保障；静态类型+编译型语言相对于动态类型+解释型语言的效率高</li><li>原生的支持并发编程；降低开发、维护成本/程序可以更好的执行</li><li>对于云原生支持比较好，容器化，微服务化比较容易。</li></ol><h4 id="go擅长领域">Go擅长领域</h4><p>Go 语言被设计成一门应用于搭载 Web 服务器，存储集群或类似用途的巨型中央服务器的系统编程语言。<br>对于高性能分布式系统领域而言，Go语言无疑比大多数其它语言有着更高的开发效率。它提供了海量并行的支持，这对于游戏服务端的开发而言是再好不过了。</p><p>Go语言主要用途如下：</p><ol><li>服务器编程，如处理日志、数据打包、虚拟机处理、文件系统等</li><li>分布式系统，数据库代理器等</li><li>网络编程，如Web应用、API应用、下载应用</li><li>内存数据库，如groupcache、couchbase的部分组建</li><li>云平台，目前国外很多云平台在采用Go开发，CloudFoundy的部分组建，前VMare的技术总监自己出来搞的apcera云平台。</li></ol><h4 id="go语言的缺点">GO语言的缺点</h4><ol><li>它不支持泛型，即使有很多关于它的讨论。可能也在议程当中，期待那一天的到来。</li><li>使用这种编程语言分发的软件包非常有用，但Go在传统意义上并不是面向对象的。</li><li>缺少一些库，尤其是UI工具包。</li></ol><h4 id="使用go语言开发的流行应用">使用Go语言开发的流行应用</h4><ul><li><a href="https://github.com/docker/docker-ce" target="_blank" rel="noopener">Docker</a>：一组用于部署Linux容器的工具</li><li><a href="https://github.com/openshift/origin" target="_blank" rel="noopener">Openshift</a>：由Red Hat提供的云计算平台即服务。</li><li><a href="https://github.com/kubernetes/kubernetes/" target="_blank" rel="noopener">Kubernetes</a>：无缝自动化部署流程的未来</li><li><a href="https://github.com/pingcap/tidb" target="_blank" rel="noopener">Tidb</a>： 开源分布式关系型数据库。</li><li><a href="https://github.com/influxdata/influxdb" target="_blank" rel="noopener">InfluxDB</a>：是由InfluxData开发的开源时间序列数据库。</li><li><a href="https://github.com/etcd-io/etcd" target="_blank" rel="noopener">Etcd</a>：分布式的键值对数据存储系统，提供共享配置、服务的注册和发现。</li></ul><h4 id="使用go语言的公司">使用Go语言的公司</h4><ul><li><strong>Google</strong></li><li><strong>Facebook</strong></li><li><strong>腾讯</strong>（腾讯音乐）</li><li><strong>百度</strong></li><li><strong>蚂蚁金服</strong></li><li><strong>京东</strong>（消息推送系统、云存储）</li><li><strong>小米</strong>（<a href="http://open-falcon.com/%EF%BC%89%E5%B0%8F%E7%B1%B3%E4%BA%92%E5%A8%B1%E3%80%81%E5%B0%8F%E7%B1%B3%E5%95%86%E5%9F%8E%E3%80%81%E5%B0%8F%E7%B1%B3%E8%A7%86%E9%A2%91%E3%80%81%E5%B0%8F%E7%B1%B3%E7%94%9F%E6%80%81%E9%93%BE%E7%AD%89%E5%9B%A2%E9%98%9F%E9%83%BD%E5%9C%A8%E4%BD%BF%E7%94%A8Golang%E3%80%82" target="_blank" rel="noopener">http://open-falcon.com/）小米互娱、小米商城、小米视频、小米生态链等团队都在使用Golang。</a></li><li><strong>七牛云</strong></li><li><strong>bilibili</strong></li><li><strong>今日头条</strong></li><li><strong>美团</strong></li><li><strong>滴滴</strong></li><li><strong>快手</strong></li><li><strong>英语流利说</strong></li></ul><h4 id="gopath">GOPATH</h4><ol><li><strong>src目录</strong>： 用于以代码包的显示组织并保存go源码文件。</li><li><strong>pkg目录</strong>: 用于存放通过go install 安装后的代码包的归档文件。</li><li><strong>bin目录</strong>: 与pkg相似，在通过go install 命令安装后生成的可执行文件。</li></ol><h4 id="包导入">包导入</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span>(</span><br><span class="line">. <span class="string">"github.com/Han-Ya-Jun/***"</span></span><br><span class="line">_ <span class="string">"github.com/Han-Ya-Jun/***"</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><ul><li><strong>.</strong> 导入表示我们不想加前缀而直接使用某个依赖包的程序实体。</li><li><strong>_</strong> 这种导入表示我们只想初始化这个代码包，包初始化时会自动执行init（）方法，所有的代码包的初始化函数都会在main函数执行前，并且只会执行一次。</li></ul><h4 id="标准命令">标准命令</h4><h5 id="go-build">go build</h5><p>go build 命令主要是用于测试编译。在包的编译过程中，若有必要，会同时编译与之相关联的包。</p><ul><li>如果是普通包，当你执行go build命令后，不会产生任何文件。</li><li>如果是main包，当只执行go build命令后，会在当前目录下生成一个可执行文件。如果需要在$GOPATH/bin木下生成相应的exe文件，需要执行go install 或者使用 go build -o 路径/a.exe。</li><li>如果某个文件夹下有多个文件，而你只想编译其中某一个文件，可以在 go build 之后加上文件名，例如 go build a.go；go build 命令默认会编译当前目录下的所有go文件。</li><li>你也可以指定编译输出的文件名。比如，我们可以指定go build -o myapp.exe，默认情况是你的package名(非main包)，或者是第一个源文件的文件名(main包)。</li><li>go build 会忽略目录下以”_”或者”.”开头的go文件。</li></ul><p>如果你的源代码针对不同的操作系统需要不同的处理，那么你可以根据不同的操作系统后缀来命名文件。例如有一个读取数组的程序，它对于不同的操作系统可能有如下几个源文件：</p><ul><li>array_linux.go</li><li>array_darwin.go</li><li>array_windows.go</li><li>array_freebsd.go</li></ul><p>go build的时候会选择性地编译以系统名结尾的文件（Linux、Darwin、Windows、Freebsd）。例如Linux系统下面编译只会选择array_linux.go文件，其它系统命名后缀文件全部忽略。</p><hr><h5 id="go-clean">go clean</h5><p>go clean 命令是用来移除当前源码包里面编译生成的文件，这些文件包括</p><ul><li>_obj/ 旧的object目录，由Makefiles遗留</li><li>_test/ 旧的test目录，由Makefiles遗留</li><li>_testmain.go 旧的gotest文件，由Makefiles遗留</li><li>test.out 旧的test记录，由Makefiles遗留</li><li>build.out 旧的test记录，由Makefiles遗留</li><li>*.[568ao] object文件，由Makefiles遗留</li><li>DIR(.exe) 由 go build 产生</li><li>DIR.test(.exe) 由 go test -c 产生</li><li>MAINFILE(.exe) 由 go build MAINFILE.go产生</li></ul><hr><h5 id="go-fmt">go fmt</h5><p>go fmt 命令主要是用来帮你格式化所写好的代码文件。</p><p>比如我们写了一个格式很糟糕的 test.go 文件，我们只需要使用 fmt go test.go 命令，就可以让go帮我们格式化我们的代码文件。但是我们一般很少使用这个命令，因为我们的开发工具一般都带有保存时自动格式化功能，这个功能底层其实就是调用了 go fmt 命令而已。</p><p>使用go fmt命令，更多时候是用gofmt，而且需要参数-w，否则格式化结果不会写入文件。gofmt -w src，可以格式化整个项目。</p><hr><h5 id="go-get">go get</h5><p>go get 命令主要是用来动态获取远程代码包的，目前支持的有BitBucket、GitHub、Google Code和Launchpad。这个命令在内部实际上分成了两步操作：第一步是下载源码包，第二步是执行go install。下载源码包的go工具会自动根据不同的域名调用不同的源码工具，对应关系如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">BitBucket (Mercurial Git)</span><br><span class="line">GitHub (Git)</span><br><span class="line">Google Code Project Hosting (Git, Mercurial, Subversion)</span><br><span class="line">Launchpad (Bazaar)</span><br></pre></td></tr></table></figure><p>所以为了go get 能正常工作，你必须确保安装了合适的源码管理工具，并同时把这些命令加入你的PATH中。其实go get支持自定义域名的功能，具体参见go help remote。<br>go get 命令本质上可以理解为：首先通过源码工具clone代码到src目录，然后执行go install。</p><hr><h5 id="go-install">go install</h5><p>go install 命令在内部实际上分成了两步操作：第一步是生成结果文件(可执行文件或者.a包)，第二步会把编译好的结果移到 $GOPATH/pkg 或者$GOPATH/bin。</p><p>.exe文件： 一般是 go install 带main函数的go文件产生的，有函数入口，所有可以直接运行。</p><p>.a应用包： 一般是 go install 不包含main函数的go文件产生的，没有函数入口，只能被调用。</p><hr><h5 id="go-test">go test</h5><p>go test 命令，会自动读取源码目录下面名为*_test.go的文件，生成并运行测试用的可执行文件。输出的信息类似</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ok   archive/tar   0.011s</span><br><span class="line">FAIL archive/zip   0.022s</span><br><span class="line">ok   compress/gzip 0.033s</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>默认的情况下，不需要任何的参数，它会自动把你源码包下面所有test文件测试完毕，当然你也可以带上参数，详情请参考go help testflag</p><hr><h5 id="go-doc">go doc</h5><p>go doc 命令其实就是一个很强大的文档工具。</p><p>如何查看相应package的文档呢？ 例如builtin包，那么执行go doc builtin；如果是http包，那么执行go doc net/http；查看某一个包里面的函数，那么执行godoc fmt Printf；也可以查看相应的代码，执行godoc -src fmt Printf；</p><p>通过命令在命令行执行 godoc -http=:端口号 比如godoc -http=:8080。然后在浏览器中打开127.0.0.1:8080，你将会看到一个golang.org的本地copy版本，通过它你可以查询pkg文档等其它内容。如果你设置了GOPATH，在pkg分类下，不但会列出标准包的文档，还会列出你本地GOPATH中所有项目的相关文档，这对于经常被限制访问的用户来说是一个不错的选择。</p><h5 id="详细的go标准命令">详细的go标准命令</h5><p><a href="https://github.com/hyper0x/go_command_tutorial" target="_blank" rel="noopener">https://github.com/hyper0x/go_command_tutorial</a></p>    <div id="aplayer-ANTatdWN" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="004OxZnj2SktXa" data-server="tencent" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="false" data-listmaxheight="340px" data-preload="none" data-theme="#ad7a86"></div><p><br><br></p><div><h2 id="推荐文章">推荐文章<span style="font-size:0.45em; color:gray"></span></h2><ul><li><a href="https://hanyajun.com/golang/int2sting/">go里面如何将[]int64序列化为 []string</a></li><li><a href="https://hanyajun.com/golang/go_article_2019/">go技术文章精选(2019)</a></li></ul></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="golang" scheme="https://hanyajun.com/categories/golang/"/>
    
    
      <category term="golang" scheme="https://hanyajun.com/tags/golang/"/>
    
  </entry>
  
  <entry>
    <title>《图解http》阅读笔记--web及网络基础</title>
    <link href="https://hanyajun.com/network-basis/http_tcp_ip/"/>
    <id>https://hanyajun.com/network-basis/http_tcp_ip/</id>
    <published>2019-05-12T11:37:00.000Z</published>
    <updated>2019-05-12T12:11:36.657Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="网络基础-tcp-ip">网络基础 TCP / IP</h2><p>通常使用的网络（包括互联网）是在 TCP / IP 协议族的基础上运作的，而 HTTP 属于它内部的一个子集。Web 使用一种名为 HTTP（HyperText Transfer Protocol，超文本传输协议）的协议作为规范，完成从客户端（指通过发送请求获取服务器资源的 Web 浏览器等）到服务器端等一系列运作流程，而协议是指规则的约定。可以说，Web 是建立在 HTTP 协议上通信的。</p><h3 id="协议">协议</h3><p>计算机与网络设备要相互通信，双方就必须基于相同的方法。比如，探测到通信目标、由哪一边先发起通信、使用哪种语言进行通信、怎样结束通信等规则都需要事先确定。不同的硬件、操作系统之间的通信，所有的这一切都需要一种规则，而我们就把这种规则称为协议。<br></p><h3 id="tcp-ip-协议族">TCP / IP 协议族</h3><p>像这样把与互联网相关联的协议集合起来总称为 TCP / IP，如 HTTP、FTP、DNS、TCP 都为 TCP / IP 协议集合下的协议。<br><br><img src="http://cdn.hanyajun.com/20190512_174651_tcp_ip.png" alt=""></p><h3 id="osi与tcpip分层模型">OSI与TCP/IP分层模型</h3><p><img src="http://cdn.hanyajun.com/20190512_174651_TCPIP-OSI.png" alt=""></p><p>TCP / IP 协议族里最重要的一点就是分层，分层的好处是只需把各层之间的接口部分规划好，每个层次的内部设计就能自由改动，而不会影响到整体。TCP / IP 协议族按层次分别为以下四层：</p><ul><li><strong>应用层，决定了向用户提供应用服务时通信的活动。</strong> TCP / IP 协议族内预存了各类通用的应用服务，比如，FTP（File Transfer Protocol，文件传输协议）和 DNS（Domain Name System，域名系统）服务就是其中两类，HTTP 协议也处于该层；</li><li><strong>传输层，对上层应用层，提供处于网络连接中的两台计算机之间的数据传输。</strong> 在传输层有两个性质不同的协议：TCP（Transmission Control Protocol，传输控制协议）和 UDP（User Data Protocol，用户数据报协议）；</li><li><strong>网络层（又名网络互连层），用来处理在网络上流动的数据包。</strong> 数据包是网络传输的最小数据单位，该层规定了通过怎样的路径（所谓的传输路线）到达对象计算机，并把数据包传送给对方。与对方计算机之间通过多台计算机或网络设备进行传输时，网络层起的作用就是在众多的选项内选择一条传输路线；</li><li><strong>数据链路层（又名数据链路层，网络接口层），用来处理连接网络的硬件部分.</strong> 包括控制操作系统、硬件的设备驱动、NIC（Network Interface Card，网络适配器，即网卡），及光纤等物理可见部分（还包括连接器等一切传输媒介）。硬件上的范畴均在链路层的作用范围之内。</li></ul><h4 id="tcp-ip-通信传输流">TCP / IP 通信传输流</h4><p><img src="http://cdn.hanyajun.com/20190512_183638_chapter_1_p1.png" alt=""></p><p>利用 TCP / IP 协议族进行网络通信时，会通过分层顺序与对方进行通信。发送端从应用层往下走，接收端则往应用层往上走。举例用 HTTP 来说明：</p><ol><li>首先作为发送端的客户端在应用层（HTTP 协议）发出一个想看某个 Web 页面的 HTTP 请求；</li><li>接着，为了传输方便，在传输层（TCP 协议）把从应用层处收到的数据（HTTP 请求报文）进行分割，并在各个报文上打上标记序号及端口号后转发给网络层；</li><li>在网络层（IP 协议），增加作为通信目的地的 MAC 地址后转发给链路层；</li><li>这样一来，发往网络的通信请求就准备齐全了。接收端的服务器在链路层接收到数据，按序往上层发送，一直到应用层。当传输到应用层，才能算真正接收到由客户端发送过来的 HTTP请求。</li></ol><p><img src="http://cdn.hanyajun.com/20190512_183639_chapter_1_p2.png" alt=""></p><p>发送端在层与层之间传输数据时，每经过一层时必定会被打上一个该层所属的首部信息。反之，接收端在层与层传输数据时，每经过一层时会把对应的首部消去。这种把数据信息包装起来的做法称为封装（encapsulate）。</p><h4 id="osi参考模型分层说明">OSI参考模型分层说明</h4><p><img src="http://cdn.hanyajun.com/20190512_182904_osi.png" alt=""></p><h4 id="osi参考模型通信过程">OSI参考模型通信过程</h4><p><img src="http://cdn.hanyajun.com/20190512_183646_OSI.png" alt=""></p><ul><li>1、打包数据时，每一层在处理上一层传过来的数据时，会在数据上附上当前层的首部信息后传给下一层；</li><li>2、解包数据时，每一层在处理下一层传过来的数据时，会将当前层的首部信息与数据分开，将数据传给上一层。</li><li>3、数据通信过程:</li></ul><table><thead><tr><th>分层</th><th>每层的操作</th></tr></thead><tbody><tr><td>应用层</td><td>在数据前面加首部，首部包括数据内容、源地址和目标地址，同时也会处理异常的反馈信息。</td></tr><tr><td>表示层</td><td>将特有的数据格式转换为通用的数据格式，同时也会加上表示层的首部信息以供解析。</td></tr><tr><td>会话层</td><td>对何时连接，以何种方式连接，连接多久，何时断开等做记录。同时也会加会话层的首部信息。</td></tr><tr><td>传输层</td><td>建立连接，断开连接，确认数据是否发送成功和执行失败重发任务。</td></tr><tr><td>网络层</td><td>负责将数据发到目标地址，也包含首部信息。</td></tr><tr><td>数据链路层</td><td>通过物理的传输介质实现数据的传输。</td></tr><tr><td>物理层</td><td>将0/1转换成物理的传输介质，通过MAC地址进行传输。</td></tr></tbody></table><h3 id="与-http-关系密切的协议-ip-tcp-和-dns">与 HTTP 关系密切的协议 : IP、TCP 和 DNS</h3><ul><li><strong>负责传输的 IP 协议，通过 IP 地址和 MAC 地址将数据送往对方。</strong> 按层次分，IP（Internet Protocol）网际协议位于网络层。TCP / IP 协议族中的 IP 指的是网际协议，是一种协议的名称。IP 协议的作用是把各种数据包传送给对方。而要保证确实传送到对方那里，则需要满足各类条件。其中两个重要的条件是 IP 地址和 MAC 地址（Media Access Control Address）。IP 地址指明了节点被分配到的地址，MAC 地址是指网卡所属的固定地址。IP 地址可以和 MAC 地址进行配对。IP 地址可变换，但 MAC 地址基本上不会更改。在网络上，通信的双方通常是经过多台计算机和网络设备中转才能连接到对方。而在进行中转时，会利用下一站中转设备的 MAC 地址来搜索下一个中转目标。这时，会采用 ARP 协议（Address Resolution Protocol），一种用以解析地址的协议，根据通信方的 IP 地址就可以反查出对应的 MAC 地址。在到达通信目标前的中转过程中，那些计算机和路由器等网络设备只能获悉很粗略的传输路线，这种机制称为路由选择（routing）；</li></ul><p><img src="http://cdn.hanyajun.com/20190512_183640_chapter_1_p3.png" alt=""></p><ul><li><strong>确保可靠性的 TCP 协议，使用了三次握手策略确保数据发送成功。</strong> 按层次分，TCP 位于传输层，提供可靠的字节流服务。所谓的字节流服务（Byte Stream Service）是指，为了方便传输，将大块数据分割成以报文段（segment）为单位的数据包进行管理。而可靠的传输服务是指，能够把数据准确可靠地传给对方。即 TCP 协议为了更容易传送大数据才把数据分割，而且 TCP 协议采用三次握手策略。</li></ul><p><img src="http://cdn.hanyajun.com/20190512_183641_chapter_1_p4.png" alt=""><br><img src="http://cdn.hanyajun.com/20190512_185153_4_http_handshake.jfif" alt=""><br><strong>简单示意图：</strong></p><ol><li>客户端–发送带有 SYN 标志的数据包–一次握手–服务端</li><li>服务端–发送带有 SYN/ACK 标志的数据包–二次握手–客户端</li><li>客户端–发送带有带有 ACK 标志的数据包–三次握手–服务端</li></ol><ul><li><strong>四次挥手</strong><br><img src="http://cdn.hanyajun.com/20190512_191420_4_time_wave.jfif" alt=""><br>断开一个 TCP 连接则需要“四次挥手”：</li></ul><ol><li>客户端-发送一个 FIN，用来关闭客户端到服务器的数据传送</li><li>服务器-收到这个 FIN，它发回一 个 ACK，确认序号为收到的序号加1 。和 SYN 一样，一个 FIN 将占用一个序号</li><li>服务器-关闭与客户端的连接，发送一个FIN给客户端</li><li>客户端-发回 ACK 报文确认，并将确认序号设置为收到序号加1</li></ol><ul><li><strong>负责域名解析的 DNS 服务，提供域名到 IP 地址之间的解析服务。</strong> DNS（Domain Name System）服务是和 HTTP 协议一样位于应用层的协议，它提供域名到 IP 地址之间的解析服务。计算机既可以被赋予 IP 地址，也可以被赋予主机名和域名。用户通常使用主机名或域名来访问对方的计算机，DNS 协议提供通过域名查找 IP 地址，发送给计算机的是 IP 地址。计算机可通过 DNS 协议的逆向从 IP 地址反查域名。</li></ul><p><img src="http://cdn.hanyajun.com/20190512_183642_chapter_1_p5.png" alt=""></p><h3 id="概括下请求响应的流程">概括下请求响应的流程：</h3><ol><li>客户端发起请求，想访问某个主机名或域名；</li><li>DNS 协议对主机名或域名进行解析，得到 IP 地址；</li><li>HTTP 协议将请求报文分割成多个报文段来发送；</li><li>IP 协议通过 IP 地址和 MAC 地址将数据送往对方；</li><li>TCP 协议使用三次握手策略确保数据发送成功，按序号以原来的顺序重组请求报文；</li><li>服务端获得请求报文，进行处理，处理结果同样使用 TCP / IP 协议进行回传。</li></ol><p><img src="http://cdn.hanyajun.com/20190512_183643_chapter_1_p6.png" alt=""></p><h3 id="uri-和-url">URI 和 URL</h3><p>URL（Uniform Resource Locator，统一资源定位符），使用 Web 浏览器等访问 Web 页面时需要输入的网页地址，比如 <a href="https://www.google.com/" target="_blank" rel="noopener">https://www.google.com/</a> 。URI 是 Uniform Resource Identifier 的缩写，这三个单词分别表示：</p><ul><li>Uniform，规定统一的格式可方便处理多种不同类型的资源，而不用根据上下文环境来识别资源指定的访问方式。另外，加入新增的协议方案（如 http: 或 ftp:）也更容易；</li><li>Resource，资源的定义是“可标识的任何东西”。除了文档文件、图像或服务（例如当天的天气预报）等能够区别于其他类型的，全都可作为资源。另外，资源不仅可以是单一的，也可以是多数的集合体；</li><li>Identifier，表示可标识的对象。也称为标识符；</li></ul><p>综上所述，URI 就是由某个协议方案表示的资源的定位标识符。协议方案是指访问资源所使用的协议类型名称。采用 HTTP 协议时，协议方案就是 http。URI 用字符串标识某一互联网资源，而 URL表示资源的地点（互联网上所处的位置），可见 URL是 URI 的子集。</p><h4 id="绝对uri-格式">绝对URI 格式</h4><p>以 “<a href="http://user:pass@www.example.jp:80/dir/index.html?uid=1#ch1%E2%80%9D" target="_blank" rel="noopener">http://user:pass@www.example.jp:80/dir/index.html?uid=1#ch1”</a> 为例：</p><ul><li>“http://” ，协议方案名。使用 http: 或 https: 等协议方案名获取访问资源时要指定协议类型。不区分字母大小写，最后附一个冒号（:）。也可使用 data: 或 javascript: 这类指定数据或脚本程序的方案名；</li><li>“user:pass” ，登录信息（认证）。指定用户名和密码作为从服务器端获取资源时必要的登录信息（身份认证），此项是可选项；</li><li>“<a href="http://www.example.jp" target="_blank" rel="noopener">www.example.jp</a>” ，服务器地址。使用绝对 URI 必须指定待访问的服务器地址。地址可以是类似 <a href="http://hackr.jp" target="_blank" rel="noopener">hackr.jp</a> 这种 DNS 可解析的名称，或是 192.168.1.1 这类 IPv4 地址名，还可以是 [0:0:0:0:0:0:0:1] 这样用方括号括起来的 IPv6 地址名；</li><li>“80”，服务器端口号。指定服务器连接的网络端口号。此项也是可选项，若用户省略则自动使用默认端口号；</li><li>“dir/index.html”，带层次的文件路径。指定服务器上的文件路径来定位特指的资源。这与 UNIX 系统的文件目录结构相似；</li><li>“uid=1”，查询字符串。针对已指定的文件路径内的资源，可以使用查询字符串传入任意参数，此项可选；</li><li>“ch1”，使用片段标识符通常可标记出已获取资源中的子资源（文档内的某个位置）。但在 RFC 中并没有明确规定其使用方法，该项也为可选项。</li></ul><p><img src="http://cdn.hanyajun.com/20190512_183646_chapter_1_p7.png" alt=""></p><h4 id="常见的面试题">常见的面试题</h4><h4 id="tcp三次握手">TCP三次握手</h4><p><img src="http://cdn.hanyajun.com/20190512_190514_3_http_wave.png" alt=""></p><h5 id="为什么要三次握手">为什么要三次握手？</h5><p>三次握手的目的是建立可靠的通信信道，说到通讯，简单来说就是数据的发送与接收，而三次握手最主要的目的就是双方确认自己与对方的发送与接收是正常的。</p><ul><li>第一次握手：Client 什么都不能确认；Server 确认了对方发送正常</li><li>第二次握手：Client 确认了：自己发送、接收正常，对方发送、接收正常；Server 确认了：自己接收正常，对方发送正常</li><li>第三次握手：Client 确认了：自己发送、接收正常，对方发送、接收正常；Server 确认了：自己发送、接收正常，对方发送、接收正常</li></ul><p>所以三次握手就能确认双发收发功能都正常，缺一不可。、</p><h5 id="为什么要传回-syn">为什么要传回 SYN?</h5><p>接收端传回发送端所发送的 SYN 是为了告诉发送端，我接收到的信息确实就是你所发送的信号了。<br>SYN 是 TCP/IP 建立连接时使用的握手信号。在客户机和服务器之间建立正常的 TCP 网络连接时，客户机首先发出一个 SYN 消息，服务器使用 SYN-ACK 应答表示接收到了这个消息，最后客户机再以 ACK(Acknowledgement[汉译：确认字符 ,在数据通信传输中，接收站发给发送站的一种传输控制字符。它表示确认发来的数据已经接受无误。 ]）消息响应。这样在客户机和服务器之间才能建立起可靠的TCP连接，数据才可以在客户机和服务器之间传递。</p><h5 id="为什么tcp客户端最后还要发送一次确认呢">为什么TCP客户端最后还要发送一次确认呢？</h5><p>一句话，主要防止已经失效的连接请求报文突然又传送到了服务器，从而产生错误。</p><ul><li>如果使用的是两次握手建立连接，假设有这样一种场景，客户端发送了第一个请求连接并且没有丢失，只是因为在网络结点中滞留的时间太长了，由于TCP的客户端迟迟没有收到确认报文，以为服务器没有收到，此时重新向服务器发送这条报文，此后客户端和服务器经过两次握手完成连接，传输数据，然后关闭连接。此时此前滞留的那一次请求连接，网络通畅了到达了服务器，这个报文本该是失效的，但是，两次握手的机制将会让客户端和服务器再次建立连接，这将导致不必要的错误和资源的浪费。</li><li>如果采用的是三次握手，就算是那一次失效的报文传送过来了，服务端接受到了那条失效报文并且回复了确认报文，但是客户端不会再次发出确认。由于服务器收不到确认，就知道客户端并没有请求连接。</li></ul><h4 id="四次挥手">四次挥手</h4><p><img src="http://cdn.hanyajun.com/20190512_190514_4_http_wave.png" alt=""></p><h5 id="为什么要四次挥手">为什么要四次挥手?</h5><p>任何一方都可以在数据传送结束后发出连接释放的通知，待对方确认后进入半关闭状态。当另一方也没有数据再发送的时候，则发出连接释放通知，对方确认后就完全关闭了TCP连接。</p><p>举个例子：A 和 B 打电话，通话即将结束后，A 说“我没啥要说的了”，B回答“我知道了”，但是 B 可能还会有要说的话，A 不能要求 B 跟着自己的节奏结束通话，于是 B 可能又巴拉巴拉说了一通，最后 B 说“我说完了”，A 回答“知道了”，这样通话才算结束。</p><h5 id="为什么客户端最后还要等待2msl">为什么客户端最后还要等待2MSL？</h5><p>MSL（Maximum Segment Lifetime），TCP允许不同的实现可以设置不同的MSL值。</p><ol><li>第一，保证客户端发送的最后一个ACK报文能够到达服务器，因为这个ACK报文可能丢失，站在服务器的角度看来，我已经发送了FIN+ACK报文请求断开了，客户端还没有给我回应，应该是我发送的请求断开报文它没有收到，于是服务器又会重新发送一次，而客户端就能在这个2MSL时间段内收到这个重传的报文，接着给出回应报文，并且会重启2MSL计时器。</li></ol><ol start="2"><li>第二，防止类似与“三次握手”中提到了的“已经失效的连接请求报文段”出现在本连接中。客户端发送完最后一个确认报文后，在这个2MSL时间中，就可以使本连接持续的时间内所产生的所有报文段都从网络中消失。这样新的连接中不会出现旧连接的请求报文。</li></ol><h5 id="为什么建立连接是三次握手关闭连接确是四次挥手呢">为什么建立连接是三次握手，关闭连接确是四次挥手呢？</h5><p>建立连接的时候， 服务器在LISTEN状态下，收到建立连接请求的SYN报文后，把ACK和SYN放在一个报文里发送给客户端。<br>而关闭连接时，服务器收到对方的FIN报文时，仅仅表示对方不再发送数据了但是还能接收数据，而自己也未必全部数据都发送给对方了，所以己方可以立即关闭，也可以发送一些数据给对方后，再发送FIN报文给对方来表示同意现在关闭连接，因此，己方ACK和FIN一般都会分开发送，从而导致多了一次。</p><h4 id="参考文章">参考文章：</h4><ul><li>《图解http》</li><li><a href="https://blog.csdn.net/qzcsu/article/details/72861891" target="_blank" rel="noopener">https://blog.csdn.net/qzcsu/article/details/72861891</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="network_basis" scheme="https://hanyajun.com/categories/network-basis/"/>
    
    
      <category term="网络基础" scheme="https://hanyajun.com/tags/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>爬取GoCn每日新闻并推送到微信/邮箱</title>
    <link href="https://hanyajun.com/tools/gocn_news_push/"/>
    <id>https://hanyajun.com/tools/gocn_news_push/</id>
    <published>2019-05-09T17:53:00.000Z</published>
    <updated>2019-05-09T18:04:49.124Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h4 id="爬取gocn每日新闻并推送到微信邮箱">爬取<a href="https://gocn.vip/explore/category-14" target="_blank" rel="noopener">GoCn每日新闻</a>并推送到微信/邮箱</h4><p>github: <a href="https://github.com/Han-Ya-Jun/news_watch_notice" target="_blank" rel="noopener">https://github.com/Han-Ya-Jun/news_watch_notice</a><br><img src="http://cdn.hanyajun.com/news_watch.png" alt="image"></p><h4 id="使用方法">使用方法</h4><h5 id="通过微信通知">通过微信通知</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker run -v /etc/localtime:/etc/localtime:ro \</span><br><span class="line">-e NOTICE_WECHAT_USERS=特鲁尼克 hanyajun/news_watch_notice</span><br></pre></td></tr></table></figure><ul><li>NOTICE_WECHAT_USERS 代表你要通知的好友的昵称，其中自己微信的文件助手是默认会发的，如果有多个好友，以逗号&quot;,&quot;隔开。<br><img src="http://cdn.hanyajun.com/news_notice_wechat.png" alt="image"></li></ul><h6 id="效果">效果</h6><p><img src="http://cdn.hanyajun.com/wechat3.png" alt="image"></p><p><strong>微信通知有个缺点，就是网页版微信只能有一个终端登录</strong></p><h5 id="通过邮箱推送">通过邮箱推送</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">docker run -v /etc/localtime:/etc/localtime:ro -e NOTICE_TYPE=mail \ //采用邮箱通知，不填则默认微信</span><br><span class="line">-e NOTICE_MAIL_TO=1581532052@qq.com,hanyajun5876@163.com \ //发送</span><br><span class="line">-e NOTICE_MAIL_PWD=******* \ //邮箱smtp授权密码</span><br><span class="line">-e NOTICE_MAIL_PORT=25 \  //smtp端口</span><br><span class="line">-e NOTICE_MAIL_HOST=smtp.qq.com \ //smtp服务器地址</span><br><span class="line">-e NOTICE_MAIL_EMAIL=1581532052@qq.com \ //发送邮箱</span><br><span class="line">-e NOTICE_MAIL_CC=1581532052@qq.com,hanyajun5876@163.com //发送抄送 hanyajun/news_watch_notice</span><br></pre></td></tr></table></figure><h6 id="效果">效果</h6><p><img src="http://cdn.hanyajun.com/wechat4.png" alt="image"></p>    <div id="aplayer-rYTozXRY" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="000add8o0epyyP" data-server="tencent" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="false" data-listmaxheight="340px" data-preload="none" data-theme="#ad7a86"></div><p><br><br></p><div><h2 id="推荐文章">推荐文章<span style="font-size:0.45em; color:gray"></span></h2><ul><li><a href="https://hanyajun.com/tools/qiniuyun_uoload_tools/">七牛云文件上传助手</a></li><li><a href="https://hanyajun.com/tools/windows_tree_skill/">windows上如何使用tree生成目录树</a></li><li><a href="https://hanyajun.com/tools/qrcode2console/">如何将链接生成二维码或者二维码图片输出到console？</a></li></ul></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="tools" scheme="https://hanyajun.com/categories/tools/"/>
    
    
      <category term="tools" scheme="https://hanyajun.com/tags/tools/"/>
    
  </entry>
  
  <entry>
    <title>如何将链接生成二维码或者二维码图片输出到console？</title>
    <link href="https://hanyajun.com/tools/qrcode2console/"/>
    <id>https://hanyajun.com/tools/qrcode2console/</id>
    <published>2019-05-07T16:21:00.000Z</published>
    <updated>2019-05-07T16:27:06.572Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="qrcode2console-github地址">qrcode2console   <a href="https://github.com/Han-Ya-Jun/qrcode2console" target="_blank" rel="noopener">github地址</a></h3><p>链接生成二维码输出到console或者是二维码图片输出到console</p><h3 id="安装">安装</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">go</span> get -u github.com/Han-Ya-Jun/qrcode2console</span><br></pre></td></tr></table></figure><h3 id="示例">示例</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestNewQRCode2ConsoleWithUrl</span><span class="params">(t *testing.T)</span></span> &#123;</span><br><span class="line">qr := NewQRCode2ConsoleWithUrl(<span class="string">"https://hanyajun.com"</span>, <span class="literal">true</span>)</span><br><span class="line"><span class="comment">//qr.Debug()</span></span><br><span class="line">qr.Output()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestNewQRCode2ConsoleWithPath</span><span class="params">(t *testing.T)</span></span> &#123;</span><br><span class="line">qr := NewQRCode2ConsoleWithPath(<span class="string">"qrcode.jpg"</span>)</span><br><span class="line"><span class="comment">//qr.Debug()</span></span><br><span class="line">qr.Output()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="效果">效果</h3><p><img src="https://github.com/Han-Ya-Jun/qrcode2console/blob/master/case1.png?raw=true" alt="image"><br><img src="https://github.com/Han-Ya-Jun/qrcode2console/blob/master/case2.png?raw=true" alt="image"></p>    <div id="aplayer-lGBfUEiG" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="000bzSQE1IZOXJ" data-server="tencent" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="false" data-listmaxheight="340px" data-preload="none" data-theme="#ad7a86"></div><div><h2 id="推荐文章">推荐文章<span style="font-size:0.45em; color:gray"></span></h2><ul><li><a href="https://hanyajun.com/tools/gocn_news_push/">爬取GoCn每日新闻并推送到微信/邮箱</a></li><li><a href="https://hanyajun.com/tools/qiniuyun_uoload_tools/">七牛云文件上传助手</a></li><li><a href="https://hanyajun.com/tools/windows_tree_skill/">windows上如何使用tree生成目录树</a></li></ul></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="tools" scheme="https://hanyajun.com/categories/tools/"/>
    
    
      <category term="tools" scheme="https://hanyajun.com/tags/tools/"/>
    
  </entry>
  
  <entry>
    <title>如何使用travis-ci自动化构建部署GitHub Pages（gitbook）</title>
    <link href="https://hanyajun.com/devops/travis-ci/"/>
    <id>https://hanyajun.com/devops/travis-ci/</id>
    <published>2019-04-26T02:54:00.000Z</published>
    <updated>2019-04-26T03:32:43.363Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h4 id="github-pages">Github Pages</h4><p>github pages可以当做你或者你的项目的 Websites，那么我们可以知道 GitHub Pages 有两种最基本的用法：</p><ul><li>作为你自己（或者组织）的网站或者博客（访问地址示例：<a href="http://username.github.io" target="_blank" rel="noopener">http://username.github.io</a>）</li><li>作为你某一个项目的网站（访问地址示例：<a href="http://username.github.io/projectname%EF%BC%89" target="_blank" rel="noopener">http://username.github.io/projectname）</a><br></li></ul><p>如果是第二种的话部署的时候需要在源仓库的基础上再创建一个gh-pages的分支，然后部署的时候需要将在源仓库生成的静态文件单独拎出来放到gh-pages分支上push上去，整个操作流程比较麻烦，而<a href="https://travis-ci.org/" target="_blank" rel="noopener">travis-ci</a>可以很方便帮们解决这个痛点。</p><h4 id="配置travis-ci">配置travis-ci</h4><h5 id="登录-travis">登录 travis</h5><ul><li><p><a href="https://travis-ci.org/%EF%BC%88%E5%85%8D%E8%B4%B9%EF%BC%89" target="_blank" rel="noopener">https://travis-ci.org/（免费）</a></p></li><li><p><a href="https://travis-ci.com/%EF%BC%88%E6%94%B6%E8%B4%B9%EF%BC%89" target="_blank" rel="noopener">https://travis-ci.com/（收费）</a><br></p></li></ul><p>登录时使用GitHub账号登录，此时为了让travis获取调用GitHub Api的权限需要在GitHub上生成一个token。<br>在github(<a href="https://github.com/settings/tokens" target="_blank" rel="noopener">https://github.com/settings/tokens</a>)   Settings/ Developer settings 新生成一个travis专用的token.</p><p><img src="http://cdn.hanyajun.com/travis.png" alt="image"></p><h5 id="在travis-配置token环境变量">在travis 配置token环境变量</h5><p>在你需要构建的仓库的设置里添加GITHUB_TOKEN环境变量。</p><p><img src="http://cdn.hanyajun.com/travis_token.png" alt="image"></p><h5 id="创建-配置文件">创建 配置文件</h5><p>在你的github pages 项目里面新建.travis.yml配置文件。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">language:</span> <span class="string">node_js</span> <span class="comment"># 构建所需的语言环境</span></span><br><span class="line"><span class="attr">node_js:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">"v11.14.0"</span>  <span class="comment"># 对应的版本</span></span><br><span class="line"><span class="attr">branches:</span></span><br><span class="line"><span class="attr">  only:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">master</span>    <span class="comment"># 构建的分支</span></span><br><span class="line"><span class="attr">cache:</span></span><br><span class="line"><span class="attr">  directories:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">node_modules</span> <span class="comment"># 依赖缓存的目录</span></span><br><span class="line"><span class="attr">before_install:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">export</span> <span class="string">TZ='Asia/Shanghai'</span>  <span class="comment"># 设置时区</span></span><br><span class="line"><span class="attr">install:</span></span><br><span class="line"><span class="bullet"> -</span> <span class="string">npm</span> <span class="string">install</span> <span class="bullet">-g</span> <span class="string">gitbook-cli</span> <span class="comment"># 安装编译工具</span></span><br><span class="line"><span class="attr">script:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">gitbook</span> <span class="string">build</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">  provider:</span> <span class="string">pages</span></span><br><span class="line"><span class="attr">  skip-cleanup:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  github-token:</span> <span class="string">$GITHUB_TOKEN</span> <span class="comment"># github 上的token环境变量</span></span><br><span class="line"><span class="attr">  local-dir:</span> <span class="string">./_book/</span> <span class="comment">## 根据情况自定义到静态文件输出目录</span></span><br><span class="line"><span class="attr">  target-branch:</span> <span class="string">gh-pages</span></span><br><span class="line"><span class="attr">  verbose:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  on:</span></span><br><span class="line"><span class="attr">    branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><h5 id="测试">测试</h5><p>在github page的项目里面修改一点东西，push到GitHub上去就会在travis上看到触发build。</p><p><img src="http://cdn.hanyajun.com/travis_build.png" alt="image"></p><p>大概等个2min你会发现你的github pages 已经更新了。<br></p>    <div id="aplayer-DJputlwS" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="002sun3u2HDgYl" data-server="tencent" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="false" data-listmaxheight="340px" data-preload="none" data-theme="#ad7a86"></div><div><h2 id="推荐文章">推荐文章<span style="font-size:0.45em; color:gray"></span></h2><ul><li><a href="https://hanyajun.com/article/github_travis_ci/">github上Go项目使用Travis CI和Docker Hub实现持续集成</a></li><li><a href="https://hanyajun.com/devops/code_pipeline_devops/">go程序基于阿里云CodePipeline的一次devops实践</a></li><li><a href="https://hanyajun.com/devops/gitbook_coding_ci/">基于Travis CI实现 Gitbook在 Github 和 Coding 的同步部署</a></li></ul></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="devops" scheme="https://hanyajun.com/categories/devops/"/>
    
    
      <category term="devops" scheme="https://hanyajun.com/tags/devops/"/>
    
  </entry>
  
  <entry>
    <title>kubernetes从入门到放弃--使用kubeadm快速安装kubernetes</title>
    <link href="https://hanyajun.com/kubernetes/kubernetes_kubeadm/"/>
    <id>https://hanyajun.com/kubernetes/kubernetes_kubeadm/</id>
    <published>2019-04-23T15:42:00.000Z</published>
    <updated>2019-04-25T09:14:38.944Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>kubeadm是Kubernetes官方提供的用于快速安装 Kubernetes<br>集群的工具，通过将集群的各个组件进行容器化安装管理，通过kubeadm的方式安装集群比二进制的方式安装要方便不少，但是目录kubeadm还处于beta状态，还不能用于生产环境，Using kubeadm to Create a Cluster文档中已经说明kubeadm将会很快能够用于生产环境了。</p><h3 id="准备三台centos的机器">准备三台centos的机器</h3><p>为了后续方便，每台机器的hosts文件加上这个。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">192.168.211.131 master</span><br><span class="line">192.168.211.132 note1</span><br><span class="line">192.168.211.133 note2</span><br></pre></td></tr></table></figure><h3 id="关闭centos自带的防火墙">关闭centos自带的防火墙</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl disable firewalld</span><br><span class="line"></span><br><span class="line">systemctl stop firewalld</span><br></pre></td></tr></table></figure><h3 id="添加yum仓库">添加yum仓库</h3><p>可以去阿里云的仓库(<a href="https://opsx.alibaba.com/mirror" target="_blank" rel="noopener">https://opsx.alibaba.com/mirror</a>)下载相应的仓库至/etc/yum.repos.d目录下。<br>如：</p><ul><li>docker(<a href="https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo" target="_blank" rel="noopener">https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</a>)<br><img src="http://cdn.hanyajun.com/docker.png" alt="image"></li><li>kubernetes 没有现成的repo需要我们自己写一个。<br><br>kubernetes.repo</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[kubernetes]</span><br><span class="line">name=kubernetes Repo</span><br><span class="line">baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/</span><br><span class="line">gpgcheck=0</span><br><span class="line">gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg</span><br><span class="line">enabled=1</span><br></pre></td></tr></table></figure><p>如果出现gpgkey检查有问题，我们就自己手动import下。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg</span><br><span class="line"></span><br><span class="line">rpm --import yum-key.gpg</span><br></pre></td></tr></table></figure><h3 id="安装dockerkubectlkubeadmkubelet">安装docker,kubectl,kubeadm,kubelet,</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install docker-ce kubelet kubeadm kubectl</span><br></pre></td></tr></table></figure><h3 id="启动docker">启动docker</h3><p>在启动docker之前，为了后续安装k8s方便（添加代理），需要修改dokcer服务配置文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /usr/lib/systemd/system/docker.service</span><br></pre></td></tr></table></figure><p>添加两个环境变量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Environment=&quot;HTTPS_PROXY=http://192.168.137.1:10080&quot; //自己的代理</span><br><span class="line">Environment=&quot;NO_PROXY=127.0.0.0/8,172.20.0.0/16&quot;</span><br></pre></td></tr></table></figure><p><img src="http://cdn.hanyajun.com/docker_config.png" alt="image"></p><p>启动docker</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload//重新加载配置</span><br><span class="line">systemctl start docker</span><br><span class="line">systemctl enable docker //开启自启动</span><br></pre></td></tr></table></figure><p><em>注意检查/proc/sys/net/bridge/bridge-nf-call-ip6tables和/proc/sys/net/bridge/bridge-nf-call-iptables，保证值为1，为了保证后面iptables正常的桥接功能</em><br></p><p>如果不是1，可以设设置下。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo &apos;1&apos; &gt; /proc/sys/net/bridge/bridge-nf-call-iptables</span><br><span class="line">echo &apos;1&apos; &gt; /proc/sys/net/bridge/bridge-nf-call-ip6tables</span><br></pre></td></tr></table></figure><h3 id="设置kubelet忽略swap同时设置为开机启动">设置kubelet(忽略swap)，同时设置为开机启动。</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/sysconfig/kubelet</span><br><span class="line"></span><br><span class="line">systemctl enable kubelet</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20190419114526812.png" alt="在这里插入图片描述"></p><p>也可以禁用swap</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo swapoff -a</span><br><span class="line"></span><br><span class="line">sed -i &apos;/ swap / s/^/#/&apos; /etc/fstab</span><br></pre></td></tr></table></figure><p>用yum源的方式安装的kubelet生成的配置文件将参数–cgroup-driver改成了systemd，而docker的</p><p>cgroup-driver是cgroupfs，这二者必须一致才行，我们可以通过docker info命令查看<br><img src="https://img-blog.csdnimg.cn/20190419114608239.png" alt="在这里插入图片描述"><br>如果不一致,可以修改文件kubelet的配置文件/etc/systemd/system/kubelet.service.d/10-</p><p>kubeadm.conf，将其中的KUBELET_CGROUP_ARGS参数更改成cgroupfs：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Environment=&quot;KUBELET_CGROUP_ARGS=--cgroup-driver=cgroupfs&quot;</span><br></pre></td></tr></table></figure><p>或者修改docker配置文件<br>vim /etc/docker/daemon.json</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> &#123;</span><br><span class="line">    <span class="attr">"exec-opts"</span>: [<span class="string">"native.cgroupdriver=systemd"</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@note2 hanyajun]# systemctl daemon-reload</span><br><span class="line">[root@note2 hanyajun]# systemctl restart docker</span><br></pre></td></tr></table></figure><h3 id="初始化集群">初始化集群</h3><p>在master节点上用kubeadm命令来初始化我们的集群了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubeadm init --pod-network-cidr=10.244.0.0/16 --service-cidr=10.96.0.0/12 --ignore-preflight-errors=Swap</span><br></pre></td></tr></table></figure><p>命令非常简单，就是kubeadm init，后面的参数是需要安装的集群版本，因为我们这里选择flannel作为 Pod 的网络插件，所以需要指定–pod-network-cidr=10.244.0.0/16，然后是apiserver的通信地址，这里就是我们master节点的IP 地址。执行上面的命令，如果出现 running with swap on is not supported. Please disable swap之类的错误，则我们还需要增加一个参数–ignore-preflight-errors=Swap来忽略swap的错误提示信息：<br>在这里插入图片描述</p><h3 id="安装-pod-network">安装 Pod Network</h3><p>For Kubernetes v1.7+ (<a href="https://github.com/coreos/flannel" target="_blank" rel="noopener">https://github.com/coreos/flannel</a>)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml</span><br></pre></td></tr></table></figure><p>安装完成后使用kubectl get pods命令可以查看到我们集群中的组件运行状态，如果都是Running状态的话，那么恭喜你，你的master节点安装成功了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@master hanyajun]# kubectl get pods --all-namespaces</span><br><span class="line">NAMESPACE     NAME                             READY   STATUS    RESTARTS   AGE</span><br><span class="line">kube-system   coredns-fb8b8dccf-ddpzg          1/1     Running   0          61m</span><br><span class="line">kube-system   coredns-fb8b8dccf-ptz2g          1/1     Running   0          61m</span><br><span class="line">kube-system   etcd-master                      1/1     Running   0          60m</span><br><span class="line">kube-system   kube-apiserver-master            1/1     Running   0          60m</span><br><span class="line">kube-system   kube-controller-manager-master   1/1     Running   0          60m</span><br><span class="line">kube-system   kube-flannel-ds-amd64-ts46h      1/1     Running   0          55m</span><br><span class="line">kube-system   kube-proxy-wjv4g                 1/1     Running   0          61m</span><br><span class="line">kube-system   kube-scheduler-master            1/1     Running   0          60m</span><br><span class="line">[root@master hanyajun]#</span><br></pre></td></tr></table></figure><h3 id="添加节点">添加节点</h3><p>直接在 Node 节点上执行kubeadm join命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubeadm join 192.168.211.131:6443 --token ferqkx.ituywx5n5cxx9mko --discovery-token-ca-cert-hash sha256:f3af0e15c4f6c27327fd04bdcaff97525030bb55ee80f72c118284efaf074cdc --ignore-preflight-errors=Swap</span><br></pre></td></tr></table></figure><p>可以直接在master通过下面这个指令查看节点情况</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">[root@master hanyajun]# kubectl get nodes</span><br><span class="line">NAME     STATUS   ROLES    AGE     VERSION</span><br><span class="line">master   Ready    master   96m     v1.14.1</span><br><span class="line">note1    Ready    &lt;none&gt;   24m     v1.14.1</span><br><span class="line">note2    Ready    &lt;none&gt;   4m46s   v1.14.1</span><br><span class="line">[root@master hanyajun]#</span><br></pre></td></tr></table></figure><p>到这里就算我们的集群部署成功了，接下来就可以根据我们的需要安装一些附加的插件，比如 Dashboard、Heapster、Ingress-Controller等等。</p><div><h2 id="推荐文章">推荐文章<span style="font-size:0.45em; color:gray"></span></h2><ul><li><a href="https://hanyajun.com/kubernetes/kubenetes_concept/">kubernetes从入门到放弃--k8s基本概念</a></li><li><a href="https://hanyajun.com/kubernetes/kubernetes_architecture/">kubernetes从入门到放弃--k8s基本架构</a></li><li><a href="http://blog.tianfeiyu.com/2019/10/12/k8s_improvements/">大规模场景下 kubernetes 集群的性能优化</a></li><li><a href="http://yoursite.com/2019/10/12/k8s_improvements/">大规模场景下 kubernetes 集群的性能优化</a></li><li><a href="http://yoursite.com/2019/07/12/k8s_components_ha/">部署高可用 kubernetes 集群</a></li></ul></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="kubernetes" scheme="https://hanyajun.com/categories/kubernetes/"/>
    
    
      <category term="kubernetes" scheme="https://hanyajun.com/tags/kubernetes/"/>
    
  </entry>
  
  <entry>
    <title>夜雨思愁</title>
    <link href="https://hanyajun.com/life/rain_worry/"/>
    <id>https://hanyajun.com/life/rain_worry/</id>
    <published>2019-04-20T19:21:00.000Z</published>
    <updated>2019-04-25T09:14:38.955Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><br><div align="center">  <iframe  frameborder="0" src="https://v.qq.com/txp/iframe/player.html?vid=v0860quuboz" allowfullscreen="true" style="z-index:1;" height="auto" width="auto"></iframe></div><br><h3 id="夜雨思愁">夜雨思愁</h3><p>  今天晚上深圳大雨，可能是早上起得比较晚，现在还没有一点睡意，窗外大雨淅沥，刚刚弄完博客的自己不禁思绪万千。不知不觉再次来深圳已经26天了，毕业已经快两年了，有些读研的同学今年就要毕业开始工作了，不敢去想如果自己坚持保研读研后现在的自己是怎么样的，和我家宝宝已经谈恋爱谈了1515天了，这些年很多时候都是异地，苦了宝宝，很对不起她，但我也很幸运自己有一个信任我，至始至终支持我的宝宝，这次来深圳她也是非常支持我和理解我，希望未来的自己一定要好好努力，珍惜那个一直陪伴身边的她，给她自己想给予她的生活和一个温馨的家。<br><br>  毕业这两年，自己回顾了下，还是有很多东西值得自己去反思的。两年不到，已经换到了第三家公司了，在外界看来可能是我太跳了，但是每一次跳槽都是或多或少有些原因的，虽然后面去小米还是有点鲁莽，可能还是<strong>too young to simple</strong>,有些东西并不是别人宣传的那样，去了才知道究竟，去了小米，虽然不到半年，但自己不后悔，雷总曾经是自己IT界的偶像，当然现在也是，不过光谈“永远相信美好的事情即将发生”没有什么用，总之一切尽在不言中，还是安静地作个米粉比较好。本来自己是很犹豫的，但是确实小米的那种工作氛围还有状态不是自己想要的，无意中看到了上面的马云的讲话还有雷总的一个短视频，自己看完就立即下定决心了，还是得去追求自己想要的平台和氛围。<br></p><div align="center"><iframe frameborder="0" src="https://v.qq.com/txp/iframe/player.html?vid=o0862f1gj35" allowfullscreen="true" style="z-index:1;" height="auto" width="auto"></iframe></div><br>   &emsp;&emsp;来这边这些天，还是挺开心的，和高中室友合租，每天一起做饭，带饭，周末还去一起打打球，每天也过得比较充实。<br><div align="center"><img src="http://cdn.hanyajun.com/foods3.jpg" height="100%" width="100%"><p><br><br><br></p><img src="http://cdn.hanyajun.com/play3_lanqiu.jpg" height="50%" width="80%" style="transform:rotate(90deg);"><p><br><hr><br><br><img src="http://cdn.hanyajun.com/play4_lanqiu.jpg" height="50%" width="80%" style="transform:rotate(-90deg);"></p></div><br><br><br>   &emsp;&emsp;清明节，还和小伙伴（TCL）一起去珠海穷玩了一趟，玩得还不错，曾经的HTC又再次重逢了，这次HTC,TCL再次齐聚深圳了，在家靠朋友，在外靠兄弟。很幸运身边有这样几个难得的兄弟,从毕业一起坐火车拖着行李在深圳找房，到现在各自能够独当一面,深圳是一个奇迹的城市，HTCL加油。<br><div align="center"><img src="http://cdn.hanyajun.com/htc.jpg" height="80%" width="80%"> <br><img src="http://cdn.hanyajun.com/tcl1.jpg" height="50%" width="50%"><br><img src="http://cdn.hanyajun.com/htcl1.jpg" height="50%" width="50%" style="transform:rotate(180deg);"></div>      &emsp;&emsp;选择了自己还是不后悔，背井离乡，选择异地，南漂深圳，来了咱就要好好闯一番，以前的自己还是有点浮躁，这次来感觉自己心态明显好了很多，对于未来也比以前更加清晰和自信，想到了一句描述项羽的诗句，“江东弟子多才俊，卷土重来未可知”，今天把以前废弃的博客还有公众号捡起来了，落下太多了，得慢慢补回来了，后面得坚持下去。突然发现天色不早了,得去休息了，晚安。<br>    <div id="aplayer-nAxHPNLs" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="004KvnQu2AnzoV" data-server="tencent" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="false" data-listmaxheight="340px" data-preload="none" data-theme="#ad7a86"></div><div><h2 id="推荐文章">推荐文章<span style="font-size:0.45em; color:gray"></span></h2><ul><li><a href="https://jarrychen.xyz/archives/c4c6c350.html">[持续更新] | 写给2019, 期待2020</a></li><li><a href="www.chunlife.top/2019/03/19/搜集赏/">搜集赏</a></li><li><a href="chunlife.top/2019/03/19/搜集赏/">搜集赏</a></li></ul></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="life" scheme="https://hanyajun.com/categories/life/"/>
    
    
      <category term="随笔" scheme="https://hanyajun.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>kubernetes从入门到放弃--k8s基本架构</title>
    <link href="https://hanyajun.com/kubernetes/kubernetes_architecture/"/>
    <id>https://hanyajun.com/kubernetes/kubernetes_architecture/</id>
    <published>2019-04-20T15:15:00.000Z</published>
    <updated>2019-04-25T09:14:38.933Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="kubernetes总架构图">kubernetes总架构图</h3><p><img src="http://cdn.hanyajun.com/k8s-arch.jpg" alt="image"></p><h3 id="kubernetes-各组件介绍">kubernetes 各组件介绍</h3><h4 id="master-节点">Master 节点</h4><p>Master是kubernetes的大脑，运行的Deamon 服务包括kube-apiserver、kube-scheduler、kube-contronller-</p><p>manager、etcd和pod网络</p><p><img src="http://cdn.hanyajun.com/k8s_master.jpeg" alt="image"></p><h5 id="各组件介绍">各组件介绍</h5><ul><li><p><strong>API Server</strong>（kube-apiserver）<br></p><p>API Server提供HTTP/HTTPS RESTful API，即Kubernetes API。API Server是Kubernetes　Cluster的前端接</p><p>口，各种客户端工具（CLI或UI）以及Kubernetes其他组件可以通过它管理Cluster的各种资源。</p></li><li><p><strong>Scheduler</strong>（kube-scheduler） <br></p><p>Scheduler负责决定将Pod放在哪个Node上运行。Scheduler在调度时会充分考虑Cluster的拓扑结构，当前各个</p><p>节点的负载，以及应用对高可用、性能、数据亲和性的需求。</p></li><li><p><strong>Controller Manager</strong>（kube-controller-manager） <br></p><p>Controller Manager负责管理Cluster各种资源，保证资源处于预期的状态。Controller Manager由多种Controller</p><p>组成，包括replication controller、endpoint controller、namespace controller、serviceaccounts controller等。</p><p>不同的controller管理不同的资源。例如，replication controller管理Deployment、StatefulSet、DaemonSet的生</p><p>命周期，namespace controller管理Namespace资源。</p></li><li><p><strong>etcd</strong> <br></p><p>etcd负责保存Kubernetes Cluster的配置信息和各种资源的状态信息。当数据发生变化时，etcd会快速通知</p><p>Kubernetes相关组件。</p></li><li><p><strong>Pod网络</strong> <br></p><p>Pod要能够相同通信，Kubernetes Cluster必须部署Pod网络，flannel是其中一个可选方案。</p></li></ul><h5 id="master工作流程图">master工作流程图</h5><p><img src="http://cdn.hanyajun.com/k8s_master_workflow.png" alt="image"></p><ol><li><p>Kubecfg将特定的请求，比如创建Pod，发送给Kubernetes Client。</p></li><li><p>Kubernetes Client将请求发送给API server。</p></li><li><p>API Server根据请求的类型，比如创建Pod时storage类型是pods，然后依此选择何种REST Storage API对请求作出处理。</p></li><li><p>REST Storage API对的请求作相应的处理。</p></li><li><p>将处理的结果存入高可用键值存储系统Etcd中。</p></li><li><p>在API Server响应Kubecfg的请求后，Scheduler会根据Kubernetes Client获取集群中运行Pod及Minion/Node信息。</p></li><li><p>依据从Kubernetes Client获取的信息，Scheduler将未分发的Pod分发到可用的Minion/Node节点上。</p></li></ol><h4 id="node节点">Node节点</h4><p>Node节点属于工作节点,是pod运行的地方。</p><p><img src="http://cdn.hanyajun.com/k8s_node.jpg" alt="image"></p><h5 id="各组件介绍">各组件介绍</h5><ol><li><p><strong>kubelet</strong>　<br></p><p>node的agent，当scheduler去确定在某个node上运行pod后，会将pod的具体配置信息发送给该节点的</p><p>kubelet， kubelet会根据遮羞信息创建和运行容器，并向master报告运行状态。</p></li><li><p><strong>kube-proxy</strong> <br></p><p>每个node都会运行kube-proxy服务，外界通过service访问pod，kube-proxy负责将降访问service的TCP/UDP数</p><p>据流转发到后端的容器。如果有多个副本，kube-proxy会实现负载均衡。</p></li><li><p><strong>pod网络</strong>  <br></p><p>pod能能够互相通信，k8s集群必须部署pod网络，flannel是其中一个可以选择的方案</p></li></ol><h5 id="kubectl-架构解读">kubectl 架构解读</h5><p><img src="http://cdn.hanyajun.com/kubelet.png" alt="image"></p><h6 id="kubelet节点上的pod管家">Kubelet[节点上的Pod管家]</h6><p>负责Node节点上pod的创建、修改、监控、删除等全生命周期的管理<br>定时上报本Node的状态信息给API Server。</p><p>kubelet是Master API Server和Minion/Node之间的桥梁，接收Master API Server分配给它的commands和work，</p><p>通过kube-apiserver间接与Etcd集群交互，读取配置信息。<br>具体的工作如下：</p><ol><li><p>设置容器的环境变量、给容器绑定Volume、给容器绑定Port、根据指定的Pod运行一个单一容器、给指定的Pod创建network 容器。</p></li><li><p>同步Pod的状态、同步Pod的状态、从cAdvisor获取container info、 pod info、 root info、 machine info。</p></li><li><p>在容器中运行命令、杀死容器、删除Pod的所有容器。</p></li></ol><p>参考链接：<a href="https://yq.aliyun.com/articles/47308?spm=5176.100240.searchblog.19.jF7FFa" target="_blank" rel="noopener">https://yq.aliyun.com/articles/47308?spm=5176.100240.searchblog.19.jF7FFa</a></p><div><h2 id="推荐文章">推荐文章<span style="font-size:0.45em; color:gray"></span></h2><ul><li><a href="https://hanyajun.com/kubernetes/kubenetes_concept/">kubernetes从入门到放弃--k8s基本概念</a></li><li><a href="https://hanyajun.com/kubernetes/kubernetes_kubeadm/">kubernetes从入门到放弃--使用kubeadm快速安装kubernetes</a></li><li><a href="http://blog.tianfeiyu.com/2019/10/12/k8s_improvements/">大规模场景下 kubernetes 集群的性能优化</a></li><li><a href="http://yoursite.com/2019/10/12/k8s_improvements/">大规模场景下 kubernetes 集群的性能优化</a></li><li><a href="http://yoursite.com/2019/07/12/k8s_components_ha/">部署高可用 kubernetes 集群</a></li></ul></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="kubernetes" scheme="https://hanyajun.com/categories/kubernetes/"/>
    
    
      <category term="kubernetes" scheme="https://hanyajun.com/tags/kubernetes/"/>
    
  </entry>
  
  <entry>
    <title>kubernetes从入门到放弃--k8s基本概念</title>
    <link href="https://hanyajun.com/kubernetes/kubenetes_concept/"/>
    <id>https://hanyajun.com/kubernetes/kubenetes_concept/</id>
    <published>2019-04-18T02:51:00.000Z</published>
    <updated>2019-04-25T09:10:41.414Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h4 id="kubernetes架构图">kubernetes架构图</h4><p>下图为kubernetes的master架构图<br><img src="https://jimmysong.io/kubernetes-handbook/images/kubernetes-high-level-component-archtecture.jpg" alt="image"></p><h3 id="1-cluster">1. <strong>Cluster</strong></h3><p>cluster是计算、存储和网络资源的集合，kubernetes利用这些资源运行各种基于容器的应用。</p><h3 id="2-master">2. <strong>Master</strong></h3><p>Master 是Cluster的大脑，它的主要职能就是负责调度，决定应用放在哪里运行。master运行linux操作系统，可以是物理机或者虚拟机。为了实现高可用，可以运行多个Master。</p><h3 id="3-node">3. Node</h3><p>Node 的职责是运行容器应用。Node由Master管理，Node负责监控并汇报容器的状态，同时根据Master的要求管理容器的生命周期。Node运行在linux系统上，可以是物理机或者虚拟机。</p><h3 id="4-pod">4. Pod</h3><p>Pod是kubernetes的最小工作单元。每个pod可以包含一个或者多个容器。Pod中的容器会作为一个整体被Master调度到一个Node上运行。kubernetes 以<strong>Pod</strong>为最小单位进行调度、扩展、共享资源、管理生命周期；pod中的所有容器都共享一个网络namespace，所有的容器可以共享存储。</p><ul><li>pod有两种使用方式：</li></ul><ol><li>运行单一容器：<br><br>one-container-per-Pod 是kubernetes最常见的模型，这种情况下，只是将单个容器简单封装成pod。即使只有一个容器，kubernetes管理的也是pod而不是直接管理容器。</li><li>运行多个容器:<br><br>运行在同一个pod的的多个容器必须联系紧密，而且直接共享资源。</li></ol><h3 id="5-controller">5. Controller</h3><p>kubernetes通常不会直接去创建pod，而是通过Controller去管理pod的，Controller中定义了Pod的部署特性，比如有几个副本、什么样的Node上运行等。为了满足不同的业务场景，kubernetes提供了多种Controller，包括Deployment、ReplicaSet、DeamonSet、StatefuleSet、Job等，我们逐一讨论。</p><ul><li>Deployment :是最常用的的Controller，deployment可以管理pod的多个副本，并确保pod按照预期的状态来运行。</li><li>ReplicaSet : 实现了pod的多副本管理。使用Deployment时会自动创建Replicaset。</li><li>DeamonSet: 用于每个Node最多只能运行一个Pod副本的场景。</li><li>StatefuleSet:能够保证Pod的每个副本在整个生命周期中名称是不变的，而其它Controller是提供这个功能。当某个Pod发生故障需要删除并且重新启动时，Pod的名称会发生变化，同时StatefuleSet会保证副本按照固定的顺序启动、更新或者删除。</li><li>Job 用于运行就删除的应用，而其他Controller　中的ｐｏｄ通常是持续运行的。</li></ul><h3 id="6-service">6. Service</h3><p>Deployment 可以部署多个副本，每个Pod都有自己的Ip，那么外界如何访问这些副本呢？Kubernetes Service 定义了外界访问一组特定Pod的方式。Service 有自己的IP和端口，Service为pod提供了负载均衡。K8s运行容器Pod与访问容器Pod这两项任务分别由Controller和Service执行。</p><h3 id="7-namespace">7. Namespace</h3><p>如果有多个用户或者项目组共同使用k8s 集群，如果将他们创建的Pod等资源分开呢，就是通过Namespace进行隔离。</p><div><h2 id="推荐文章">推荐文章<span style="font-size:0.45em; color:gray"></span></h2><ul><li><a href="https://hanyajun.com/kubernetes/kubernetes_kubeadm/">kubernetes从入门到放弃--使用kubeadm快速安装kubernetes</a></li><li><a href="https://hanyajun.com/kubernetes/kubernetes_architecture/">kubernetes从入门到放弃--k8s基本架构</a></li><li><a href="http://blog.tianfeiyu.com/2019/10/12/k8s_improvements/">大规模场景下 kubernetes 集群的性能优化</a></li><li><a href="http://yoursite.com/2019/10/12/k8s_improvements/">大规模场景下 kubernetes 集群的性能优化</a></li><li><a href="http://yoursite.com/2019/07/12/k8s_components_ha/">部署高可用 kubernetes 集群</a></li></ul></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="kubernetes" scheme="https://hanyajun.com/categories/kubernetes/"/>
    
    
      <category term="kubernetes" scheme="https://hanyajun.com/tags/kubernetes/"/>
    
  </entry>
  
</feed>
